{"version":3,"sources":["CaseFatalityRatesByAgeBarChart/BarChart.module.css","utils/useCookies.js","CasesLineChart/LineChart.module.css","TaiwanView/ChoroplethMap/ChoroplethMap.module.css","OverviewPie/OverviewPie.module.css","fonts/NotoSansMono-CondensedBold.ttf","elements/CommonUIs.js","TaiwanView/ChoroplethMap/useData.js","TaiwanView/ChoroplethMap/AxisBottom.js","TaiwanView/ChoroplethMap/TaiwanMarks.js","TaiwanView/ChoroplethMap/Map.js","TaiwanView/ChoroplethMap/index.js","TaiwanView/ChoroplethMap/useTaiwanAtlas.js","TaiwanView/index.js","Charts.js","elements/AppTitle.js","elements/NavBar.js","OverviewPie/ColorLegend.jsx","OverviewPie/DataTable.jsx","OverviewPie/PieLabel.jsx","OverviewPie/PieChart.jsx","OverviewPie/Collapsible.jsx","OverviewPie/index.jsx","OverviewPie/useData.jsx","CasesLineChart/useData.js","CasesLineChart/ChartTitle.jsx","CasesLineChart/DataTable.jsx","CasesLineChart/AxisBottom.js","CasesLineChart/AxisLeft.js","CasesLineChart/XMarkerLine.js","CasesLineChart/RectOverlay.js","CasesLineChart/LineChart.jsx","CasesLineChart/Collapsible.jsx","CasesLineChart/index.js","CaseFatalityRatesByAgeBarChart/AxisBottom.js","CaseFatalityRatesByAgeBarChart/AxisLeft.js","CaseFatalityRatesByAgeBarChart/Marks.js","CaseFatalityRatesByAgeBarChart/BarChart.jsx","CaseFatalityRatesByAgeBarChart/Collapsible.jsx","CaseFatalityRatesByAgeBarChart/index.js","CaseFatalityRatesByAgeBarChart/useData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","findCookie","key","document","cookie","split","find","row","startsWith","setCookie","value","newCookie","cookieExists","some","item","trim","LoadSpinner","className","Card","children","Footer","href","useData","useState","data","setData","useEffect","isMounted","json","CORS","then","rawData","map","d","Date","a01","a02","a03","a04","a05","a06","transformData","AxisBottom","xScale","innerHeight","width","colorScale","tickCount","tickOffset","ref","useRef","xAxisG","select","current","xAxis","axisBottom","ticks","tickSize","tickPadding","call","selectAll","style","attr","transform","id","offset","stopColor","range","x","y","height","fill","styles","tick","TaiwanMarks","atlas","counties","interiors","onHover","hoveredValue","points","setPoints","window","innerWidth","path","geoPath","marks","features","feature","i","properties","COUNTYNAME","onTouchStart","event","preventDefault","pointer","onMouseMove","onPointerMove","tooltipStroke","textAnchor","tooltip","viewBoxWidth","xAxisTickFormat","legendWidth","legendPadding","Slider","selected","handleChange","sliderContainer","slider","type","min","max","length","indexOf","onChange","e","target","Map","view","selectedDate","setSelectedDate","setHoveredValue","filteredData","filter","allDates","Array","from","Set","reverse","transformedData","obj","date","dateString","縣市別","累計確診人數","區域","valueOf","scaleSequential","interpolateGreys","domain","scaleLinear","viewBox","preserveAspectRatio","tickFormat","ChartTitle","title","ChoroplethMap","taiwanAtlas","topology","objects","nation","districts","mesh","a","b","useTaiwanAtlas","TaiwanView","CheckError","response","ok","Error","statusText","transposeKeyValue","Object","entries","calDailyDifference","cur","index","array","calPercentage","numerator","denominator","Number","toFixed","useDataApi","initialUrl","initialData","transformFn","url","setUrl","isLoading","setIsLoading","isError","setIsError","fetch","console","error","fetchData","CountriesDropDownMenu","chosen","setChosen","items","setItems","label","province","country","currentTarget","BarChart","containerComponent","labels","datum","_y","labelComponent","constrainToVisibleArea","padding","top","bottom","left","right","fixLabelOverlap","dependentAxis","grid","stroke","strokeWidth","strokeDasharray","LoadingSpinner","RadioButton","props","changed","checked","isSelected","htmlFor","SmallTable","heading","toLocaleString","DailyLineChartInAnArea","chart_type","lineData","setLineData","CHART_TYPES","newCases","newDeaths","deathRate","area_name","found","cases","timeline","deaths","new_cases","new_deaths","death_rate","slice","getSTItems","AreasWithOutstandingCasesTable","sortBy","setSortBy","sort","todayCases","todayDeaths","getToday","time","getFullYear","getMonth","getDate","AppTitle","NavBar","setView","buttons","name","view_name","button","ViewButton","onClick","ColorLegend","tickSpacing","tickTextOffset","fadeOpacity","domainValue","legend","onMouseEnter","onMouseLeave","opacity","r","dy","DataTable","dataType","dataValue","reduce","acc","PieLabel","pieLabelPosition","percentage","labelOffsetY","dominantBaseline","PieChart","pieData","pieArc","colorPie","colorValue","centroid","endAngle","startAngle","dataPercentage","sum","pieChart","pieLabelStroke","pieLabel","Collapsible","pieRadius","pieOuterMargin","legendX","legendY","arc","innerRadius","outerRadius","case","color","OverviewPie","recovered","active","pie","scaleOrdinal","SourceCredit","legendLabel","parseDay","timeParse","csv","World","AxisLeft","yScale","yAxisG","yAxis","axisLeft","XMarkerLine","markerLineX","markerLineY2","markerLine","x1","y1","x2","y2","RectOverlay","areaGenerator","useMemo","captureArea","bisectCenter","margin","xValue","timeFormat","xTooltipFormat","yValue","siFormat","format","yAxisTickFormat","tickValue","LineChart","activeData","setActiveData","scaleTime","extent","nice","handleVoronoiHover","useCallback","area","y0","curve","curveNatural","Tooltip","fontWeight","dataPoint","sumValuesInObject","prev","CasesLineChart","lastSevenDaysAvg","beforeSevenDaysAvg","tableData","Math","round","countryScale","ageScale","bandwidth","fontSize","Marks","ageGroups","countryValue","tooltipFormat","Country","columns","scaleBand","paddingInner","schemeTableau10","CaseFatalityRatesByAgeBarChart","autoType","GlobalView","App","PullToRefresh","init","mainElement","onRefresh","location","reload","iconArrow","ReactDOMServer","renderToString","icon","faSyncAlt","iconRefreshing","spin","destroyAll","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,KAAO,uBAAuB,YAAc,8BAA8B,OAAS,2B,kBCqB7KD,EAAOC,QAAU,CACfC,WAvBiB,SAAAC,GACjB,OAAOC,SAASC,OACbC,MAAM,MACNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAJ,UAAkBN,EAAlB,SACZG,MAAM,KAAK,IAoBdI,UAjBgB,SAACP,EAAKQ,GACtB,IAAIC,EAAS,UAAMT,EAAN,YAAaQ,GAC1BC,GAAa,+BACbR,SAASC,OAASO,GAelBC,aAZmB,SAAAV,GACnB,QACEC,SAASC,OAAOC,MAAM,KAAKQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAAOP,WAAZ,UAA0BN,EAA1B,Y,mBCd5CH,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,KAAO,wBAAwB,WAAa,8BAA8B,QAAU,2BAA2B,YAAc,+BAA+B,UAAY,6BAA6B,QAAU,2BAA2B,cAAgB,mC,mBCAtVD,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,UAAY,iCAAiC,OAAS,8BAA8B,WAAa,kCAAkC,KAAO,4BAA4B,kBAAkB,uCAAuC,aAAa,kCAAkC,iBAAiB,sCAAsC,gBAAgB,qCAAqC,gBAAgB,qCAAqC,gBAAkB,uCAAuC,QAAU,+BAA+B,cAAgB,uC,+DCAxlBD,EAAOC,QAAU,CAAC,SAAW,8BAA8B,SAAW,8BAA8B,eAAiB,oCAAoC,YAAc,iCAAiC,OAAS,4BAA4B,SAAW,gC,6FCDzO,I,kDCGFgB,EAAc,WACzB,OACE,sBAAKC,UAAU,cAAf,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,4BAKOC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUF,EAAb,EAAaA,UAAb,OAClB,oBAAIA,UAAS,4BAAuBA,EAAY,IAAMA,EAAY,IAAlE,SACE,qBAAKA,UAAU,YAAf,SAA4BE,OAQnBC,EAAS,kBACpB,qBAAKH,UAAU,SAAf,SACE,2CACS,mBAAGI,KAAK,4BAAR,0BADT,+B,iBCVSC,EAAU,WACrB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,qBAAU,WACR,IAAIC,GAAY,EAOhB,OAHAC,YAtBYC,6JAsBEC,MAAK,SAACC,GACdJ,GAAWF,EArBC,SAACM,GAAD,OACpBA,EAAQC,KAAI,SAACC,GAOX,OANAA,EAAE,gBAAQ,IAAIC,KAAKD,EAAEE,KACrBF,EAAE,sBAASA,EAAEG,IACbH,EAAE,gBAAQA,EAAEI,IACZJ,EAAE,yCAAaA,EAAEK,IACjBL,EAAE,yCAAaA,EAAEM,IACjBN,EAAE,iEAAiBA,EAAEO,IACdP,KAakBQ,CAAcV,OAEhC,WACLJ,GAAY,KAEb,IACIH,G,iBCnCIkB,EAAa,SAAC,GAQpB,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,YACAC,EAKI,EALJA,MACAC,EAII,EAJJA,WAII,IAFJC,iBAEI,MAFQ,EAER,MADJC,kBACI,MADS,EACT,EACEC,EAAMC,mBAcZ,OAZAxB,qBAAU,WACR,IAAMyB,EAASC,YAAOH,EAAII,SACpBC,EAAQC,YAAWZ,GACtBa,MAAMT,GACNU,UAAS,IACTC,YAAYV,GACfG,EACGQ,KAAKL,GACLM,UAAU,QACVC,MAAM,cAAe,UACrBC,KAAK,KAAM,YACb,CAACnB,EAAQC,EAAaI,EAAYD,IAEnC,mCACE,oBAAGgB,UAAS,oBAAef,EAAf,QAAZ,UACE,+BACE,iCAAgBgB,GAAG,iBAAnB,UACE,sBAAMC,OAAO,KAAKC,UAAWpB,EAAWqB,QAAQ,KAChD,sBAAMF,OAAO,OAAOC,UAAWpB,EAAWqB,QAAQ,UAGtD,sBACEC,EAAG,EACHC,EAAGzB,EAxBU,GAyBbC,MAAOA,EACPyB,OA1Ba,GA2BbC,KAAI,2BAEN,mBACEtB,IAAKA,EACLhC,UAAWuD,IAAOC,KAClBV,UAAS,uBAAkBnB,EAAlB,aCzCN8B,EAAc,SAAC,GAMrB,IAAD,IALJC,MAASC,EAKL,EALKA,SACTpD,GAII,EALeqD,UAKf,EAJJrD,MACAsB,EAGI,EAHJA,WACAgC,EAEI,EAFJA,QACAC,EACI,EADJA,aAEA,EAA4BxD,mBAAS,MAArC,mBAAOyD,EAAP,KAAeC,EAAf,KACMpC,EAAQqC,OAAOC,WACfC,EAAOC,cACb,OACE,mCACE,oBAAGpE,UAAWuD,IAAOc,MAArB,UACGV,EAASW,SAASvD,KAAI,SAACwD,EAASC,GAC/B,IAAMxD,EAAIuD,EAAQE,WAAWC,WAC7B,OACE,sBACEpB,KAAMtC,EAAIa,EAAWtB,EAAKS,IAnBf,QAqBXA,EAAGmD,EAAKI,GACRI,aAAc,SAACC,GACbA,EAAMC,iBACNhB,EAAQ7C,GACRgD,EAAUc,YAAQF,KAEpBG,YAAa,SAACH,GACZf,EAAQ7C,GACRgD,EAAUc,YAAQF,KAEpBI,cAAe,SAACJ,GACdf,EAAQ7C,GACRgD,EAAUc,YAAQF,MAbfJ,MAkBVV,EACC,8BACE,uBACE9D,UAAWuD,IAAO0B,cAClB9B,EAAGY,EAAO,GACVX,EAAGW,EAAO,GACVmB,WAAYnB,EAAO,GAAKnC,EAAQ,EAAI,MAAQ,QAJ9C,UAMGkC,EANH,iCAMsBvD,EAAKuD,MAE3B,uBACE9D,UAAWuD,IAAO4B,QAClBhC,EAAGY,EAAO,GACVX,EAAGW,EAAO,GACVmB,WAAYnB,EAAO,GAAKnC,EAAQ,EAAI,MAAQ,QAJ9C,UAMGkC,EANH,iCAMsBvD,EAAKuD,SAG3B,WCtDNlC,EAAQqC,OAAOC,WAAa,IAAMD,OAAOC,WAAa,IACtDb,EAASzB,EAAQ,IAAc,GAARA,EAAsB,IAARA,EACrCwD,EAAexD,EAAQ,GAEvByD,EAAkB,SAACrE,GAAD,OAAOA,GAEzBsE,EAAcF,EAAeG,GAY7BC,EAAS,SAAC,GAAD,IAAGtC,EAAH,EAAGA,MAAOuC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,aAApB,OACb,sBAAK1F,UAAWuD,IAAOoC,gBAAvB,UACE,8BAAMF,IACN,uBACEzF,UAAWuD,IAAOqC,OAClBC,KAAK,QACLC,IAAI,IACJC,IAAK7C,EAAM8C,OAAS,EACpBvG,MAAOyD,EAAM+C,QAAQR,GACrBS,SAAU,SAACC,GAAD,OAAOT,EAAaxC,EAAMiD,EAAEC,OAAO3G,eAKtC4G,EAAM,SAAC,GAA2B,IAAzB9F,EAAwB,EAAxBA,KAAMmD,EAAkB,EAAlBA,MAAO4C,EAAW,EAAXA,KACjC,EAAwChG,mBAASC,EAAK,GAAGW,KAAzD,mBAAOqF,EAAP,KAAqBC,EAArB,KACA,EAAwClG,mBAAS,MAAjD,mBAAOwD,EAAP,KAAqB2C,EAArB,KAGMC,EACK,uBAATJ,EACI/F,EAAKoG,QAAO,SAAC3F,GAAD,MAAmB,iBAAZA,EAAE,mBACrBT,EAAKoG,QAAO,SAAC3F,GAAD,OAAOA,EAAE,wBAAWsF,KAEhCM,EAAWC,MAAMC,KACrB,IAAIC,IAAIL,EAAa3F,KAAI,SAACC,GAAD,OAAOA,EAAEE,SAClC8F,UAMIC,EA1Cc,SAAC1G,EAAM+F,GAC3B,IAAIY,EAAM,CAAEC,KAAM5G,EAAK,GAAG,gBAAO6G,WAAY7G,EAAK,GAAGW,KAMrD,MALa,uBAAToF,EACF/F,EAAKQ,KAAI,gBAAGsG,EAAH,EAAGA,mBAAKC,EAAR,EAAQA,qCAAR,OAAsBJ,EAAIG,GAAOC,KAE1C/G,EAAKQ,KAAI,gBAAGwG,EAAH,EAAGA,aAAID,EAAP,EAAOA,qCAAP,OAAqBJ,EAAIK,GAAMD,KAEnCJ,EAmCiB1F,CAJHkF,EAAaC,QAChC,SAAC3F,GAAD,OAAOA,EAAE,gBAAMwG,YAAc,IAAIvG,KAAKsF,GAAciB,aAGFlB,GAE9CzE,EAAa4F,YAAgBC,KAAkBC,OAAO,CAC1D,EACA5B,YAAIW,EAAa3F,KAAI,SAACC,GAAD,OAAOA,EAAE,8CAG1BU,EAASkG,cACZ1E,MAAM,CAAC,EAAGoC,IACVqC,OAAO9F,EAAW8F,UAErB,OACE,qCACE,cAAC,EAAD,CACEzE,MAAO0D,EACPnB,SAAUc,EACVb,aAAcc,IAEhB,sBACEqB,QAAO,cAASzC,EAAT,YAAyB/B,GAChCyE,oBAAoB,WAFtB,UAIE,cAAC,EAAD,CACEpE,MAAOA,EACP7B,WAAYA,EACZtB,KAAM0G,EACNnD,aAAcA,EACdD,QAAS4C,IAEX,cAAC,EAAD,CACE9E,YAAa0B,EACbzB,MAAO0D,EACP5D,OAAQA,EACRG,WAAYA,EACZkG,WAAY1C,EACZtD,WAhFY,EAiFZD,UAAW,WCrFfkG,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,qBAAKjI,UAAU,cAAf,SAA8BiI,KAEnDC,EAAgB,WAE3B,IAAMC,ECDsB,WAC5B,MAAwB7H,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAkBA,OAfAC,qBAAU,WACRE,YARF,yEAQgBE,MAAK,SAACuH,GAElB,MAAwCA,EAASC,QAAzCC,EAAR,EAAQA,OAAQ3E,EAAhB,EAAgBA,SAAU4E,EAA1B,EAA0BA,UAC1B/H,EAAQ,CAGN8H,OAAQ/D,YAAQ6D,EAAUE,GAC1B3E,SAAUY,YAAQ6D,EAAUzE,GAC5B4E,UAAWhE,YAAQ6D,EAAUG,GAE7B3E,UAAW4E,YAAKJ,EAAUG,GAAW,SAACE,EAAGC,GAAJ,OAAUD,IAAMC,YAGxD,IACInI,EDlBaoI,GACd7H,EAAUT,IAEhB,OAAKS,GAAYqH,EAGf,qCACE,cAAC,EAAD,CAAYF,MAZJ,oEAaR,cAAC,EAAD,CAAK3B,KAAM,qBAAO5C,MAAOyE,EAAa5H,KAAMO,OALX,cAAC,EAAD,KEH1B8H,EAAa,kBACxB,oBAAI5I,UAAU,iBAAd,SACE,cAAC,EAAD,UACE,cAAC,EAAD,S,gFCVA6I,G,iDAAa,SAACC,GAClB,GAAIA,EAASC,GACX,OAAOD,EAASnI,OAEhB,MAAMqI,MAAMF,EAASG,cAKnBC,EAAoB,SAAC3I,GAAD,OACxB4I,OAAOC,QAAQ7I,GAAMQ,KAAI,yCAAmB,CAG1CoC,EAHuB,KAIvBC,EAJuB,UAQrBiG,EAAqB,SAAC9I,GAAD,OACzBA,EAAKQ,KAAI,SAACuI,EAAKC,EAAOC,GAAb,mBAAC,eACLF,GADI,IAEPlG,EAAGmG,EAAQ,EAAID,EAAIlG,EAAIoG,EAAMD,EAAQ,GAAGnG,EAAI,QAG1CqG,EAAgB,SAACC,EAAWC,GAAZ,OACpBC,QAASF,EAAYC,EAAe,KAAKE,QAAQ,KAU7CC,EAAa,SAACC,EAAYC,EAAaC,GAC3C,MAAwB3J,mBAAS0J,GAAjC,mBAAOzJ,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAASyJ,GAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAkC7J,oBAAS,GAA3C,mBAAO8J,EAAP,KAAkBC,EAAlB,KACA,EAA8B/J,oBAAS,GAAvC,mBAAOgK,EAAP,KAAgBC,EAAhB,KAkBA,OAjBA9J,qBAAU,WACR,IAAIC,GAAY,EAYhB,OAXe,uCAAG,4BAAA+H,EAAA,+EAEK+B,MAAMN,GAAKrJ,KAAKgI,GAFrB,OAERtI,EAFQ,OAGVG,GAAWF,EAASyJ,GAAeA,EAAY1J,IAAUA,GAH/C,gDAKVG,GAAW6J,GAAW,GAC1BE,QAAQC,MAAR,MANc,QAQZhK,GAAW2J,GAAa,GARZ,yDAAH,oDAUfM,GACO,WACLjK,GAAY,KAEb,CAACuJ,EAAaC,IACV,CAAC,CAAE3J,OAAM6J,YAAWE,WAAWH,IA2DlCS,EAAwB,SAAC,GAAiC,IAA/BrK,EAA8B,EAA9BA,KAAMsK,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC7C,EAA0BxK,mBAAS,IAAnC,mBAAOyK,EAAP,KAAcC,EAAd,KASA,OARAvK,qBAAU,WACRuK,EACEzK,EAAKQ,KAAI,SAACC,GAAD,MAAQ,CACfiK,MAAOjK,EAAEkK,SAAWlK,EAAEkK,SAAW,KAAOlK,EAAEmK,QAAUnK,EAAEmK,QACtD1L,MAAOuB,EAAEkK,SAAWlK,EAAEkK,SAAWlK,EAAEmK,eAGtC,CAAC5K,IAEF,sBAAKP,UAAU,qBAAf,oBACU,IACR,wBAAQP,MAAOoL,EAAQ3E,SAAU,SAACC,GAAD,OAAO2E,EAAU3E,EAAEiF,cAAc3L,QAAlE,SACGsL,EAAMhK,KAAI,gBAAGkK,EAAH,EAAGA,MAAOxL,EAAV,EAAUA,MAAV,OACT,wBAAQO,UAAU,cAA0BP,MAAOA,EAAnD,SACGwL,GADkCA,YASzCI,EAAW,SAAC,GAAoB,IAAlB9K,EAAiB,EAAjBA,KAAM4C,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EAQ3B,OACE,qBAAKpD,UAAU,YAAf,SACE,eAAC,IAAD,CACEsL,mBACE,cAAC,IAAD,CACEC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACNA,EAAMrI,EAAN,UAAaqI,EAAMrI,EAAnB,aAAyBqI,EAAMC,IAA/B,UAAyCD,EAAMrI,GAA/C,aAAsDqI,EAAMC,KAE9DC,eAAgB,cAAC,IAAD,CAAkBC,wBAAsB,MAG5DC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IATnD,UAWE,cAAC,IAAD,CAAeC,iBAAe,IAC9B,cAAC,IAAD,CAAeC,eAAa,EAACD,iBAAe,EAACrJ,MArBhC,CACjBuJ,KAAM,CACJC,OAAQ,UACRC,YAAa,EACbC,gBAAiB,YAkBf,cAAC,IAAD,CAAc/L,KAAMA,EAAM4C,EAAGA,EAAGC,EAAGA,UAMrCmJ,EAAiB,WACrB,OACE,sBAAKvM,UAAU,cAAf,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,4BAKAwM,EAAc,SAACC,GACnB,OACE,sBAAKzM,UAAU,YAAf,UACE,uBACE+C,GAAI0J,EAAM1J,GACV8C,KAAK,QACLK,SAAUuG,EAAMC,QAChBC,QAASF,EAAMG,aAEjB,uBAAOC,QAASJ,EAAM1J,GAAtB,SAA2B0J,EAAMxB,YAKjC6B,EAAa,SAAC,GAAe,IAAb/B,EAAY,EAAZA,MACpB,OACE,qBAAK/K,UAAU,cAAf,SACE,kCACE,gCACE,6BACG+K,EAAMhK,KAAI,SAAClB,GAAD,OACT,6BAAwBA,EAAKkN,SAApBlN,EAAKkN,gBAIpB,gCACE,6BACGhC,EAAMhK,KAAI,SAAClB,EAAM0J,GAAP,OACT,oBAAIvJ,UAAU,iBAAd,SACGH,EAAK2L,MAAMwB,kBADsBzD,gBAY5C0D,EAAyB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAChC,EAAuCpD,EACrC,wDACA,MAFF,sBAASvJ,EAAT,EAASA,KAAM6J,EAAf,EAAeA,UAAWE,EAA1B,EAA0BA,QAI1B,EAA4BhK,mBAAS,MAArC,mBAAOuK,EAAP,KAAeC,EAAf,KACA,EAAgCxK,mBAAS,IAAzC,mBAAO6M,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,CAClBC,SAAU,sBACVC,UAAW,mBACXC,UAAW,qBAEPxF,EAAa,SAAC,GAA+B,IAA7BkF,EAA4B,EAA5BA,WAAYO,EAAgB,EAAhBA,UAChC,OACE,sBAAKzN,UAAU,cAAf,UACGqN,EAAYH,GACZO,MAkFP,OAzBAhN,qBAAU,WACR,GAAIF,EAAM,CACR,IAAImN,EAAQnN,EAAKlB,MACf,SAAC6H,GAAD,OACEA,EAAIgE,WAAaL,IAAY3D,EAAIgE,UAAYhE,EAAIiE,UAAYN,KAE7D8C,EAAQzE,EAAkBwE,EAAME,SAASD,OACzCE,EAAS3E,EAAkBwE,EAAME,SAASC,QAC1CC,EAAYzE,EAAmBsE,GAC/BI,EAAa1E,EAAmBwE,GAChCG,EAAaL,EAAM5M,KAAI,SAACuI,EAAKC,GAAN,MAAiB,CAC1CpG,EAAGmG,EAAInG,EACPC,EAAGqG,EAAcoE,EAAOtE,GAAOnG,EAAGkG,EAAIlG,IAAM,MAE9CgK,EAAY,CACVjC,QAASuC,EAAMvC,QACfD,SAAUwC,EAAMxC,SAChByC,MAAOA,EACPE,OAAQA,EACRP,SAAUQ,EACVP,UAAWQ,EACXP,UAAWQ,OAGd,CAACzN,EAAMsK,IAER,mCACE,sBAAK7K,UAAU,kBAAf,UACE,cAACgI,EAAD,CACEkF,WAAYA,EACZO,UACEN,EAASjC,SACLiC,EAASjC,SAAW,KAAOiC,EAAShC,QACpCgC,EAAShC,UAGhBb,GAAW,uDACXF,EACC,cAAC,EAAD,IAEA,qCACE,cAAC,EAAD,CACE7J,KAAMA,EACNsK,OAAQA,EACRC,UAAWA,IAEb,cAAC,EAAD,CAAYC,MAnGH,SAACmC,EAAY3M,GAAb,MAChB,CACC+M,SAAU,CACR,CACEP,QAAS,cACTvB,MAAOjL,EAAKoN,MAAQpN,EAAKoN,MAAMM,OAAO,GAAG,GAAG7K,EAAI,WAElD,CACE2J,QAAS,YACTvB,MAAOjL,EAAK+M,SAAW/M,EAAK+M,SAASW,OAAO,GAAG,GAAG7K,EAAI,WAExD,CACE2J,QAAS,gBACTvB,MAAOjL,EAAK+M,UAEN/M,EAAK+M,SAASW,OAAO,GAAG,GAAG7K,EAAI7C,EAAK+M,SAASW,OAAO,GAAG,GAAG7K,GAC1DyG,QAAQ,GACV,YAGR0D,UAAW,CACT,CACER,QAAS,eACTvB,MAAOjL,EAAKsN,OAAStN,EAAKsN,OAAOI,OAAO,GAAG,GAAG7K,EAAI,WAEpD,CACE2J,QAAS,aACTvB,MAAOjL,EAAKgN,UAAYhN,EAAKgN,UAAUU,OAAO,GAAG,GAAG7K,EAAI,WAE1D,CACE2J,QAAS,gBACTvB,MAAOjL,EAAKiN,UACRjN,EAAKiN,UAAUS,OAAO,GAAG,GAAG7K,EAAI,IAChC,YAGRoK,UAAW,CACT,CACET,QAAS,YACTvB,MAAOjL,EAAKoN,MAAQpN,EAAKoN,MAAMM,OAAO,GAAG,GAAG7K,EAAI,WAElD,CACE2J,QAAS,SACTvB,MAAOjL,EAAKsN,OAAStN,EAAKsN,OAAOI,OAAO,GAAG,GAAG7K,EAAI,WAEpD,CACE2J,QAAS,gBACTvB,MAAOjL,EAAKiN,UACRjN,EAAKiN,UAAUS,OAAO,GAAG,GAAG7K,EAAI,IAChC,aAGR8J,GA+CyBgB,CAAWhB,EAAYC,KAC1C,cAAC,EAAD,CAAU5M,KAAM4M,EAASD,KACzB,oBAAGlN,UAAU,WAAb,mDAEE,mBAAGI,KAAK,oCAAR,4BAFF,gBAwMN+N,EAAiC,WACrC,MAAuCrE,EACrC,kCACA,IAFF,sBAASvJ,EAAT,EAASA,KAAM6J,EAAf,EAAeA,UAAWE,EAA1B,EAA0BA,QAI1B,EAA4BhK,mBAAS,SAArC,mBAAO8N,EAAP,KAAeC,EAAf,KACA,OACE,qCACE,qBAAKrO,UAAU,cAAf,0CACCsK,GAAW,uDACXF,EACC,cAAC,EAAD,IAEA,qCACE,sBAAKpK,UAAU,sBAAf,UACE,cAAC,EAAD,CACE+C,GAAG,IACH2J,QAAS,kBAAM2B,EAAU,UACzBzB,WAAuB,UAAXwB,EACZnD,MAAM,gBAER,cAAC,EAAD,CACElI,GAAG,IACH2J,QAAS,kBAAM2B,EAAU,WACzBzB,WAAuB,WAAXwB,EACZnD,MAAM,iBAER,cAAC,EAAD,CACElI,GAAG,IACH2J,QAAS,kBAAM2B,EAAU,eACzBzB,WAAuB,eAAXwB,EACZnD,MAAM,cAER,cAAC,EAAD,CACElI,GAAG,IACH2J,QAAS,kBAAM2B,EAAU,gBACzBzB,WAAuB,gBAAXwB,EACZnD,MAAM,kBAGV,qBAAKjL,UAAU,iBAAf,SACGO,EACE+N,MAAK,SAAC7F,EAAGC,GAAJ,OAAUA,EAAE0F,GAAU3F,EAAE2F,MAC7BH,MAAM,EAAG,IACTlN,KAAI,SAACC,GAAD,OACH,sBAAKhB,UAAU,WAAf,UACE,qBAAKA,UAAU,uCAAf,SACGgB,EAAEmK,UAEL,qBAAKnL,UAAU,YAAf,uBACA,qBAAKA,UAAU,iCAAf,SACGgB,EAAE2M,MAAMX,mBAEX,sBAAKhN,UAAU,iCAAf,eACKgB,EAAEuN,WAAWvB,iBADlB,OAGA,qBAAKhN,UAAU,YAAf,oBACA,qBAAKA,UAAU,4BAAf,SACGgB,EAAE6M,OAAOb,mBAEZ,sBAAKhN,UAAU,iCAAf,eACKgB,EAAEwN,YAAYxB,iBADnB,OAGA,qBAAKhN,UAAU,YAAf,wBACA,sBAAKA,UAAU,mCAAf,UACGyJ,EAAczI,EAAE6M,OAAQ7M,EAAE2M,OAD7B,SAnB6B3M,EAAEmK,cAyBvC,oBAAGnL,UAAU,WAAb,0FAGE,mBAAGI,KAAK,oCAAR,8BAHF,cC7mBV,SAASqO,IACP,IAAIC,EAAO,IAAIzN,KAKf,OAJWyN,EAAKC,cAGW,KAFfD,EAAKE,WAAa,GAEW,IAD9BF,EAAKG,UAKX,IAAMC,EAAW,WACtB,OACE,sBAAK9O,UAAU,YAAf,UACE,uCACO,sBAAMA,UAAU,iBAAhB,iBADP,gBAGA,oBAAIA,UAAU,aAAd,SAA4ByO,UCdrBM,GAAS,SAAC,GAAuB,IAArBzI,EAAoB,EAApBA,KAAM0I,EAAc,EAAdA,QAEvBC,EAAU,CACd,CACEC,KAAM,SACNC,UAAW,SACXnP,UAAoB,WAATsG,EAAoB,qBAAuB,eAExD,CACE4I,KAAM,qBACNC,UAAW,SACXnP,UAAoB,WAATsG,EAAoB,qBAAuB,gBAI1D,OACE,qBAAKtG,UAAU,MAAf,SACGiP,EAAQlO,KAAI,SAACqO,GAAD,OACX,wBAAC,GAAD,yBAAYJ,QAASA,GAAaI,GAAlC,IAA0CnQ,IAAKmQ,EAAOD,mBAMxDE,GAAa,SAAC,GAA6C,IAA3CH,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,UAAWnP,EAAyB,EAAzBA,UAAWgP,EAAc,EAAdA,QAQhD,OACE,wBAAQM,QAPU,SAACnJ,GACnBA,EAAEtB,iBACFrF,oBAAU,OAAQ2P,GAClBH,EAAQG,IAIsBtJ,KAAK,SAAS7F,UAAWA,EAAvD,SACGkP,K,oBCpCMK,GAAc,SAAC,GAAD,IACzB1N,EADyB,EACzBA,WADyB,IAEzB2N,mBAFyB,MAEX,GAFW,MAGzBhN,gBAHyB,MAGd,GAHc,MAIzBiN,sBAJyB,MAIR,GAJQ,EAKzB5L,EALyB,EAKzBA,QACAC,EANyB,EAMzBA,aANyB,IAOzB4L,mBAPyB,MAOX,GAPW,SASzB7N,EAAW8F,SAAS5G,KAAI,SAAC4O,EAAapG,GAAd,OACtB,oBAEEvJ,UAAWuD,KAAOqM,OAClB9M,UAAS,uBAAkByG,EAAQiG,EAA1B,KACTK,aAAc,kBAAMhM,EAAQ8L,IAC5BG,aAAc,kBAAMjM,EAAQ,OAC5BkM,QAASjM,GAAgB6L,IAAgB7L,EAAe4L,EAAc,EANxE,UAQE,wBAAQpM,KAAMzB,EAAW8N,GAAcK,EAAGxN,IAC1C,sBAAMyN,GAAG,QAAQ9M,EAAGsM,EAApB,SACGE,MATE9N,EAAW8N,QCXTO,GAAY,SAAC,GAAoC,IAAlCnF,EAAiC,EAAjCA,MAAiC,EAA1BoF,SAA0B,EAAhBC,UAC3C,OACE,qBAAKpQ,UAAU,cAAf,SACE,kCACE,gCACE,6BACE,2CAMJ,gCACE,6BACE,oBAAIA,UAAU,iBAAd,SACG+K,EAAMsF,QAAO,SAACC,EAAKhH,GAAN,OAAcgH,EAAMhH,EAAI7J,QAAO,GAAGuN,6BChBjDuD,GAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,iBACAJ,EAFsB,EAEtBA,UACApP,EAHsB,EAGtBA,EACAyP,EAJsB,EAItBA,WACAzQ,EALsB,EAKtBA,UALsB,IAMtB0Q,oBANsB,MAMP,GANO,SAQtB,uBACE1Q,UAAWA,EACX8C,UAAS,oBAAe0N,EAAf,KACTtL,WAAW,SACXyL,iBAAiB,SAJnB,UAME,wBAAO3Q,UAAU,MAAMmD,EAAE,IAAI8M,IAAKS,EAAcpN,KAAK,QAArD,UACGmN,EADH,OAGA,uBAAOtN,EAAE,IAAI8M,GAAIS,EAAcpN,KAAK,UAApC,SACG8M,EAAUpP,EAAET,MAAMyM,uBCfZ4D,GAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,QACAC,EAFsB,EAEtBA,OACAC,EAHsB,EAGtBA,SACAC,EAJsB,EAItBA,WACAb,EALsB,EAKtBA,SACAC,EANsB,EAMtBA,UACAvM,EAPsB,EAOtBA,QACAC,EARsB,EAQtBA,aARsB,IAStB4L,mBATsB,MASR,GATQ,SAWtBqB,EAASF,GAAS9P,KAAI,SAACC,GACrB,IAAM2O,EAAcQ,EAASnP,EAAET,MAC3BiQ,EAAmBM,EAAOG,SAASjQ,GACnCA,EAAEkQ,SAAWlQ,EAAEmQ,WAAa,MAC9BX,EAAiB,IAAM,IACvBA,EAAiB,IAAM,KAEzB,IAAMY,GACHhB,EAAUpP,EAAET,MAAQ8Q,YAAIR,GAAS,SAAC7P,GAAD,OAAOA,EAAEvB,SAC3C,KACAoK,QAAQ,GACV,OACE,oBACE7J,UAAWuD,KAAO+N,SAClBvB,QAASjM,GAAgB6L,IAAgB7L,EAAe4L,EAAc,EACtEG,aAAc,kBAAMhM,EAAQ8L,IAC5BL,QAAS,kBAAMzL,EAAQ8L,IACvBG,aAAc,kBAAMjM,EAAQ,OAL9B,UAQE,sBAAMP,KAAM0N,EAAWhQ,EAAET,MAAOS,EAAG8P,EAAO9P,KAC1C,cAAC,GAAD,CACEwP,iBAAkBA,EAClBJ,UAAWA,EACXpP,EAAGA,EACHyP,WAAYW,EACZpR,UAAWuD,KAAOgO,iBAEpB,cAAC,GAAD,CACEf,iBAAkBA,EAClBJ,UAAWA,EACXpP,EAAGA,EACHyP,WAAYW,EACZpR,UAAWuD,KAAOiO,aAffrB,EAASnP,EAAET,WChCXkR,GAAc,SAAC,GAAsB,IAApBvR,EAAmB,EAAnBA,SAAU6C,EAAS,EAATA,GACtC,OACE,sBAAK/C,UAAU,mBAAf,UACE,uBAAO+C,GAAIA,EAAI/C,UAAU,SAAS6F,KAAK,aACvC,uBAAOgH,QAAS9J,EAAI/C,UAAU,aAA9B,2CAGA,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,gBAAf,SAAgCE,UCClC0B,GAAQqC,OAAOC,WAAa,IAAOD,OAAOC,WAAa,IACvDb,GAASzB,GAAQ,IAAc,GAARA,GAAsB,GAARA,GACrC8P,GAAqB,IAAR9P,GAAgB,EAC7B+P,GAA6B,GAAZD,GAMjBE,GAAkB,IAARhQ,GACViQ,GAAUxO,GAAS,EAEnByN,GAASgB,cAAMC,YAAY,GAAGC,YAAYL,IAE1CxB,GAAW,SAACnP,GAAD,OAAOA,EAAEiR,MACpB7B,GAAY,SAACpP,GAAD,OAAOA,EAAEvB,OACrBuR,GAAa,SAAChQ,GAAD,OAAOA,EAAEkR,OAEtBjK,GAAQ,2BAGDkK,GAAc,WACzB,MAAwC7R,mBAAS,MAAjD,mBAAOwD,EAAP,KAAqB2C,EAArB,KAEMlG,EC5Be,WACrB,MAAwBD,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAYA,OATAC,qBAAU,WACR,IAAIC,GAAY,EAIhB,OAHAC,YATY,sCASEE,MAAK,SAACG,GACdN,GAAWF,EAAQQ,MAElB,WACLN,GAAY,KAEb,IACIH,EDeMF,GACb,IAAKE,EAAM,OAAO,cAAC,EAAD,IAClB,IAAMsQ,EAAU,CACd,CACEoB,KAAM,SACNxS,MAAOc,EAAKsN,OACZqE,MAAO,WAET,CACED,KAAM,YACNxS,MAAOc,EAAK6R,UACZF,MAAO,WAET,CACED,KAAM,SACNxS,MAAOc,EAAK8R,OACZH,MAAO,YAGLnB,EAAWuB,cAAMhE,KAAK,MAAM7O,MAAM2Q,IAElCvO,EAAa0Q,cAChB5K,OAAOkJ,EAAQ9P,IAAIoP,KACnBjN,MAAM2N,EAAQ9P,IAAIiQ,KAEfhJ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,qBAAKjI,UAAU,cAAf,SAA8BiI,KAE1DuK,EAAe,kBACnB,oBAAGxS,UAAU,WAAb,wCAEE,mBAAGI,KAAK,oCAAR,wBAFF,QAMF,OACE,qCACE,cAAC4H,EAAD,CAAYC,MAAOA,KACnB,cAAC,GAAD,CAAW8C,MAAO8F,EAASV,SAAUA,GAAUC,UAAWA,KAC1D,sBAAKvI,QAAO,cAASjG,GAAT,YAAkByB,IAAUyE,oBAAoB,WAA5D,UACE,mBAAGhF,UAAS,oBAAe4O,GAAf,YAA4BrO,GAAS,EAArC,KAAZ,SACE,cAAC,GAAD,CACEwN,QAASA,EACTE,SAAUA,EACVC,WAAYA,GACZF,OAAQA,GACRX,SAAUA,GACVC,UAAWA,GACXvM,QAAS4C,EACT3C,aAAcA,EACd4L,YAlEQ,OAqEZ,oBAAG5M,UAAS,oBAAe8O,GAAf,aAA2BC,GAA3B,KAAZ,UACE,sBAAM7R,UAAWuD,KAAOkP,YAAatP,GAAI,EAAGC,GAvE5B,GAuEhB,SA1De,UA6Df,cAAC,GAAD,CACEvB,WAAYA,EACZ2N,YA5Ec,GA6EdhN,SA9Ee,EA+EfiN,eAAgB,GAChB5L,QAAS4C,EACT3C,aAAcA,EACd4L,YAhFQ,WAoFd,eAAC,GAAD,CAAa3M,GAAIkF,GAAjB,UACE,mTAOA,4cAOe,IACb,oBAAG7H,KAAK,qFAAR,4BACkB,OATpB,MAWK,mDAXL,2EAcA,cAACoS,EAAD,WErHFE,GAAWC,YAAU,YAUdtS,GAAU,WACrB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAWA,OATAC,qBAAU,WACR,IAAIC,GAAY,EAIhB,OAHAkS,YAjBF,6FAiBc/R,MAAK,SAACC,GACZJ,GAAWF,EAdH,SAACM,GACjB,OAAOA,EAAQC,KAAI,SAACC,GAAD,MAAQ,CACzBmG,KAAMuL,GAAS1R,EAAEmG,MACjBmG,UAAWtM,EAAE6R,UAWY/P,CAAUhC,OAE5B,WACLJ,GAAY,KAEb,IACIH,GC1BIyH,GAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxB,qBAAKjI,UAAU,cAAf,SAA8BiI,KCDnBiI,GAAY,SAAC,GAAe,IAAbnF,EAAY,EAAZA,MAC1B,OACE,qBAAK/K,UAAU,cAAf,SACE,kCACE,gCACE,6BACG+K,EAAMhK,KAAI,SAAClB,EAAM0J,GAAP,OACT,6BAAiB1J,EAAKkN,SAAbxD,UAIf,gCACE,6BACGwB,EAAMhK,KAAI,SAAClB,EAAM0J,GAAP,OACT,oBAAIvJ,UAAU,iBAAd,SACGH,EAAKJ,OAD4B8J,gB,oBCZrC9H,GAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,YACAoG,EAGI,EAHJA,WAGI,IAFJjG,iBAEI,MAFQ,EAER,MADJC,kBACI,MADS,EACT,EACEC,EAAMC,mBASZ,OARAxB,qBAAU,WACR,IAAMyB,EAASC,YAAOH,EAAII,SACpBC,EAAQC,YAAWZ,GACtBa,MAAMT,EAAWiG,GACjBvF,UAAUb,GACVc,YAAYV,GACfG,EAAOQ,KAAKL,KACX,CAACX,EAAQC,EAAaoG,EAAYhG,EAAYD,IAE/C,mBACEE,IAAKA,EACLhC,UAAWuD,KAAOC,KAClBV,UAAS,uBAAkBnB,EAAlB,QCpBFmR,GAAW,SAAC,GAKlB,IAJLC,EAII,EAJJA,OACA7O,EAGI,EAHJA,WACA6D,EAEI,EAFJA,WAEI,IADJhG,kBACI,MADS,EACT,EACEC,EAAMC,mBASZ,OARAxB,qBAAU,WACR,IAAMuS,EAAS7Q,YAAOH,EAAII,SACpB6Q,EAAQC,YAASH,GACpBvQ,SAAS0B,GACTzB,YAAYV,GACZgG,WAAWA,GACdiL,EAAOtQ,KAAKuQ,KACX,CAACF,EAAQ7O,EAAY6D,EAAYhG,IAElC,mBACEC,IAAKA,EACLhC,UAAWuD,KAAOC,KAClBV,UAAS,oBAAeoB,EAAf,WCrBFiP,GAAc,SAAC,GAAoC,IAAlC1T,EAAiC,EAAjCA,MAAOiC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACrCyR,EAAc1R,EAAOjC,GAErB4T,EAAe1R,EACrB,OACE,sBACE3B,UAAWuD,KAAO+P,WAClBC,GAAIH,EACJI,GANiB,EAOjBC,GAAIL,EACJM,GAAIL,KCTGM,GAAc,SAAC,GAMrB,IALLpT,EAKI,EALJA,KACAqT,EAII,EAJJA,cACA/P,EAGI,EAHJA,QACAK,EAEI,EAFJA,WACAvC,EACI,EADJA,YAEA,OAAOkS,mBAAQ,WACb,IAAM9P,EAASxD,EAAKQ,KAAI,SAACC,GAAD,OAAO4S,EAAczQ,GAAdyQ,CAAkB5S,MACjD,OACE,mBAAGhB,UAAWuD,KAAOuQ,YAArB,SACE,sBACElS,MAAOsC,EACPb,OAAQ1B,EACRgD,aAAc,SAACC,GACbA,EAAMC,iBACN,IAAM0E,EAAQwK,YAAahQ,EAAQe,YAAQF,GAAO,IAClDf,EAAQtD,EAAKgJ,KAEfvE,cAAe,SAACJ,GACd,IAAM2E,EAAQwK,YAAahQ,EAAQe,YAAQF,GAAO,IAClDf,EAAQtD,EAAKgJ,KAEfxE,YAAa,SAACH,GACZ,IAAM2E,EAAQwK,YAAahQ,EAAQe,YAAQF,GAAO,IAClDf,EAAQtD,EAAKgJ,WAKpB,CAAChJ,EAAMqT,EAAejS,EAAauC,EAAYL,KChB9CjC,GAAQqC,OAAOC,WAAa,IAAOD,OAAOC,WAAa,IACvDb,GAASzB,GAAQ,IAAc,GAARA,GAAsB,GAARA,GACrCoS,GAAgB,GAAhBA,GAA2B,EAA3BA,GAAsC,GAAtCA,GAAgD,GAEhDC,GAAS,SAACjT,GAAD,OAAOA,EAAEmG,MAClB9B,GAAkB6O,YAAW,UAC7BC,GAAiBD,YAAW,eAE5BE,GAAS,SAACpT,GAAD,OAAOA,EAAEsM,UAGlB+G,GAAWC,YAAO,OAClBC,GAAkB,SAACC,GAAD,OAAeH,GAASG,IAEnCC,GAAY,SAAC,GAAc,IAAZlU,EAAW,EAAXA,KAE1B,EAAoCD,mBAASC,EAAKA,EAAKyF,OAAS,IAAhE,mBAAO0O,EAAP,KAAmBC,EAAnB,KAGMhT,EAAc0B,GAAS2Q,GAAaA,GACpC9P,EAAatC,GAAQoS,GAAcA,GAGnCtS,EAASmS,mBACb,kBACEe,cAGGjN,OAAOkN,YAAOtU,EAAM0T,KAEpB/Q,MAAM,CAAC,EAAGgB,IACV4Q,SACL,CAACvU,EAAM2D,IAIH6O,EAASc,mBACb,kBACEjM,cACGD,OAAO,CAAC,EAAG5B,YAAIxF,EAAM6T,MACrBlR,MAAM,CAACvB,EAAa,IACpBmT,SACL,CAACvU,EAAMoB,IAGHoT,EAAqBC,sBAAYL,EAAe,CAACA,IAEjDf,EAAgBC,mBACpB,kBACEoB,cACG9R,GAAE,SAACnC,GAAD,OAAOU,EAAOuS,GAAOjT,OACvBwS,IAAG,SAACxS,GAAD,OAAO+R,EAAOqB,GAAOpT,OACxBkU,GAAGnC,EAAO,IACVoC,MAAMC,OACX,CAAC1T,EAAQqR,IAGLsC,EAAU,SAAC,GAAD,IAAGX,EAAH,EAAGA,WAAY1U,EAAf,EAAeA,UAAf,OACd,uBAAMA,UAAWA,EAAWkF,WAAY,MAAO/B,EAAG,EAAGC,GAAI,EAAzD,UACE,uBAAOD,EAAE,MAAM8M,GAAG,IAAIqF,WAAW,OAAjC,SACGZ,EAAWpH,SAASN,mBAEvB,uBAAO7J,EAAE,MAAM8M,GAAG,QAAlB,SACGkE,GAAeO,EAAWvN,YAIjC,OACE,mCACE,qBAAKU,QAAO,cAASjG,GAAT,YAAkByB,IAAUyE,oBAAoB,WAA5D,SAEE,oBAAGhF,UAAS,oBAAekR,GAAf,aAA+BA,GAA/B,KAAZ,UACE,cAAC,GAAD,CACErS,YAAaA,EACbD,OAAQA,EACRqG,WAAY1C,GACZtD,WAAY,EACZD,UAAWF,GAAQ,IAAM,EAAI,IAE/B,cAAC,GAAD,CACEsC,WAAYA,EACZ6O,OAAQA,EACRhR,WAAY,EACZgG,WAAYwM,KAWd,mBAAGvU,UAAWuD,KAAOc,MAArB,SACE,sBAAMrD,EAAG4S,EAAcrT,OAExBmU,EACC,qCACE,mBAAG1U,UAAWuD,KAAOc,MAArB,SACE,sBAAMrD,EAAG4S,EAAcrT,OAEzB,cAAC,GAAD,CACEd,MAAOiV,EAAWvN,KAClBzF,OAAQA,EACRC,YAAaA,IAEf,oBACEmB,UAAS,oBAAe8Q,EAAczQ,GAAdyQ,CACtBc,GADO,aAEHd,EAAcJ,IAAdI,CAAmBc,GAFhB,KADX,UAKE,wBAAQ1U,UAAWuD,KAAOgS,UAAWvF,EAAG,IACxC,cAACqF,EAAD,CACEX,WAAYA,EACZ1U,UAAWuD,KAAO0B,gBAEpB,cAACoQ,EAAD,CAASX,WAAYA,EAAY1U,UAAWuD,KAAO4B,gBAGrD,KACJ,cAAC,GAAD,CACEtB,QAASkR,EACTxU,KAAMA,EACNqT,cAAeA,EACf1P,WAAYA,EACZvC,YAAaA,YC9IZ8P,GAAc,SAAC,GAAsB,IAApBvR,EAAmB,EAAnBA,SAAU6C,EAAS,EAATA,GACtC,OACE,sBAAK/C,UAAU,mBAAf,UACE,uBAAO+C,GAAIA,EAAI/C,UAAU,SAAS6F,KAAK,aACvC,uBAAOgH,QAAS9J,EAAI/C,UAAU,aAA9B,2CAGA,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,gBAAf,SAAgCE,UCDlCsV,GAAoB,SAACjV,EAAMtB,GAAP,OACxBsB,EAAK8P,QACH,SAACoF,EAAMnM,GAAP,OAAemM,EAAOnM,EAAIrK,KAC1B,IAGEgJ,GAAQ,4BAERuK,GAAe,kBACnB,oBAAGxS,UAAU,WAAb,yGAGE,mBAAGI,KAAK,oEAAR,+BAHF,QAUWsV,GAAiB,WAC5B,IAAMnV,EAAOF,KACb,IAAKE,EAAM,OAAO,cAAC,EAAD,IAElB,IAAMoV,EAAmBH,GAAkBjV,EAAK0N,OAAO,GAAI,YAAc,EAEnE2H,EACJJ,GAAkBjV,EAAK0N,OAAO,IAAK,GAAI,YAAc,EAEjD4H,EAAY,CAChB,CACE9I,QAAS,wBACTtN,MAAOqW,KAAKC,MAAMH,GAAoB5I,kBAExC,CACED,QAAS,oBACTtN,MAAOqW,KAAKC,MAAMJ,GAAkB3I,kBAEtC,CACED,QAAS,gBACTtN,OAAQkW,EAAmBC,GAAoB/L,QAAQ,KAI3D,OACE,qCACE,cAAC,GAAD,CAAY5B,MAAOA,KACnB,cAAC,GAAD,CAAW8C,MAAO8K,IAClB,cAAC,GAAD,CAAWtV,KAAMA,IACjB,eAAC,GAAD,CAAawC,GAAIkF,GAAjB,UACE,iNAKA,6iBAUA,iOAKA,cAAC,GAAD,W,qBC3EKxG,GAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,OACAC,EAFwB,EAExBA,YACAoG,EAHwB,EAGxBA,WAHwB,IAIxBhG,kBAJwB,MAIX,EAJW,MAKxBD,iBALwB,MAKZ,EALY,SAQxBJ,EAAOa,MAAMT,GAAWf,KAAI,SAACyT,GAAD,OAE1B,cADA,CACA,KACExU,UAAWuD,KAAOC,KAElBV,UAAS,oBAAepB,EAAO8S,GAAtB,QAHX,UAME,sBAAMd,GAAI/R,IACV,sBACEyB,EAAGzB,EAAcI,EACjBkO,GAAG,SACHrN,MAAO,CAAEsC,WAAY,UAHvB,SAKG6C,EAAWyM,OAVTA,OCZE1B,GAAW,SAAC,GAAD,IACtBkD,EADsB,EACtBA,aACAC,EAFsB,EAEtBA,SACArU,EAHsB,EAGtBA,MACAoS,EAJsB,EAItBA,OAJsB,IAKtBjS,kBALsB,MAKT,EALS,SAOtBkU,EAAStO,SAAS5G,KAAI,SAACyT,GAAD,OACpB,oBAEExU,UAAWuD,KAAOC,KAClBV,UAAS,sBACPmT,EAASzB,GAAayB,EAASC,YAAc,EADtC,KAHX,UAOE,sBACE/S,GAAI6Q,EAAOjI,KACX3I,GAAI6S,EAASC,YAAc,EAAI,EAC/BtU,MAAOA,EACPyB,OAAQ4S,EAASC,YAAc,IAEjC,sBACEjG,GAAG,QACH9M,GAAI6Q,EAAOjI,KAAOhK,EAClBa,MAAO,CAAEuT,SAAU,QAASb,WAAY,OAAQpQ,WAAY,SAH9D,SAKGsP,IAEFwB,EAAarO,SAAS5G,KAAI,SAACyT,GAAD,OACzB,sBAEEvE,GAAG,QACH9M,GAAIpB,EACJqB,EAAG4S,EAAaxB,GAAayB,EAASC,YAAc,EACpDtT,MAAO,CAAEsC,WAAY,MAAOyL,iBAAkB,UALhD,SAOG6D,GANIA,QArBJA,OCTE4B,GAAQ,SAAC,GAAD,IACnB7V,EADmB,EACnBA,KACA8V,EAFmB,EAEnBA,UACAJ,EAHmB,EAGnBA,SACAvU,EAJmB,EAInBA,OACAsU,EALmB,EAKnBA,aACAM,EANmB,EAMnBA,aACAzU,EAPmB,EAOnBA,WACA0U,EARmB,EAQnBA,cACA1S,EATmB,EASnBA,QACAC,EAVmB,EAUnBA,aAVmB,IAWnB4L,mBAXmB,MAWL,GAXK,SAanBnP,EAAKQ,KAAI,SAACC,GAAD,OACPqV,EAAUtV,KAAI,SAAC9B,GAAD,OACZ,oBAEEe,UAAWuD,KAAOc,MAClBwL,aAAc,kBAAMhM,EAAQyS,EAAatV,KACzC8O,aAAc,kBAAMjM,EAAQ,OAC5BkM,QACEjM,GAAgBA,IAAiBwS,EAAatV,GAAK0O,EAAc,EANrE,UASE,sBACEvM,EAAG,EACHC,EAAG6S,EAAShX,GAAO+W,EAAaM,EAAatV,IAC7CY,MAAOF,EAAOV,EAAE/B,IAChBoE,OAAQ2S,EAAaE,YACrB5S,KAAMzB,EAAWyU,EAAatV,IALhC,SAOE,0CAAW/B,EAAX,aAAmBsX,EAAcvV,EAAE/B,SAErC,sBACEkE,EAAGzB,EAAOV,EAAE/B,IAAQ,EACpBmE,EAAG6S,EAAShX,GAAO+W,EAAaM,EAAatV,IAC7CiP,GAAG,QACHrN,MAAO,CAAEsC,WAAY,QAASyL,iBAAkB,UAJlD,SAMG4F,EAAcvV,EAAE/B,QAvBdqX,EAAatV,GAAK/B,UCXzB2C,GAAQqC,OAAOC,WAAa,IAAOD,OAAOC,WAAa,IACvDb,GAASzB,GAAQ,IAAc,GAARA,GAAsB,EAARA,GACrCoS,GAAS,CAAEnI,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,KAEjDuK,GAAe,SAACtV,GAAD,OAAOA,EAAEwV,SACxBnR,GAAkB,SAACmP,GAAD,OAAeA,EAAY,KAG7C7S,GAAc0B,GAAS2Q,GAAOnI,IAAMmI,GAAOlI,OAC3C5H,GAAatC,GAAQoS,GAAOjI,KAAOiI,GAAOhI,MAWnCX,GAAW,SAAC,GAAc,IAAZ9K,EAAW,EAAXA,KACzB,EAAwCD,mBAAS,MAAjD,mBAAOwD,EAAP,KAAqB2C,EAArB,KACM4P,EAAY9V,EAAKkW,QAAQxI,MAAM,GAG/BvM,EAASmS,mBACb,kBACEjM,cAGGD,OAAO,CAAC,EAAG5B,YAAIxF,GAAM,SAACS,GAAD,OAAO+E,YAAIsQ,GAAW,SAACpX,GAAD,OAAS+B,EAAE/B,WAEtDiE,MAAM,CAAC,EAAGgB,KACV4Q,SACL,CAACuB,EAAW9V,IAGR0V,EAAWpC,mBACf,kBACE6C,cAAY/O,OAAO0O,GAAWnT,MAAM,CAAC,EAAGvB,KAAcgV,aAAa,OACrE,CAACN,IAIGL,EAAenC,mBACnB,kBACE6C,cACG/O,OAAOpH,EAAKQ,IAAIuV,KAChBpT,MAAM,CAAC+S,EAASC,YAAa,IAC7BS,aAAa,MAClB,CAACV,EAAU1V,IAGPsB,EAAagS,mBACjB,kBAAMtB,cAAe5K,OAAOpH,EAAKQ,IAAIuV,KAAepT,MAAM0T,OAC1D,CAACrW,IAGH,OACE,mCACE,qBAAKsH,QAAO,cAASjG,GAAT,YAAkByB,IAAUyE,oBAAoB,WAA5D,SAEE,oBAAGhF,UAAS,oBAAekR,GAAOjI,KAAtB,aAA+BiI,GAAOnI,IAAtC,KAAZ,UACE,cAAC,GAAD,CACElK,YAAaA,GACbD,OAAQA,EACRqG,WAAY1C,GACZtD,WAAY,IAEd,cAAC,GAAD,CACEiU,aAAcA,EACdC,SAAUA,EACVjC,OAAQA,GACRpS,MAAOA,KAET,cAAC,GAAD,CACErB,KAAMA,EACN0V,SAAUA,EACVI,UAAWA,EACX3U,OAAQA,EACRsU,aAAcA,EACdM,aAAcA,GACdzU,WAAYA,EACZ0U,cAAelR,GACfxB,QAAS4C,EACT3C,aAAcA,EACd4L,YApEQ,aCvBd8C,GAAe,kBACnB,qCACE,oBAAGxS,UAAU,WAAb,8TAKuB,IACrB,mBAAGI,KAAK,wFAAR,4BAEK,IARP,sEAWA,mBAAGJ,UAAU,WAAb,mFAMSyR,GAAc,SAAC,GAAY,IAAV1O,EAAS,EAATA,GAC5B,OACE,sBAAK/C,UAAU,mBAAf,UACE,uBAAO+C,GAAIA,EAAI/C,UAAU,SAAS6F,KAAK,aACvC,uBAAOgH,QAAS9J,EAAI/C,UAAU,aAA9B,2CAGA,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sVAOA,kVAOA,+BACE,uIAIA,kJAKF,cAAC,GAAD,aChDJgI,GAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,qBAAKjI,UAAU,cAAf,SAA8BiI,KAEnD4O,GAAiC,WAC5C,IAAMtW,ECDe,WACrB,MAAwBD,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAYA,OATAC,qBAAU,WACR,IAAIC,GAAY,EAIhB,OAHAkS,YAVF,sHAUckE,KAAUjW,MAAK,SAACN,GACtBG,GAAWF,EAAQD,MAElB,WACLG,GAAY,KAEb,IACIH,EDZMF,GACb,OAAKE,EAGH,qCACE,cAAC,GAAD,CAAY0H,MAAM,+BAClB,cAAC,GAAD,CAAU1H,KAAMA,IAChB,cAAC,GAAD,CAAawC,GAAG,yBANF,cAAC,EAAD,K,yCESdkS,GAAO,SAEP8B,GAAa,kBACjB,qBAAI/W,UAAU,iBAAd,UACE,cAAC,EAAD,UACE,cAAC,GAAD,MAEF,cAAC,EAAD,UACE,cAAC,GAAD,MAQF,cAAC,EAAD,UACE,cAAC,EAAD,MAEF,cAAC,EAAD,UACE,cAAC,EAAD,CAA+BiV,KAAMA,GAAM/H,WAAW,eAExD,cAAC,EAAD,UACE,cAAC,EAAD,CAA+B+H,KAAMA,GAAM/H,WAAW,gBAKxD,cAAC,EAAD,UACE,cAAC,GAAD,UA0CS8J,GArCH,WACV,MAAwB1W,mBAAS,UAAjC,mBAAOgG,EAAP,KAAa0I,EAAb,KA0BA,OAzBAvO,qBAAU,WAqBR,OAnBId,uBAAa,QAEfqP,EAAQhQ,qBAAW,SAEnBQ,oBAAU,OAAQ,UAGpByX,KAAcC,KAAK,CACjBC,YAAa,OACbC,UAFiB,WAGfnT,OAAOoT,SAASC,UAElBC,UAAWC,IAAeC,eACxB,cAAC,KAAD,CAAiBC,KAAMC,QAEzBC,eAAgBJ,IAAeC,eAC7B,cAAC,KAAD,CAAiBC,KAAMC,KAAWE,MAAM,OAGrC,WACLZ,KAAca,gBAEf,IAED,sBAAK9X,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,GAAD,CAAQsG,KAAMA,EAAM0I,QAASA,IACnB,WAAT1I,EAAoB,cAAC,GAAD,IAAiB,cAAC,EAAD,IACtC,cAAC,EAAD,QCzEcyR,QACW,cAA7B9T,OAAOoT,SAASW,UAEe,UAA7B/T,OAAOoT,SAASW,UAEhB/T,OAAOoT,SAASW,SAASC,MACvB,2DCTNC,IAASC,OAAO,cAAC,GAAD,IAASjZ,SAASkZ,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1X,MAAK,SAAA2X,GACJA,EAAaC,gBAEdC,OAAM,SAAAhO,GACLD,QAAQC,MAAMA,EAAMiO,c","file":"static/js/main.fea21277.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisLabel\":\"BarChart_axisLabel__3i3d5\",\"marks\":\"BarChart_marks__3Qb-J\",\"tick\":\"BarChart_tick__1vAYC\",\"legendLabel\":\"BarChart_legendLabel__Y4Crq\",\"legend\":\"BarChart_legend__2XTVP\"};","const findCookie = key => {\n  return document.cookie\n    .split(\"; \")\n    .find(row => row.startsWith(`${key}=`))\n    .split(\"=\")[1];\n};\n\nconst setCookie = (key, value) => {\n  let newCookie = `${key}=${value}`;\n  newCookie += \";max-age=604800;SameSite=Lax\";\n  document.cookie = newCookie;\n};\n\nconst cookieExists = key => {\n  if (\n    document.cookie.split(\";\").some(item => item.trim().startsWith(`${key}=`))\n  ) {\n    return true;\n  }\n  return false;\n};\n\nmodule.exports = {\n  findCookie,\n  setCookie,\n  cookieExists\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisLabel\":\"LineChart_axisLabel__2_tFA\",\"marks\":\"LineChart_marks__26M2D\",\"tick\":\"LineChart_tick__3yb08\",\"markerLine\":\"LineChart_markerLine__22F4j\",\"voronoi\":\"LineChart_voronoi__2Oz49\",\"captureArea\":\"LineChart_captureArea__16mNX\",\"dataPoint\":\"LineChart_dataPoint__g039n\",\"tooltip\":\"LineChart_tooltip__11-D6\",\"tooltipStroke\":\"LineChart_tooltipStroke__3IHSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marks\":\"ChoroplethMap_marks__Ia8M_\",\"interiors\":\"ChoroplethMap_interiors__1c6ly\",\"sphere\":\"ChoroplethMap_sphere__253Ra\",\"graticules\":\"ChoroplethMap_graticules__1pM2M\",\"tick\":\"ChoroplethMap_tick__1KjU2\",\"menus-container\":\"ChoroplethMap_menus-container__s4izW\",\"axis-label\":\"ChoroplethMap_axis-label__3xZac\",\"dropdown-label\":\"ChoroplethMap_dropdown-label__2PVQG\",\"Dropdown-root\":\"ChoroplethMap_Dropdown-root__Q0kxi\",\"Dropdown-menu\":\"ChoroplethMap_Dropdown-menu__3rY1g\",\"sliderContainer\":\"ChoroplethMap_sliderContainer__3H94e\",\"tooltip\":\"ChoroplethMap_tooltip__-fR-T\",\"tooltipStroke\":\"ChoroplethMap_tooltipStroke__2yB2m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pieChart\":\"OverviewPie_pieChart___bMnr\",\"pieLabel\":\"OverviewPie_pieLabel__3LAAf\",\"pieLabelStroke\":\"OverviewPie_pieLabelStroke__2jZQ6\",\"legendLabel\":\"OverviewPie_legendLabel__3jHkC\",\"legend\":\"OverviewPie_legend__3kb26\",\"hideshow\":\"OverviewPie_hideshow__1f2ru\"};","export default __webpack_public_path__ + \"static/media/NotoSansMono-CondensedBold.e667a45f.ttf\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const LoadSpinner = () => {\n  return (\n    <div className=\"lds-spinner\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport const Card = ({ children, className }) => (\n  <li className={`flex-card-listitem${className ? \" \" + className : \"\"}`}>\n    <div className=\"flex-card\">{children}</div>\n  </li>\n);\n\nCard.propTypes = {\n  children: PropTypes.node,\n};\n\nexport const Footer = () => (\n  <div className=\"footer\">\n    <p>\n      © 2020 <a href=\"https://eternallogger.com\">George Huang</a>. All rights\n      reserved.\n    </p>\n  </div>\n);\n","import { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\n// import { csv, autoType } from \"d3\";\n\n// const csvUrl =\n//   \"https://gist.githubusercontent.com/mgeorgetw/690d02dfc6bdbb99e58f6d1c622836c9/raw/covidtable_taiwan_cdc5.csv\";\n\nconst CORS = \"https://morning-wave-49482.herokuapp.com/\";\nconst API =\n  \"https://covid-19.nchc.org.tw/api/covid19?CK=covid-19@nchc.org.tw&querydata=5003&limited=全部縣市\";\nconst jsonUrl = CORS + API;\n\nconst transformData = (rawData) =>\n  rawData.map((d) => {\n    d[\"日期\"] = new Date(d.a01);\n    d[\"縣市別\"] = d.a02;\n    d[\"區域\"] = d.a03;\n    d[\"新增確診人數\"] = +d.a04;\n    d[\"累計確診人數\"] = +d.a05;\n    d[\"七天移動平均新增確診\"] = +d.a06;\n    return d;\n  });\n\n// Data: Covid vaccinations in Taiwan\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n  useEffect(() => {\n    let isMounted = true;\n    // csv(csvUrl, autoType).then((d) => {\n    //   if (isMounted) setData(d);\n    // });\n    json(jsonUrl).then((rawData) => {\n      if (isMounted) setData(transformData(rawData));\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom } from \"d3\";\nimport styles from \"./ChoroplethMap.module.css\";\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  width,\n  colorScale,\n  // tickFormat,\n  tickCount = 6,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  const legendHeight = 15;\n  useEffect(() => {\n    const xAxisG = select(ref.current);\n    const xAxis = axisBottom(xScale)\n      .ticks(tickCount)\n      .tickSize(-legendHeight - 3)\n      .tickPadding(tickOffset);\n    xAxisG\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"dy\", \"-2.2em\");\n  }, [xScale, innerHeight, tickOffset, tickCount]);\n  return (\n    <>\n      <g transform={`translate(${tickOffset}, 0)`}>\n        <defs>\n          <linearGradient id=\"legendGradient\">\n            <stop offset=\"0%\" stopColor={colorScale.range()[0]} />\n            <stop offset=\"100%\" stopColor={colorScale.range()[1]} />\n          </linearGradient>\n        </defs>\n        <rect\n          x={0}\n          y={innerHeight - legendHeight}\n          width={width}\n          height={legendHeight}\n          fill={`url('#legendGradient')`}\n        />\n        <g\n          ref={ref}\n          className={styles.tick}\n          transform={`translate(0, ${innerHeight})`}\n        />\n      </g>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { geoPath, pointer } from \"d3\";\nimport styles from \"./ChoroplethMap.module.css\";\nconst missingDataColor = \"white\";\n\nexport const TaiwanMarks = ({\n  atlas: { counties, interiors },\n  data,\n  colorScale,\n  onHover,\n  hoveredValue,\n}) => {\n  const [points, setPoints] = useState(null);\n  const width = window.innerWidth;\n  const path = geoPath(); // creates a new geographic path generator\n  return (\n    <>\n      <g className={styles.marks}>\n        {counties.features.map((feature, i) => {\n          const d = feature.properties.COUNTYNAME;\n          return (\n            <path\n              fill={d ? colorScale(data[d]) : missingDataColor}\n              key={i}\n              d={path(feature)}\n              onTouchStart={(event) => {\n                event.preventDefault();\n                onHover(d);\n                setPoints(pointer(event));\n              }}\n              onMouseMove={(event) => {\n                onHover(d);\n                setPoints(pointer(event));\n              }}\n              onPointerMove={(event) => {\n                onHover(d);\n                setPoints(pointer(event));\n              }}\n            />\n          );\n        })}\n        {hoveredValue ? (\n          <g>\n            <text\n              className={styles.tooltipStroke}\n              x={points[0]}\n              y={points[1]}\n              textAnchor={points[0] > width / 2 ? \"end\" : \"start\"}\n            >\n              {hoveredValue}累計確診：{data[hoveredValue]}\n            </text>\n            <text\n              className={styles.tooltip}\n              x={points[0]}\n              y={points[1]}\n              textAnchor={points[0] > width / 2 ? \"end\" : \"start\"}\n            >\n              {hoveredValue}累計確診：{data[hoveredValue]}\n            </text>\n          </g>\n        ) : null}\n        {/* <path className={styles.interiors} d={path(interiors)} /> */}\n      </g>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { scaleSequential, interpolateGreys, max, scaleLinear } from \"d3\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { TaiwanMarks } from \"./TaiwanMarks\";\nimport styles from \"./ChoroplethMap.module.css\";\n\nconst width = window.innerWidth < 800 ? window.innerWidth : 800;\nconst height = width > 480 ? width * 0.9 : width * 1.6;\nconst viewBoxWidth = width + 50;\n\nconst xAxisTickFormat = (d) => d;\nconst legendPadding = 5;\nconst legendWidth = viewBoxWidth - legendPadding * 2;\n\nconst transformData = (data, view) => {\n  let obj = { date: data[0][\"日期\"], dateString: data[0].a01 };\n  if (view === \"全台灣\") {\n    data.map(({ 縣市別, 累計確診人數 }) => (obj[縣市別] = 累計確診人數));\n  } else {\n    data.map(({ 區域, 累計確診人數 }) => (obj[區域] = 累計確診人數));\n  }\n  return obj;\n};\n\nconst Slider = ({ range, selected, handleChange }) => (\n  <div className={styles.sliderContainer}>\n    <pre>{selected}</pre>\n    <input\n      className={styles.slider}\n      type=\"range\"\n      min=\"0\"\n      max={range.length - 1}\n      value={range.indexOf(selected)}\n      onChange={(e) => handleChange(range[e.target.value])}\n    />\n  </div>\n);\n\nexport const Map = ({ data, atlas, view }) => {\n  const [selectedDate, setSelectedDate] = useState(data[0].a01);\n  const [hoveredValue, setHoveredValue] = useState(null);\n\n  // Choropleth Map can only display one day of data\n  const filteredData =\n    view === \"全台灣\"\n      ? data.filter((d) => d[\"區域\"] === \"全區\")\n      : data.filter((d) => d[\"縣市別\"] === view);\n\n  const allDates = Array.from(\n    new Set(filteredData.map((d) => d.a01))\n  ).reverse();\n\n  const selectedData = filteredData.filter(\n    (d) => d[\"日期\"].valueOf() === new Date(selectedDate).valueOf()\n  );\n\n  const transformedData = transformData(selectedData, view);\n\n  const colorScale = scaleSequential(interpolateGreys).domain([\n    0,\n    max(filteredData.map((d) => d[\"累計確診人數\"])),\n  ]);\n\n  const xScale = scaleLinear()\n    .range([0, legendWidth])\n    .domain(colorScale.domain());\n\n  return (\n    <>\n      <Slider\n        range={allDates}\n        selected={selectedDate}\n        handleChange={setSelectedDate}\n      />\n      <svg\n        viewBox={`0 0 ${viewBoxWidth} ${height}`}\n        preserveAspectRatio=\"xMinYMid\"\n      >\n        <TaiwanMarks\n          atlas={atlas}\n          colorScale={colorScale}\n          data={transformedData}\n          hoveredValue={hoveredValue}\n          onHover={setHoveredValue}\n        />\n        <AxisBottom\n          innerHeight={height}\n          width={legendWidth}\n          xScale={xScale}\n          colorScale={colorScale}\n          tickFormat={xAxisTickFormat}\n          tickOffset={legendPadding}\n          tickCount={6}\n        />\n      </svg>\n    </>\n  );\n};\n","// import { useState } from \"react\";\nimport { useTaiwanAtlas } from \"./useTaiwanAtlas\";\nimport { LoadSpinner } from \"../../elements/CommonUIs\";\nimport { useData } from \"./useData\";\nimport { Map } from \"./Map\";\n\nconst title = \"COVID-19 台灣累計確診分佈圖\";\nconst ChartTitle = ({ title }) => <div className=\"chart-title\">{title}</div>;\n\nexport const ChoroplethMap = () => {\n  // const [view, setView] = useState(\"全台灣\");\n  const taiwanAtlas = useTaiwanAtlas();\n  const rawData = useData();\n\n  if (!rawData || !taiwanAtlas) return <LoadSpinner />;\n\n  return (\n    <>\n      <ChartTitle title={title} />\n      <Map view={\"全台灣\"} atlas={taiwanAtlas} data={rawData} />\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\nimport { feature, mesh } from \"topojson\";\n\n// Source: https://github.com/dkaoster/taiwan-atlas\n// License: MIT\nconst jsonUrl =\n  \"https://cdn.jsdelivr.net/npm/taiwan-atlas/districts-mercator-10t.json\";\n\n// Use JSON data\nexport const useTaiwanAtlas = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n\n  useEffect(() => {\n    json(jsonUrl).then((topology) => {\n      // console.log(\"topo\", topology);\n      const { nation, counties, districts } = topology.objects;\n      setData({\n        // topojson.feature(topology, object) converts TopoJSON to GeoJSON,\n        // which d3 can parse\n        nation: feature(topology, nation),\n        counties: feature(topology, counties),\n        districts: feature(topology, districts),\n        // topojson.mesh - mesh TopoJSON geometry and convert to GeoJSON lines\n        interiors: mesh(topology, districts, (a, b) => a !== b),\n      });\n    });\n  }, []);\n  return data;\n};\n","import React from \"react\";\nimport { Card } from \"../elements/CommonUIs\";\n// import { TaiwanOverviewPie } from \"./TaiwanOverviewPie/index\";\n// import { TaiwanTestsOverviewPie } from \"./TaiwanTestsOverviewPie/index\";\n// import { TaiwanNewCasesArea } from \"./TaiwanNewCasesArea/index\";\n// import { TaiwanVaccinationArea } from \"./TaiwanVaccinationArea/index\";\n// import { CFRByGroupsBar } from \"./CFRByGroupsBar/index\";\n// import { CasesByCountiesArea } from \"./CasesByCountiesArea/index\";\n// import { VaccinationRateByCountiesBar } from \"./VaccinationRateByCountiesBar/index\";\nimport { ChoroplethMap } from \"./ChoroplethMap/index\";\n\nexport const TaiwanView = () => (\n  <ul className=\"flex-card-list\">\n    <Card>\n      <ChoroplethMap />\n    </Card>\n    {/* <Card> */}\n    {/*   <TaiwanOverviewPie /> */}\n    {/* </Card> */}\n    {/* <Card> */}\n    {/*   <TaiwanTestsOverviewPie /> */}\n    {/* </Card> */}\n    {/* <Card> */}\n    {/*   <TaiwanNewCasesArea /> */}\n    {/* </Card> */}\n    {/* <Card> */}\n    {/*   <CasesByCountiesArea /> */}\n    {/* </Card> */}\n    {/* <Card> */}\n    {/*   <CFRByGroupsBar /> */}\n    {/* </Card> */}\n    {/* <Card> */}\n    {/*   <TaiwanVaccinationArea /> */}\n    {/* </Card> */}\n    {/* <Card> */}\n    {/*   <VaccinationRateByCountiesBar /> */}\n    {/* </Card> */}\n  </ul>\n);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport * as V from \"victory\";\n\n// Helper function\nconst CheckError = (response) => {\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw Error(response.statusText);\n  }\n};\n\n// Transposes {'Key': 'Value'} to {x: key, y:value}\nconst transposeKeyValue = (data) =>\n  Object.entries(data).map(([key, value]) => ({\n    // Shortens date string\n    // x: key.replace(/\\/\\d{2}$/g, \"\"),\n    x: key,\n    y: value,\n  }));\n\n// Calculates daily new cases & deaths\nconst calDailyDifference = (data) =>\n  data.map((cur, index, array) => ({\n    ...cur,\n    y: index > 0 ? cur.y - array[index - 1].y : 0,\n  }));\n\nconst calPercentage = (numerator, denominator) =>\n  Number(((numerator / denominator) * 100).toFixed(2));\n\n//const sumValuesInObject = (data, key) =>\n//data.reduce(\n//(prev, cur) => (parseInt(prev) || 0) + (parseInt(cur[key]) || 0),\n//0\n//);\n\n// API Users\n// Generic hook to fetch data v1\nconst useDataApi = (initialUrl, initialData, transformFn) => {\n  const [data, setData] = useState(initialData);\n  const [url, setUrl] = useState(initialUrl);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    let isMounted = true;\n    const fetchData = async () => {\n      try {\n        const data = await fetch(url).then(CheckError);\n        if (isMounted) setData((transformFn && transformFn(data)) || data);\n      } catch (error) {\n        if (isMounted) setIsError(true);\n        console.error(error);\n      }\n      if (isMounted) setIsLoading(false);\n    };\n    fetchData();\n    return () => {\n      isMounted = false;\n    };\n  }, [transformFn, url]);\n  return [{ data, isLoading, isError }, setUrl];\n};\n\n//const dataFetchReducer = (state, action) => {\n//switch (action.type) {\n//case \"FETCH_INIT\":\n//return {\n//...state,\n//isLoading: true,\n//isError: false\n//};\n//case \"FETCH_SUCCESS\":\n//return {\n//...state,\n//isLoading: false,\n//isError: false,\n//data: action.payload\n//};\n//case \"FETCH_FAILURE\":\n//return {\n//...state,\n//isLoading: false,\n//isError: true\n//};\n//default:\n//throw new Error();\n//}\n//};\n\n//const useDataApiReducer = (initialUrl, initialData, transformFn) => {\n//console.log(\"API reducer called!\");\n//const [url, setUrl] = useState(initialUrl);\n//const [state, dispatch] = useReducer(dataFetchReducer, {\n//isLoading: true,\n//isError: false,\n//data: initialData\n//});\n//useEffect(() => {\n//const fetchData = async () => {\n//dispatch({ type: \"FETCH_INIT\" });\n//console.log(\"reducer init!\");\n//try {\n//const data = await fetch(url).then(CheckError);\n//dispatch({\n//type: \"FETCH_SUCCESS\",\n//payload: (transformFn && transformFn(data)) || data\n//});\n//console.log(\"reducer fetched!\");\n//} catch (error) {\n//dispatch({ type: \"FETCH_FAILURE\" });\n//}\n//};\n//fetchData();\n//}, [transformFn, url]);\n//console.log(\"reducer state:\", state);\n//return [state, setUrl];\n//};\n\n// SMALL COMPONENTS / HELPER FUNCTIONS\nconst CountriesDropDownMenu = ({ data, chosen, setChosen }) => {\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    setItems(\n      data.map((d) => ({\n        label: d.province ? d.province + \", \" + d.country : d.country,\n        value: d.province ? d.province : d.country,\n      }))\n    );\n  }, [data]);\n  return (\n    <div className=\"dropdown-container\">\n      Select:{\" \"}\n      <select value={chosen} onChange={(e) => setChosen(e.currentTarget.value)}>\n        {items.map(({ label, value }) => (\n          <option className=\"region-name\" key={label} value={value}>\n            {label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nconst BarChart = ({ data, x, y }) => {\n  const axis_style = {\n    grid: {\n      stroke: \"#f3f5f6\",\n      strokeWidth: 2,\n      strokeDasharray: \"15,15\",\n    },\n  };\n  return (\n    <div className=\"bar-chart\">\n      <V.VictoryChart\n        containerComponent={\n          <V.VictoryVoronoiContainer\n            labels={({ datum }) =>\n              datum.x ? `${datum.x}: ${datum._y}` : `${datum[x]}: ${datum._y}`\n            }\n            labelComponent={<V.VictoryTooltip constrainToVisibleArea />}\n          />\n        }\n        padding={{ top: 20, bottom: 40, left: 60, right: 20 }}\n      >\n        <V.VictoryAxis fixLabelOverlap />\n        <V.VictoryAxis dependentAxis fixLabelOverlap style={axis_style} />\n        <V.VictoryBar data={data} x={x} y={y} />\n      </V.VictoryChart>\n    </div>\n  );\n};\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"lds-spinner\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nconst RadioButton = (props) => {\n  return (\n    <div className=\"radio-btn\">\n      <input\n        id={props.id}\n        type=\"radio\"\n        onChange={props.changed}\n        checked={props.isSelected}\n      />\n      <label htmlFor={props.id}>{props.label}</label>\n    </div>\n  );\n};\n\nconst SmallTable = ({ items }) => {\n  return (\n    <div className=\"small-table\">\n      <table>\n        <thead>\n          <tr>\n            {items.map((item) => (\n              <th key={item.heading}>{item.heading}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {items.map((item, index) => (\n              <td className=\"numerical-data\" key={index}>\n                {item.datum.toLocaleString()}\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n// Charts\nconst DailyLineChartInAnArea = ({ chart_type }) => {\n  const [{ data, isLoading, isError }] = useDataApi(\n    \"https://disease.sh/v3/covid-19/historical?lastdays=90\",\n    null\n  );\n  const [chosen, setChosen] = useState(\"UK\");\n  const [lineData, setLineData] = useState({});\n  // if (data) console.log(data[0]);\n  const CHART_TYPES = {\n    newCases: \"Daily New Cases in \",\n    newDeaths: \"Daily Deaths in \",\n    deathRate: \"Fatality Rate in \",\n  };\n  const ChartTitle = ({ chart_type, area_name }) => {\n    return (\n      <div className=\"chart-title\">\n        {CHART_TYPES[chart_type]}\n        {area_name}\n      </div>\n    );\n  };\n  const getSTItems = (chart_type, data) =>\n    ({\n      newCases: [\n        {\n          heading: \"Total cases\",\n          datum: data.cases ? data.cases.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"New cases\",\n          datum: data.newCases ? data.newCases.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"Growth Factor\",\n          datum: data.newCases\n            ? (\n                data.newCases.slice(-1)[0].y / data.newCases.slice(-2)[0].y\n              ).toFixed(2)\n            : \"loading\",\n        },\n      ],\n      newDeaths: [\n        {\n          heading: \"Total deaths\",\n          datum: data.deaths ? data.deaths.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"New deaths\",\n          datum: data.newDeaths ? data.newDeaths.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"Fatality Rate\",\n          datum: data.deathRate\n            ? data.deathRate.slice(-1)[0].y + \"%\"\n            : \"loading\",\n        },\n      ],\n      deathRate: [\n        {\n          heading: \"Confirmed\",\n          datum: data.cases ? data.cases.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"Deaths\",\n          datum: data.deaths ? data.deaths.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"Fatality Rate\",\n          datum: data.deathRate\n            ? data.deathRate.slice(-1)[0].y + \"%\"\n            : \"loading\",\n        },\n      ],\n    }[chart_type]);\n  useEffect(() => {\n    if (data) {\n      let found = data.find(\n        (obj) =>\n          obj.province === chosen || (!obj.province && obj.country === chosen)\n      );\n      let cases = transposeKeyValue(found.timeline.cases);\n      let deaths = transposeKeyValue(found.timeline.deaths);\n      let new_cases = calDailyDifference(cases);\n      let new_deaths = calDailyDifference(deaths);\n      let death_rate = cases.map((cur, index) => ({\n        x: cur.x,\n        y: calPercentage(deaths[index].y, cur.y) || 0,\n      }));\n      setLineData({\n        country: found.country,\n        province: found.province,\n        cases: cases,\n        deaths: deaths,\n        newCases: new_cases,\n        newDeaths: new_deaths,\n        deathRate: death_rate,\n      });\n    }\n  }, [data, chosen]);\n  return (\n    <>\n      <div className=\"chart-container\">\n        <ChartTitle\n          chart_type={chart_type}\n          area_name={\n            lineData.province\n              ? lineData.province + \", \" + lineData.country\n              : lineData.country\n          }\n        />\n        {isError && <div>Something went wrong</div>}\n        {isLoading ? (\n          <LoadingSpinner />\n        ) : (\n          <>\n            <CountriesDropDownMenu\n              data={data}\n              chosen={chosen}\n              setChosen={setChosen}\n            />\n            <SmallTable items={getSTItems(chart_type, lineData)} />\n            <BarChart data={lineData[chart_type]} />\n            <p className=\"footnote\">\n              Source: John Hopkins University CSSE (\n              <a href=\"https://github.com/NovelCOVID/API\">NovelCOVID/API</a>)\n            </p>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\n//const ConfirmedCasesChinaVsWorldLineChart = () => {\n//const replaceDate = dataItem => ({\n//...dataItem,\n//reportDate: dataItem.reportDate.replace(/-/g, \"/\").replace(/^\\d{4}\\//g, \"\")\n//});\n//const transformFn = useCallback(data => data.map(replaceDate), []);\n//const [{ data, isLoading, isError }] = useDataApi(\n//\"https://covid.mathdro.id/api/daily\",\n//[],\n//transformFn\n//);\n//return (\n//<>\n//{isError && <div>Something went wrong</div>}\n//<div className=\"chart-title\">Confirmed Cases</div>\n//{isLoading ? (\n//<LoadingSpinner />\n//) : (\n//<>\n//<SmallTable\n//items={[\n//{ heading: \"China\", datum: data.slice(-1)[0].mainlandChina },\n//{\n//heading: \"Other\",\n//datum: data.slice(-1)[0].otherLocations\n//}\n//]}\n///>\n//<div className=\"line-chart\">\n//<V.VictoryChart\n//containerComponent={\n//<V.VictoryVoronoiContainer\n//labels={({ datum }) => `${datum[\"reportDate\"]}: ${datum._y}`}\n//labelComponent={<V.VictoryTooltip constrainToVisibleArea />}\n///>\n//}\n//padding={{ top: 20, bottom: 40, left: 60, right: 20 }}\n//>\n//<V.VictoryAxis fixLabelOverlap />\n//<V.VictoryAxis\n//dependentAxis\n//fixLabelOverlap\n//style={{\n//grid: {\n//stroke: \"#f3f5f6\",\n//strokeWidth: 2,\n//strokeDasharray: \"15,15\"\n//}\n//}}\n///>\n//<V.VictoryGroup colorScale={[\"#fb6361\", \"black\"]}>\n//<V.VictoryLine data={data} x=\"reportDate\" y=\"mainlandChina\" />\n//<V.VictoryLine data={data} x=\"reportDate\" y=\"otherLocations\" />\n//</V.VictoryGroup>\n//<V.VictoryLegend\n//colorScale={[\"#fb6361\", \"black\"]}\n//x={60}\n//y={20}\n//data={[{ name: \"China\" }, { name: \"Other Countries\" }]}\n///>\n//</V.VictoryChart>\n//</div>\n//<p className=\"footnote\">\n//Source: Johns Hopkins University Center for Systems Science and\n//Engineering (\n//<a href=\"https://github.com/mathdroid/covid-19-api\">\n//mathdroid/covid-19-api\n//</a>\n//)\n//</p>\n//</>\n//)}\n//</>\n//);\n//};\n\nconst ConfirmedCasesInSelectedCountriesLineChart = () => {\n  const [data, setData] = useState([\n    {\n      province: \"\",\n      country: \"\",\n      Lat: 0,\n      Long: 0,\n      confirmed: [],\n    },\n  ]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    let isMounted = true;\n\n    async function getData() {\n      try {\n        if (isMounted) setIsLoading(true);\n        const response = await fetch(`/confirmed_timeseries`);\n        const data = await response.json();\n        // Areas selected arbitrarily\n        // TODO: An UI for user to choose which areas to be shown\n        const areas_to_find = [\n          \"US\",\n          \"Brazil\",\n          \"France\",\n          \"Colombia\",\n          \"Russia\",\n          \"South Africa\",\n          \"India\",\n          \"Peru\",\n        ];\n        let areas_data = [];\n        for (let area of areas_to_find) {\n          let found = data.data.find(\n            (obj) =>\n              obj.province === area || (!obj.province && obj.country === area)\n          );\n          areas_data.push(found);\n        }\n        if (isMounted) setData(areas_data);\n        if (isMounted) setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getData();\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return (\n    <>\n      <div className=\"chart-title\">Confirmed Cases in Selected Countries</div>\n      <div className=\"line-chart\">\n        {isLoading ? (\n          <LoadingSpinner />\n        ) : (\n          <V.VictoryChart\n            containerComponent={\n              <V.VictoryVoronoiContainer\n                labels={({ datum }) => datum._y}\n                labelComponent={<V.VictoryTooltip constrainToVisibleArea />}\n              />\n            }\n            padding={{ top: 20, bottom: 40, left: 80, right: 20 }}\n            scale={{ x: \"time\", y: \"linear\" }}\n            minDomain={{ x: 30 }}\n          >\n            <V.VictoryAxis fixLabelOverlap />\n            <V.VictoryAxis\n              dependentAxis\n              fixLabelOverlap\n              style={{\n                grid: {\n                  stroke: \"#f3f5f6\",\n                  strokeWidth: 2,\n                  strokeDasharray: \"15,15\",\n                },\n              }}\n            />\n            <V.VictoryGroup colorScale={\"qualitative\"}>\n              {data.map((d) => (\n                <V.VictoryLine\n                  key={d.province ? d.province : d.country}\n                  data={d.confirmed}\n                />\n              ))}\n            </V.VictoryGroup>\n            <V.VictoryLegend\n              colorScale={\"qualitative\"}\n              orientation=\"horizontal\"\n              itemsPerRow={3}\n              x={80}\n              y={20}\n              data={data.map((d) => ({\n                name: d.province ? d.province : d.country,\n              }))}\n            />\n          </V.VictoryChart>\n        )}\n      </div>\n      <p className=\"footnote\">\n        Source: Johns Hopkins University Center for Systems Science and\n        Engineering (\n        <a href=\"https://github.com/CSSEGISandData/COVID-19\">\n          CSSEGISandData/COVID-19\n        </a>\n        )\n      </p>\n    </>\n  );\n};\n\nconst AreasWithOutstandingCasesTable = () => {\n  const [{ data, isLoading, isError }] = useDataApi(\n    \"https://disease.sh/v2/countries\",\n    []\n  );\n  const [sortBy, setSortBy] = useState(\"cases\");\n  return (\n    <>\n      <div className=\"chart-title\">Areas with Outstanding Cases</div>\n      {isError && <div>Something went wrong</div>}\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          <div className=\"radio-btn-container\">\n            <RadioButton\n              id=\"1\"\n              changed={() => setSortBy(\"cases\")}\n              isSelected={sortBy === \"cases\" ? true : false}\n              label=\"Total cases\"\n            />\n            <RadioButton\n              id=\"2\"\n              changed={() => setSortBy(\"deaths\")}\n              isSelected={sortBy === \"deaths\" ? true : false}\n              label=\"Total deaths\"\n            />\n            <RadioButton\n              id=\"3\"\n              changed={() => setSortBy(\"todayCases\")}\n              isSelected={sortBy === \"todayCases\" ? true : false}\n              label=\"New cases\"\n            />\n            <RadioButton\n              id=\"4\"\n              changed={() => setSortBy(\"todayDeaths\")}\n              isSelected={sortBy === \"todayDeaths\" ? true : false}\n              label=\"New deaths\"\n            />\n          </div>\n          <div className=\"area-data-sets\">\n            {data\n              .sort((a, b) => b[sortBy] - a[sortBy])\n              .slice(0, 12)\n              .map((d) => (\n                <div className=\"data-set\" key={d.country}>\n                  <div className=\"country-name vertical-inverted-title\">\n                    {d.country}\n                  </div>\n                  <div className=\"set-title\">Confirmed</div>\n                  <div className=\"confirmed-count numerical-data\">\n                    {d.cases.toLocaleString()}\n                  </div>\n                  <div className=\"smaller-numbers numerical-data\">\n                    (+{d.todayCases.toLocaleString()})\n                  </div>\n                  <div className=\"set-title\">Deaths</div>\n                  <div className=\"dead-count numerical-data\">\n                    {d.deaths.toLocaleString()}\n                  </div>\n                  <div className=\"smaller-numbers numerical-data\">\n                    (+{d.todayDeaths.toLocaleString()})\n                  </div>\n                  <div className=\"set-title\">Death Rate</div>\n                  <div className=\"current-dead-rate numerical-data\">\n                    {calPercentage(d.deaths, d.cases)}%\n                  </div>\n                </div>\n              ))}\n          </div>\n          <p className=\"footnote\">\n            Source: Johns Hopkins University Center for Systems Science and\n            Engineering (\n            <a href=\"https://github.com/NovelCOVID/API\">NovelCOVID / API</a>)\n          </p>\n        </>\n      )}\n    </>\n  );\n};\n\nconst FatalityRatioByAgeGroupInHubei = () => {\n  const data = [\n    { x: \"0-9\", y: 0.000094 },\n    { x: \"10-19\", y: 0.022 },\n    { x: \"20-29\", y: 0.091 },\n    { x: \"30-39\", y: 0.18 },\n    { x: \"40-49\", y: 0.4 },\n    { x: \"50-59\", y: 1.3 },\n    { x: \"60-69\", y: 4.6 },\n    { x: \"70-79\", y: 9.8 },\n    { x: \"80+\", y: 18 },\n  ];\n  return (\n    <>\n      <div className=\"chart-title\">\n        Fatality Ratio by Age Group in Hubei, China\n      </div>\n      <div className=\"bar-chart\">\n        <V.VictoryChart\n          domainPadding={{ x: 10 }}\n          padding={{ top: 15, bottom: 40, left: 50, right: 50 }}\n        >\n          <V.VictoryAxis\n            dependentAxis\n            style={{\n              grid: {\n                stroke: \"#f3f5f6\",\n                strokeWidth: 2,\n                strokeDasharray: \"15,15\",\n              },\n            }}\n          />\n          <V.VictoryBar\n            horizontal\n            barRatio={0.8}\n            data={data}\n            labels={({ datum }) => datum.y + \"%\"}\n          />\n          <V.VictoryAxis />\n        </V.VictoryChart>\n        <p className=\"footnote\">\n          Source: WHO;{\" \"}\n          <a href=\"https://www.medrxiv.org/content/10.1101/2020.03.04.20031104v1.full.pdf\">\n            \"ADJUSTED AGE-SPECIFIC CASE FATALITY RATIO DURING THE COVID-19\n            EPIDEMIC IN HUBEI, CHINA, JANUARY AND FEBRUARY 2020\" by Riou et al.\"\n          </a>\n        </p>\n      </div>\n    </>\n  );\n};\n\n//const FatalityRateInAnAreaLineChart = ({ area }) => {\n//const [data, setData] = useState({ areaName: \"\", statisticsData: [] });\n//const [isLoading, setIsLoading] = useState(true);\n//useEffect(() => {\n//async function getData() {\n//try {\n//setIsLoading(true);\n//const response = await fetch(`area_timeseries?area=${area}`);\n//const data = await response.json();\n//setData(data);\n//setIsLoading(false);\n//} catch (error) {\n//console.error(error);\n//}\n//}\n//getData();\n//}, [area]);\n//return (\n//<>\n//<div className=\"chart-title\">Fatality Rate in {data.areaName}</div>\n//{isLoading ? (\n//<LoadingSpinner />\n//) : (\n//<>\n//<SmallTable\n//items={[\n//{\n//heading: \"Confirmed\",\n//datum: data.statisticsData.slice(-1)[0].confirmedCount\n//},\n//{\n//heading: \"Deaths\",\n//datum: data.statisticsData.slice(-1)[0].deadCount\n//},\n//{\n//heading: \"Fatality Rate\",\n//datum: data.statisticsData.slice(-1)[0].deathRate + \"%\"\n//}\n//]}\n///>\n//<BarChart data={data.statisticsData} x=\"dateId\" y=\"deathRate\" />\n//<p className=\"footnote\">\n//Source: 丁香園（\n//<a href=\"https://github.com/BlankerL/DXY-COVID-19-Crawler\">\n//DXY-COVID-19-Crawler\n//</a>\n//）\n//</p>\n//</>\n//)}\n//</>\n//);\n//};\n\nconst DailyNewCasesWorldwideLineChart = () => {\n  const VictoryZoomVoronoiContainer = V.createContainer(\"zoom\", \"voronoi\");\n  const transformFn = useCallback((data) => {\n    if (data) {\n      let cases = transposeKeyValue(data.cases);\n      let deaths = transposeKeyValue(data.deaths);\n      let new_cases = calDailyDifference(cases);\n      let new_deaths = calDailyDifference(deaths);\n      return { cases, deaths, new_cases, new_deaths };\n    }\n  }, []);\n  const [{ data, isLoading, isError }] = useDataApi(\n    \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\",\n    [],\n    transformFn\n  );\n  const axis_style = {\n    grid: {\n      stroke: \"#f3f5f6\",\n      strokeWidth: 2,\n      strokeDasharray: \"15,15\",\n    },\n  };\n  return (\n    <>\n      <div className=\"chart-title\">Daily New Cases Worldwide</div>\n      {isError && <div>Something went wrong</div>}\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          <SmallTable\n            items={[\n              {\n                heading: \"2 days ago\",\n                datum: data ? data.new_cases.slice(-2)[0].y : \"loading\",\n              },\n              {\n                heading: \"Yesterday\",\n                datum: data ? data.new_cases.slice(-1)[0].y : \"loading\",\n              },\n              {\n                heading: \"Growth Factor\",\n                datum: data\n                  ? (\n                      data.new_cases.slice(-1)[0].y /\n                      data.new_cases.slice(-2)[0].y\n                    ).toFixed(2)\n                  : \"loading\",\n              },\n            ]}\n          />\n          <div className=\"line-chart\">\n            <V.VictoryChart\n              containerComponent={\n                //<V.VictoryVoronoiContainer\n                //labels={({ datum }) => `${datum.x}: ${datum._y}`}\n                //labelComponent={<V.VictoryTooltip constrainToVisibleArea />}\n                ///>\n                //<V.VictoryZoomContainer\n                //allowZoom={false}\n                //zoomDomain={{ x: [10, 200] }}\n                ///>\n                <VictoryZoomVoronoiContainer\n                  labels={({ datum }) => `${datum.x}: ${datum._y}`}\n                  labelComponent={<V.VictoryTooltip constrainToVisibleArea />}\n                  zoomDomain={{\n                    x: [data.new_cases.length - 120, data.new_cases.length],\n                  }}\n                  zoomDimension=\"x\"\n                />\n              }\n              height={400}\n              padding={{ top: 30, bottom: 40, left: 70, right: 0 }}\n            >\n              <V.VictoryAxis dependentAxis fixLabelOverlap style={axis_style} />\n              <V.VictoryArea data={data.new_cases} />\n              <V.VictoryAxis fixLabelOverlap />\n            </V.VictoryChart>\n          </div>\n          <p className=\"footnote\">\n            Source: Johns Hopkins University Center for Systems Science and\n            Engineering (<a href=\"https://disease.sh/\">Novel COVID API</a>)\n          </p>\n        </>\n      )}\n    </>\n  );\n};\n\nconst WorldwideRecoveryProgressPieChart = () => {\n  const [{ data, isLoading, isError }] = useDataApi(\n    \"https://disease.sh/v2/all\",\n    []\n  );\n  const pieData = [\n    { x: \"Recovered\", y: data.recovered },\n    { x: \"Sick\", y: data.active },\n    { x: \"Deaths\", y: data.deaths },\n  ];\n  return (\n    <>\n      <div className=\"chart-title\">Worldwide Recovery Progress</div>\n      {isError && <div>Something went wrong</div>}\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          <SmallTable items={[{ heading: \"All cases\", datum: data.cases }]} />\n          <div className=\"pie-chart\">\n            <svg className=\"pie\" width={272} height={320}>\n              <V.VictoryLabel\n                textAnchor=\"middle\"\n                x={136}\n                y={160}\n                style={{ fontSize: 28, fill: \"#85b135\" }}\n                text={calPercentage(data.recovered, data.cases) + \"%\"}\n              />\n              <V.VictoryPie\n                colorScale={[\"#85b135\", \"#fb6361\", \"#073f5c\"]}\n                padding={{ left: 68, right: 68 }}\n                innerRadius={52}\n                width={272}\n                height={320}\n                standalone={false}\n                data={pieData}\n                labels={({ datum }) =>\n                  `${datum.x}:\\n${datum.y.toLocaleString()}\\n` +\n                  \"(\" +\n                  calPercentage(datum.y, data.cases) +\n                  \"%)\"\n                }\n              />\n            </svg>\n            <p className=\"footnote\">\n              Source: Johns Hopkins University Center for Systems Science and\n              Engineering (<a href=\"https://disease.sh/\">Novel COVID API</a>)\n            </p>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport {\n  AreasWithOutstandingCasesTable,\n  DailyLineChartInAnArea,\n  //ConfirmedCasesChinaVsWorldLineChart,\n  ConfirmedCasesInSelectedCountriesLineChart,\n  FatalityRatioByAgeGroupInHubei,\n  DailyNewCasesWorldwideLineChart,\n  WorldwideRecoveryProgressPieChart,\n};\n","import React from \"react\";\n\n// SMALL COMPONENTS / HELPER FUNCTIONS\nfunction getToday() {\n  var time = new Date();\n  var year = time.getFullYear();\n  var month = time.getMonth() + 1;\n  var date = time.getDate();\n  var formattedDate = year + \"/\" + month + \"/\" + date;\n  return formattedDate;\n}\n\nexport const AppTitle = () => {\n  return (\n    <div className=\"app-title\">\n      <h1>\n        Covid<span className=\"title-numerals\">-19</span> Dashboard\n      </h1>\n      <h2 className=\"title-date\">{getToday()}</h2>\n    </div>\n  );\n};\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { setCookie } from \"../utils/useCookies\";\n\nexport const NavBar = ({ view, setView }) => {\n  // A series of buttons to switch between views of charts.\n  const buttons = [\n    {\n      name: \"Global\",\n      view_name: \"global\",\n      className: view === \"global\" ? \"active view-button\" : \"view-button\",\n    },\n    {\n      name: \"台灣版\",\n      view_name: \"taiwan\",\n      className: view === \"taiwan\" ? \"active view-button\" : \"view-button\",\n    },\n  ];\n\n  return (\n    <div className=\"nav\">\n      {buttons.map((button) => (\n        <ViewButton setView={setView} {...button} key={button.view_name} />\n      ))}\n    </div>\n  );\n};\n\nconst ViewButton = ({ name, view_name, className, setView }) => {\n  // A series of buttons to switch between views of charts.\n  const handleClick = (e) => {\n    e.preventDefault();\n    setCookie(\"view\", view_name);\n    setView(view_name);\n  };\n  // Changes the button label according to current view.\n  return (\n    <button onClick={handleClick} type=\"button\" className={className}>\n      {name}\n    </button>\n  );\n};\n","import React from \"react\";\nimport styles from \"./OverviewPie.module.css\";\nexport const ColorLegend = ({\n  colorScale,\n  tickSpacing = 20,\n  tickSize = 10,\n  tickTextOffset = 20,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  colorScale.domain().map((domainValue, index) => (\n    <g\n      key={colorScale(domainValue)}\n      className={styles.legend}\n      transform={`translate(0, ${index * tickSpacing})`}\n      onMouseEnter={() => onHover(domainValue)}\n      onMouseLeave={() => onHover(null)}\n      opacity={hoveredValue && domainValue !== hoveredValue ? fadeOpacity : 1}\n    >\n      <circle fill={colorScale(domainValue)} r={tickSize}></circle>\n      <text dy=\".32em\" x={tickTextOffset}>\n        {domainValue}\n      </text>\n    </g>\n  ));\n","import React from \"react\";\n\nexport const DataTable = ({ items, dataType, dataValue }) => {\n  return (\n    <div className=\"small-table\">\n      <table>\n        <thead>\n          <tr>\n            <th>Total</th>\n            {/* {items.map((item) => ( */}\n            {/*   <th key={dataType(item)}>{dataType(item)}</th> */}\n            {/* ))} */}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className=\"numerical-data\">\n              {items.reduce((acc, cur) => acc + cur.value, 0).toLocaleString()}\n            </td>\n            {/* {items.map((item, index) => ( */}\n            {/*   <td className=\"numerical-data\" key={index}> */}\n            {/*     {dataValue(item).toLocaleString()} */}\n            {/*   </td> */}\n            {/* ))} */}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from \"react\";\nexport const PieLabel = ({\n  pieLabelPosition,\n  dataValue,\n  d,\n  percentage,\n  className,\n  labelOffsetY = 18,\n}) => (\n  <text\n    className={className}\n    transform={`translate(${pieLabelPosition})`}\n    textAnchor=\"middle\"\n    dominantBaseline=\"middle\"\n  >\n    <tspan className=\"num\" x=\"0\" dy={-labelOffsetY} fill=\"black\">\n      {percentage}%\n    </tspan>\n    <tspan x=\"0\" dy={labelOffsetY} fill=\"#635F5D\">\n      {dataValue(d.data).toLocaleString()}\n    </tspan>\n  </text>\n);\n","import React from \"react\";\nimport { sum } from \"d3\";\nimport styles from \"./OverviewPie.module.css\";\nimport { PieLabel } from \"./PieLabel.jsx\";\nexport const PieChart = ({\n  pieData,\n  pieArc,\n  colorPie,\n  colorValue,\n  dataType,\n  dataValue,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  colorPie(pieData).map((d) => {\n    const domainValue = dataType(d.data);\n    let pieLabelPosition = pieArc.centroid(d);\n    if (d.endAngle - d.startAngle < 0.25) {\n      pieLabelPosition[0] *= 2.2;\n      pieLabelPosition[1] *= 2.2;\n    }\n    const dataPercentage = (\n      (dataValue(d.data) / sum(pieData, (d) => d.value)) *\n      100\n    ).toFixed(1);\n    return (\n      <g\n        className={styles.pieChart}\n        opacity={hoveredValue && domainValue !== hoveredValue ? fadeOpacity : 1}\n        onMouseEnter={() => onHover(domainValue)}\n        onClick={() => onHover(domainValue)}\n        onMouseLeave={() => onHover(null)}\n        key={dataType(d.data)}\n      >\n        <path fill={colorValue(d.data)} d={pieArc(d)} />\n        <PieLabel\n          pieLabelPosition={pieLabelPosition}\n          dataValue={dataValue}\n          d={d}\n          percentage={dataPercentage}\n          className={styles.pieLabelStroke}\n        />\n        <PieLabel\n          pieLabelPosition={pieLabelPosition}\n          dataValue={dataValue}\n          d={d}\n          percentage={dataPercentage}\n          className={styles.pieLabel}\n        />\n      </g>\n    );\n  });\n","import React from \"react\";\nexport const Collapsible = ({ children, id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        What does this chart tell us?\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">{children}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { arc, pie, scaleOrdinal } from \"d3\";\nimport styles from \"./OverviewPie.module.css\";\nimport { useData } from \"./useData\";\nimport { LoadSpinner } from \"../elements/CommonUIs\";\nimport { ColorLegend } from \"./ColorLegend\";\nimport { DataTable } from \"./DataTable\";\nimport { PieChart } from \"./PieChart\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.6 : width * 0.7;\nconst pieRadius = (width * 0.66) / 2;\nconst pieOuterMargin = pieRadius * 0.7;\n\nconst legendCircleRadius = 8;\nconst legendItemSpacing = 26;\nconst fadeOpacity = 0.3;\n\nconst legendX = width * 0.66;\nconst legendY = height / 2;\n\nconst pieArc = arc().innerRadius(0).outerRadius(pieOuterMargin);\n\nconst dataType = (d) => d.case;\nconst dataValue = (d) => d.value;\nconst colorValue = (d) => d.color;\n\nconst title = \"Worldwide Cases Overview\";\nconst ColorLegendLabel = \"Cases\";\n\nexport const OverviewPie = () => {\n  const [hoveredValue, setHoveredValue] = useState(null);\n\n  const data = useData();\n  if (!data) return <LoadSpinner />;\n  const pieData = [\n    {\n      case: \"Deaths\",\n      value: data.deaths,\n      color: \"#BD2D28\",\n    },\n    {\n      case: \"Recovered\",\n      value: data.recovered,\n      color: \"#6BBBA1\",\n    },\n    {\n      case: \"Active\",\n      value: data.active,\n      color: \"#E25A42\",\n    },\n  ];\n  const colorPie = pie().sort(null).value(dataValue);\n\n  const colorScale = scaleOrdinal()\n    .domain(pieData.map(dataType))\n    .range(pieData.map(colorValue));\n\n  const ChartTitle = ({ title }) => <div className=\"chart-title\">{title}</div>;\n\n  const SourceCredit = () => (\n    <p className=\"footnote\">\n      Data source: Worldometers (\n      <a href=\"https://github.com/disease-sh/api\">disease.sh</a>)\n    </p>\n  );\n\n  return (\n    <>\n      <ChartTitle title={title} />\n      <DataTable items={pieData} dataType={dataType} dataValue={dataValue} />\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        <g transform={`translate(${pieRadius},${height / 2})`}>\n          <PieChart\n            pieData={pieData}\n            colorPie={colorPie}\n            colorValue={colorValue}\n            pieArc={pieArc}\n            dataType={dataType}\n            dataValue={dataValue}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n        <g transform={`translate(${legendX}, ${legendY})`}>\n          <text className={styles.legendLabel} x={-7} y={-legendItemSpacing}>\n            {ColorLegendLabel}\n          </text>\n          <ColorLegend\n            colorScale={colorScale}\n            tickSpacing={legendItemSpacing}\n            tickSize={legendCircleRadius}\n            tickTextOffset={16}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n      </svg>\n      <Collapsible id={title}>\n        <p>\n          This chart gives a rough overview of COVID-19 pandemic currently\n          spreading around the world. The total number at the top left corner\n          shows a number of confirmed cases ever tested positive. Since not\n          everyone has been tested, this can only represent the cases we know so\n          far.\n        </p>\n        <p>\n          All tested positive cases are further divided into three categories as\n          shown in the pie chart: active, recovered, and deaths. The recovered\n          percentage is intended to give us an idea of how far we are from\n          global recovery. The \"clock\", however, can turn back when the virus is\n          spreading rapidly. Active cases represents the people still suffering\n          from the disease. Most active cases will recover, but some will not.\n          According to{\" \"}\n          <a href=\"https://www.nytimes.com/interactive/2020/world/asia/china-coronavirus-contain.html\">\n            an early report{\" \"}\n          </a>\n          by <i>the New York Times</i>, the fatality rate for those infected is\n          likely to be lower than 3%.\n        </p>\n        <SourceCredit />\n      </Collapsible>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\n\nconst jsonUrl = \"https://disease.sh/v3/covid-19/all\";\n\n// Use JSON data\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // console.log(data);\n\n  useEffect(() => {\n    let isMounted = true;\n    json(jsonUrl).then((d) => {\n      if (isMounted) setData(d);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import { useState, useEffect } from \"react\";\nimport { csv, timeParse } from \"d3\";\n\nconst csvUrl =\n  \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/jhu/new_cases.csv\";\n\nconst parseDay = timeParse(\"%Y-%m-%d\");\n\nconst transform = (rawData) => {\n  return rawData.map((d) => ({\n    date: parseDay(d.date),\n    newCases: +d.World,\n  }));\n};\n\n// Data: Covid daily new_cases\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n  useEffect(() => {\n    let isMounted = true;\n    csv(csvUrl).then((rawData) => {\n      if (isMounted) setData(transform(rawData));\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import React from \"react\";\n\nexport const ChartTitle = ({ title }) => (\n  <div className=\"chart-title\">{title}</div>\n);\n","import React from \"react\";\n\nexport const DataTable = ({ items }) => {\n  return (\n    <div className=\"small-table\">\n      <table>\n        <thead>\n          <tr>\n            {items.map((item, index) => (\n              <th key={index}>{item.heading}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {items.map((item, index) => (\n              <td className=\"numerical-data\" key={index}>\n                {item.value}\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom } from \"d3\";\nimport styles from \"./LineChart.module.css\";\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickCount = 6,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  useEffect(() => {\n    const xAxisG = select(ref.current);\n    const xAxis = axisBottom(xScale)\n      .ticks(tickCount, tickFormat)\n      .tickSize(-innerHeight)\n      .tickPadding(tickOffset);\n    xAxisG.call(xAxis);\n  }, [xScale, innerHeight, tickFormat, tickOffset, tickCount]);\n  return (\n    <g\n      ref={ref}\n      className={styles.tick}\n      transform={`translate(0, ${innerHeight})`}\n    />\n  );\n};\n\n// export const AxisBottom = ({\n//   xScale,\n//   innerHeight,\n//   tickFormat,\n//   tickOffset = 3\n// }) =>\n//   // Label and reference lines for x scale\n//   xScale.ticks().map(tickValue => (\n//     // Each tick goes to the position indicating its value\n//     <g\n//       className={styles.tick}\n//       key={tickValue}\n//       transform={`translate(${xScale(tickValue)}, 0)`}\n//     >\n//       {/* the values of x1, x2, y1 are 0, which is default */}\n//       <line y2={innerHeight} />\n//       <text\n//         y={innerHeight + tickOffset}\n//         dy=\"0.71em\"\n//         style={{ textAnchor: \"middle\" }}\n//       >\n//         {tickFormat(tickValue)}\n//       </text>\n//     </g>\n//   ));\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisLeft } from \"d3\";\nimport styles from \"./LineChart.module.css\";\n\nexport const AxisLeft = ({\n  yScale,\n  innerWidth,\n  tickFormat,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  useEffect(() => {\n    const yAxisG = select(ref.current);\n    const yAxis = axisLeft(yScale)\n      .tickSize(innerWidth)\n      .tickPadding(tickOffset)\n      .tickFormat(tickFormat);\n    yAxisG.call(yAxis);\n  }, [yScale, innerWidth, tickFormat, tickOffset]);\n  return (\n    <g\n      ref={ref}\n      className={styles.tick}\n      transform={`translate(${innerWidth}, 0)`}\n    />\n  );\n};\n","import React from \"react\";\nimport styles from \"./LineChart.module.css\";\nexport const XMarkerLine = ({ value, xScale, innerHeight }) => {\n  const markerLineX = xScale(value);\n  const markerLineY1 = 0;\n  const markerLineY2 = innerHeight;\n  return (\n    <line\n      className={styles.markerLine}\n      x1={markerLineX}\n      y1={markerLineY1}\n      x2={markerLineX}\n      y2={markerLineY2}\n    />\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { pointer, bisectCenter } from \"d3\";\nimport styles from \"./LineChart.module.css\";\nexport const RectOverlay = ({\n  data,\n  areaGenerator,\n  onHover,\n  innerWidth,\n  innerHeight,\n}) => {\n  return useMemo(() => {\n    const points = data.map((d) => areaGenerator.x()(d));\n    return (\n      <g className={styles.captureArea}>\n        <rect\n          width={innerWidth}\n          height={innerHeight}\n          onTouchStart={(event) => {\n            event.preventDefault();\n            const index = bisectCenter(points, pointer(event)[0]);\n            onHover(data[index]);\n          }}\n          onPointerMove={(event) => {\n            const index = bisectCenter(points, pointer(event)[0]);\n            onHover(data[index]);\n          }}\n          onMouseMove={(event) => {\n            const index = bisectCenter(points, pointer(event)[0]);\n            onHover(data[index]);\n          }}\n        />\n      </g>\n    );\n  }, [data, areaGenerator, innerHeight, innerWidth, onHover]);\n};\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport {\n  scaleLinear,\n  scaleTime,\n  area,\n  timeFormat,\n  extent,\n  max,\n  format,\n  curveNatural,\n} from \"d3\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { XMarkerLine } from \"./XMarkerLine\";\nimport { RectOverlay } from \"./RectOverlay\";\nimport styles from \"./LineChart.module.css\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.6 : width * 0.8;\nconst margin = { top: 20, right: 0, bottom: 40, left: 65 };\n\nconst xValue = (d) => d.date;\nconst xAxisTickFormat = timeFormat(\"%b, %Y\");\nconst xTooltipFormat = timeFormat(\"%-m/%-d, %y\");\n\nconst yValue = (d) => d.newCases;\n// const yAxisLabel = \"New cases\";\n// const yAxisLabelOffset = 60;\nconst siFormat = format(\".2s\");\nconst yAxisTickFormat = (tickValue) => siFormat(tickValue);\n\nexport const LineChart = ({ data }) => {\n  // Change state when different point is hovered\n  const [activeData, setActiveData] = useState(data[data.length - 1]);\n\n  // The chart's real height and width\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  // X axis is population, thus use linear scale\n  const xScale = useMemo(\n    () =>\n      scaleTime()\n        // Domain is an array of actual dates\n        // d3.extent(iterable[, accessor]) returns the [max, min] of iterable\n        .domain(extent(data, xValue))\n        // Range is where the data is shown in pixels, starts from 0 to chart's width\n        .range([0, innerWidth])\n        .nice(),\n    [data, innerWidth]\n  );\n\n  // Y is countries is categorical, band scale is for ordinal or categorical dimension\n  const yScale = useMemo(\n    () =>\n      scaleLinear()\n        .domain([0, max(data, yValue)])\n        .range([innerHeight, 0])\n        .nice(),\n    [data, innerHeight]\n  );\n\n  const handleVoronoiHover = useCallback(setActiveData, [setActiveData]);\n\n  const areaGenerator = useMemo(\n    () =>\n      area()\n        .x((d) => xScale(xValue(d)))\n        .y1((d) => yScale(yValue(d)))\n        .y0(yScale(0))\n        .curve(curveNatural),\n    [xScale, yScale]\n  );\n\n  const Tooltip = ({ activeData, className }) => (\n    <text className={className} textAnchor={\"end\"} x={0} y={-5}>\n      <tspan x=\"-10\" dy=\"0\" fontWeight=\"bold\">\n        {activeData.newCases.toLocaleString()}\n      </tspan>\n      <tspan x=\"-10\" dy=\"1.5em\">\n        {xTooltipFormat(activeData.date)}\n      </tspan>\n    </text>\n  );\n  return (\n    <>\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        {/* Adds margin to left and top  */}\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom\n            innerHeight={innerHeight}\n            xScale={xScale}\n            tickFormat={xAxisTickFormat}\n            tickOffset={7}\n            tickCount={width > 480 ? 6 : 2}\n          />\n          <AxisLeft\n            innerWidth={innerWidth}\n            yScale={yScale}\n            tickOffset={7}\n            tickFormat={yAxisTickFormat}\n          />\n          {/* <text */}\n          {/*   className={styles.axisLabel} */}\n          {/*   textAnchor=\"middle\" */}\n          {/*   transform={`translate(${-yAxisLabelOffset}, ${ */}\n          {/*     innerHeight / 2 */}\n          {/*   }) rotate(-90)`} */}\n          {/* > */}\n          {/*   {yAxisLabel} */}\n          {/* </text> */}\n          <g className={styles.marks}>\n            <path d={areaGenerator(data)} />\n          </g>\n          {activeData ? (\n            <>\n              <g className={styles.marks}>\n                <path d={areaGenerator(data)} />\n              </g>\n              <XMarkerLine\n                value={activeData.date}\n                xScale={xScale}\n                innerHeight={innerHeight}\n              />\n              <g\n                transform={`translate(${areaGenerator.x()(\n                  activeData\n                )}, ${areaGenerator.y1()(activeData)})`}\n              >\n                <circle className={styles.dataPoint} r={5} />\n                <Tooltip\n                  activeData={activeData}\n                  className={styles.tooltipStroke}\n                />\n                <Tooltip activeData={activeData} className={styles.tooltip} />\n              </g>\n            </>\n          ) : null}\n          <RectOverlay\n            onHover={handleVoronoiHover}\n            data={data}\n            areaGenerator={areaGenerator}\n            innerWidth={innerWidth}\n            innerHeight={innerHeight}\n          />\n        </g>\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\nexport const Collapsible = ({ children, id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        What does this chart tell us?\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">{children}</div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"./useData\";\nimport { LoadSpinner } from \"../elements/CommonUIs\";\nimport { ChartTitle } from \"./ChartTitle\";\nimport { DataTable } from \"./DataTable\";\nimport { LineChart } from \"./LineChart\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst sumValuesInObject = (data, key) =>\n  data.reduce(\n    (prev, cur) => prev + cur[key],\n    0 // initialValue\n  );\n\nconst title = \"Daily New Cases Worldwide\";\n\nconst SourceCredit = () => (\n  <p className=\"footnote\">\n    Data source: Center for Systems Science and Engineering (CSSE) at Johns\n    Hopkins University (\n    <a href=\"https://github.com/owid/covid-19-data/tree/master/public/data/jhu\">\n      Our Wolrd in Data\n    </a>\n    )\n  </p>\n);\n\nexport const CasesLineChart = () => {\n  const data = useData();\n  if (!data) return <LoadSpinner />;\n  // if (data) console.log(data);\n  const lastSevenDaysAvg = sumValuesInObject(data.slice(-7), \"newCases\") / 7;\n\n  const beforeSevenDaysAvg =\n    sumValuesInObject(data.slice(-14, -7), \"newCases\") / 7;\n\n  const tableData = [\n    {\n      heading: \"Average previous week\",\n      value: Math.round(beforeSevenDaysAvg).toLocaleString(),\n    },\n    {\n      heading: \"Average this week\",\n      value: Math.round(lastSevenDaysAvg).toLocaleString(),\n    },\n    {\n      heading: \"Growth factor\",\n      value: (lastSevenDaysAvg / beforeSevenDaysAvg).toFixed(2),\n    },\n  ];\n\n  return (\n    <>\n      <ChartTitle title={title} />\n      <DataTable items={tableData} />\n      <LineChart data={data} />\n      <Collapsible id={title}>\n        <p>\n          This chart is intended to show how fast the viruses are spreading over\n          time. Each data point represents the number of people tested positive\n          on that day, therefore \"new cases\".\n        </p>\n        <p>\n          During a contagious disease's growing period, an infected person is\n          likely to spread the virus to more than one healthy person, so the\n          latter days will see more new cases than the previous days. For\n          example, if we have 10 new cases today but only 5 new cases yesterday,\n          it can mean each of those 5 people passed the disease to 2 more people\n          during the day. So, the \"2\" is the \"growth factor\" listed here above\n          the chart. Only when the growth factor constantly goes below 1, have\n          we the chance to see an end to the pandemic.\n        </p>\n        <p>\n          Since most societies work in a weekly basis, we can see the data\n          regularly fluctuates inside of a week. To avoid misintepretation, this\n          chart calculates the growth factor with weekly averages.\n        </p>\n        <SourceCredit />\n      </Collapsible>\n    </>\n  );\n};\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickOffset = 3,\n  tickCount = 6,\n}) =>\n  // Label and reference lines for x scale\n  xScale.ticks(tickCount).map((tickValue) => (\n    // Each tick goes to the position indicating its value\n    <g\n      className={styles.tick}\n      key={tickValue}\n      transform={`translate(${xScale(tickValue)}, 0)`}\n    >\n      {/* the values of x1, x2, y1 are 0, which is default */}\n      <line y2={innerHeight} />\n      <text\n        y={innerHeight + tickOffset}\n        dy=\"0.71em\"\n        style={{ textAnchor: \"middle\" }}\n      >\n        {tickFormat(tickValue)}\n      </text>\n    </g>\n  ));\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\nexport const AxisLeft = ({\n  countryScale,\n  ageScale,\n  width,\n  margin,\n  tickOffset = 3,\n}) =>\n  ageScale.domain().map((tickValue) => (\n    <g\n      key={tickValue}\n      className={styles.tick}\n      transform={`translate(0,${\n        ageScale(tickValue) + ageScale.bandwidth() / 2\n      })`}\n    >\n      <rect\n        x={-margin.left}\n        y={-ageScale.bandwidth() / 2 - 4}\n        width={width}\n        height={ageScale.bandwidth() + 8}\n      />\n      <text\n        dy=\".32em\"\n        x={-margin.left + tickOffset}\n        style={{ fontSize: \"1.1em\", fontWeight: \"bold\", textAnchor: \"start\" }}\n      >\n        {tickValue}\n      </text>\n      {countryScale.domain().map((tickValue) => (\n        <text\n          key={tickValue}\n          dy=\".72em\"\n          x={-tickOffset}\n          y={countryScale(tickValue) - ageScale.bandwidth() / 2}\n          style={{ textAnchor: \"end\", dominantBaseline: \"middle\" }}\n        >\n          {tickValue}\n        </text>\n      ))}\n    </g>\n  ));\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\nexport const Marks = ({\n  data,\n  ageGroups,\n  ageScale,\n  xScale,\n  countryScale,\n  countryValue,\n  colorScale,\n  tooltipFormat,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  data.map((d) =>\n    ageGroups.map((key) => (\n      <g\n        key={countryValue(d) + key}\n        className={styles.marks}\n        onMouseEnter={() => onHover(countryValue(d))}\n        onMouseLeave={() => onHover(null)}\n        opacity={\n          hoveredValue && hoveredValue !== countryValue(d) ? fadeOpacity : 1\n        }\n      >\n        <rect\n          x={0}\n          y={ageScale(key) + countryScale(countryValue(d))}\n          width={xScale(d[key])}\n          height={countryScale.bandwidth()}\n          fill={colorScale(countryValue(d))}\n        >\n          <title>{`${key}: ${tooltipFormat(d[key])}`}</title>\n        </rect>\n        <text\n          x={xScale(d[key]) + 3}\n          y={ageScale(key) + countryScale(countryValue(d))}\n          dy=\".68em\"\n          style={{ textAnchor: \"start\", dominantBaseline: \"middle\" }}\n        >\n          {tooltipFormat(d[key])}\n        </text>\n      </g>\n    ))\n  );\n","import React, { useState, useMemo } from \"react\";\nimport { scaleBand, scaleLinear, scaleOrdinal, max, schemeTableau10 } from \"d3\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { Marks } from \"./Marks\";\n// import { ColorLegend } from \"./ColorLegend\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.9 : width * 2;\nconst margin = { top: 20, right: 40, bottom: 30, left: 170 };\n\nconst countryValue = (d) => d.Country;\nconst xAxisTickFormat = (tickValue) => tickValue + \"%\";\n\n// The chart's real height and width\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\n\n// Legend settings\n// const legendX = width * 0.7;\n// const legendY = innerHeight / 2;\n// const ColorLegendLabel = \"Countries\";\n\n// const circleRadius = 8;\n// const legendItemSpacing = 26;\nconst fadeOpacity = 0.3;\n\nexport const BarChart = ({ data }) => {\n  const [hoveredValue, setHoveredValue] = useState(null);\n  const ageGroups = data.columns.slice(1);\n\n  // X axis is percentage of deaths, thus use linear scale\n  const xScale = useMemo(\n    () =>\n      scaleLinear()\n        // Domain is an array of actual data, starts from 0 to the max of all countries\n        // d3.max(iterable[, accessor])\n        .domain([0, max(data, (d) => max(ageGroups, (key) => d[key]))])\n        // Range is where the data is shown in pixels, starts from 0 to chart's width\n        .range([0, innerWidth])\n        .nice(),\n    [ageGroups, data]\n  );\n\n  const ageScale = useMemo(\n    () =>\n      scaleBand().domain(ageGroups).range([0, innerHeight]).paddingInner(0.15),\n    [ageGroups]\n  );\n\n  // Y is countries is categorical, band scale is for ordinal or categorical dimension\n  const countryScale = useMemo(\n    () =>\n      scaleBand()\n        .domain(data.map(countryValue))\n        .range([ageScale.bandwidth(), 0])\n        .paddingInner(0.1),\n    [ageScale, data]\n  );\n\n  const colorScale = useMemo(\n    () => scaleOrdinal().domain(data.map(countryValue)).range(schemeTableau10),\n    [data]\n  );\n\n  return (\n    <>\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        {/* Adds margin to left and top  */}\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom\n            innerHeight={innerHeight}\n            xScale={xScale}\n            tickFormat={xAxisTickFormat}\n            tickOffset={8}\n          />\n          <AxisLeft\n            countryScale={countryScale}\n            ageScale={ageScale}\n            margin={margin}\n            width={width}\n          />\n          <Marks\n            data={data}\n            ageScale={ageScale}\n            ageGroups={ageGroups}\n            xScale={xScale}\n            countryScale={countryScale}\n            countryValue={countryValue}\n            colorScale={colorScale}\n            tooltipFormat={xAxisTickFormat}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n        {/* <g transform={`translate(${legendX}, ${legendY})`}> */}\n        {/*   <text className={styles.legendLabel} x={-7} y={-legendItemSpacing}> */}\n        {/*     {ColorLegendLabel} */}\n        {/*   </text> */}\n        {/*   <ColorLegend */}\n        {/*     colorScale={colorScale} */}\n        {/*     tickSpacing={legendItemSpacing} */}\n        {/*     tickSize={circleRadius} */}\n        {/*     tickTextOffset={16} */}\n        {/*     onHover={setHoveredValue} */}\n        {/*     hoveredValue={hoveredValue} */}\n        {/*     fadeOpacity={fadeOpacity} */}\n        {/*   /> */}\n        {/* </g> */}\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\n\nconst SourceCredit = () => (\n  <>\n    <p className=\"footnote\">\n      Data sources: Chinese Center for Disease Control and Prevention (CDC);\n      Spanish Ministry of Health; Korea Centers for Disease Control and\n      Prevention (KCDC); Onder G, Rezza G, Brusaferro S. Case-Fatality Rate and\n      Characteristics of Patients Dying in Relation to COVID-19 in Italy. JAMA.\n      (This is a remake of{\" \"}\n      <a href=\"https://ourworldindata.org/mortality-risk-covid#case-fatality-rate-of-covid-19-by-age\">\n        the same chart\n      </a>{\" \"}\n      by Hannah Ritchie and Max Roser published in OurWorldinData.org)\n    </p>\n    <p className=\"footnote\">\n      Licensed under CC-BY by the authors Hannah Ritchie and Max Roser.\n    </p>\n  </>\n);\n\nexport const Collapsible = ({ id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        What does this chart tell us?\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">\n          <p>\n            This chart gives us a rough idea of which age groups are most at\n            risk to COVID-19. If we know which groups are most likely to die\n            from the disease, precautions and resouces like vaccines can be\n            directed to the ones who need them most. According to this chart,\n            the elderly are most likely to die from COVID-19.\n          </p>\n          <p>\n            The data presented in the chart are calculated from the number of\n            deaths divided by the number of confirmed cases in each age group.\n            Since COVID-19 is still an ongoing pandemic, these numbers can\n            change over time and conditions. There are two main limitations to\n            keep in mind when interpreting this chart:\n          </p>\n          <ol>\n            <li>\n              Since not everyone is tested within the population, we do not know\n              the real number of infected cases.\n            </li>\n            <li>\n              Some infected individuals are still alive at the time of\n              recording, but will eventually die from the disease.\n            </li>\n          </ol>\n          <SourceCredit />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"./useData\";\nimport { BarChart } from \"./BarChart\";\nimport { LoadSpinner } from \"../elements/CommonUIs\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst ChartTitle = ({ title }) => <div className=\"chart-title\">{title}</div>;\n\nexport const CaseFatalityRatesByAgeBarChart = () => {\n  const data = useData();\n  if (!data) return <LoadSpinner />;\n\n  return (\n    <>\n      <ChartTitle title=\"Case fatality rates by age\" />\n      <BarChart data={data} />\n      <Collapsible id=\"caseFatalityRetes\" />\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { csv, autoType } from \"d3\";\n\nconst csvUrl =\n  \"https://gist.githubusercontent.com/mgeorgetw/965bfe365ab8e70e2ee34c9a5d4d594a/raw/COVID19CaseFatalityRatesByAge.csv\";\n\n// Data: Case Fatality Rates By Age\n// https://ourworldindata.org/mortality-risk-covid#case-fatality-rate-of-covid-19-by-age\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n\n  useEffect(() => {\n    let isMounted = true;\n    csv(csvUrl, autoType).then((data) => {\n      if (isMounted) setData(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport \"./App.css\";\nimport { cookieExists, setCookie, findCookie } from \"./utils/useCookies\";\n\nimport { TaiwanView } from \"./TaiwanView/index\";\nimport * as Charts from \"./Charts.js\";\nimport { Card, Footer } from \"./elements/CommonUIs\";\nimport { AppTitle } from \"./elements/AppTitle\";\nimport { NavBar } from \"./elements/NavBar\";\nimport { OverviewPie } from \"./OverviewPie/index\";\nimport { CasesLineChart } from \"./CasesLineChart/index\";\nimport { CaseFatalityRatesByAgeBarChart } from \"./CaseFatalityRatesByAgeBarChart/index\";\n\n// Pull to refresh\nimport PullToRefresh from \"pulltorefreshjs\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst area = \"Taiwan\";\n\nconst GlobalView = () => (\n  <ul className=\"flex-card-list\">\n    <Card>\n      <OverviewPie />\n    </Card>\n    <Card>\n      <CasesLineChart />\n    </Card>\n    {/* <Card> */}\n    {/*   <Charts.WorldwideRecoveryProgressPieChart /> */}\n    {/* </Card> */}\n    {/* <Card> */}\n    {/*   <Charts.DailyNewCasesWorldwideLineChart /> */}\n    {/* </Card> */}\n    <Card>\n      <Charts.AreasWithOutstandingCasesTable />\n    </Card>\n    <Card>\n      <Charts.DailyLineChartInAnArea area={area} chart_type=\"newCases\" />\n    </Card>\n    <Card>\n      <Charts.DailyLineChartInAnArea area={area} chart_type=\"newDeaths\" />\n    </Card>\n    {/* <Card> */}\n    {/*   <Charts.ConfirmedCasesInSelectedCountriesLineChart /> */}\n    {/* </Card> */}\n    <Card>\n      <CaseFatalityRatesByAgeBarChart />\n    </Card>\n  </ul>\n);\n\nconst App = () => {\n  const [view, setView] = useState(\"global\");\n  useEffect(() => {\n    // Checks if there's a cookie for view, if not, set it to Indices View\n    if (cookieExists(\"view\")) {\n      // Set view according to cookie, if exists\n      setView(findCookie(\"view\"));\n    } else {\n      setCookie(\"view\", \"global\");\n    }\n\n    PullToRefresh.init({\n      mainElement: \"body\",\n      onRefresh() {\n        window.location.reload();\n      },\n      iconArrow: ReactDOMServer.renderToString(\n        <FontAwesomeIcon icon={faSyncAlt} />\n      ),\n      iconRefreshing: ReactDOMServer.renderToString(\n        <FontAwesomeIcon icon={faSyncAlt} spin={true} />\n      ),\n    });\n    return () => {\n      PullToRefresh.destroyAll();\n    };\n  }, []);\n  return (\n    <div className=\"App\">\n      <AppTitle />\n      <NavBar view={view} setView={setView} />\n      {view === \"global\" ? <GlobalView /> : <TaiwanView />}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./fonts/NotoSansMono-CondensedBold.ttf\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}