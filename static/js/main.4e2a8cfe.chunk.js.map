{"version":3,"sources":["OverviewPie/OverviewPie.module.css","CaseFatalityRatesByAgeBarChart/BarChart.module.css","utils/useCookies.js","TaiwanView/TaiwanNewCasesArea/AreaChart.module.css","TaiwanView/TaiwanVaccinationArea/AreaChart.module.css","TaiwanView/CasesByCountiesArea/AreaChart.module.css","CasesLineChart/LineChart.module.css","TaiwanView/VaccinationRateByCountiesBar/BarChart.module.css","TaiwanView/TaiwanOverviewPie/OverviewPie.module.css","TaiwanView/TaiwanTestsOverviewPie/OverviewPie.module.css","fonts/NotoSansMono-CondensedBold.ttf","elements/CommonUIs.js","TaiwanView/TaiwanOverviewPie/ColorLegend.jsx","TaiwanView/TaiwanOverviewPie/DataTable.jsx","TaiwanView/TaiwanOverviewPie/PieChart.jsx","TaiwanView/TaiwanOverviewPie/PieLabels.jsx","TaiwanView/TaiwanOverviewPie/PieTableLegendContainer.jsx","TaiwanView/TaiwanOverviewPie/Collapsible.jsx","TaiwanView/TaiwanOverviewPie/index.jsx","TaiwanView/TaiwanOverviewPie/useData.jsx","TaiwanView/TaiwanTestsOverviewPie/useData.jsx","TaiwanView/TaiwanTestsOverviewPie/Collapsible.jsx","TaiwanView/TaiwanTestsOverviewPie/ColorLegend.jsx","TaiwanView/TaiwanTestsOverviewPie/DataTable.jsx","TaiwanView/TaiwanTestsOverviewPie/PieChart.jsx","TaiwanView/TaiwanTestsOverviewPie/PieLabels.jsx","TaiwanView/TaiwanTestsOverviewPie/PieTableLegendContainer.jsx","TaiwanView/TaiwanTestsOverviewPie/index.jsx","TaiwanView/TaiwanTestsOverviewPie/useTests.jsx","TaiwanView/TaiwanNewCasesArea/useData.js","TaiwanView/TaiwanNewCasesArea/NavBar.jsx","TaiwanView/TaiwanNewCasesArea/ChartTitle.jsx","TaiwanView/TaiwanNewCasesArea/DataTable.jsx","TaiwanView/TaiwanNewCasesArea/AxisBottom.js","TaiwanView/TaiwanNewCasesArea/AxisLeft.js","TaiwanView/TaiwanNewCasesArea/XMarkerLine.js","TaiwanView/TaiwanNewCasesArea/CursorLine.js","TaiwanView/TaiwanNewCasesArea/VoronoiOverlay.js","TaiwanView/TaiwanNewCasesArea/AreaChart.jsx","TaiwanView/TaiwanNewCasesArea/Collapsible.jsx","TaiwanView/TaiwanNewCasesArea/index.js","TaiwanView/TaiwanVaccinationArea/ChartTitle.jsx","TaiwanView/TaiwanVaccinationArea/DataTable.jsx","TaiwanView/TaiwanVaccinationArea/AxisBottom.js","TaiwanView/TaiwanVaccinationArea/AxisLeft.js","TaiwanView/TaiwanVaccinationArea/CursorLine.js","TaiwanView/TaiwanVaccinationArea/YMarkerLine.js","TaiwanView/TaiwanVaccinationArea/VoronoiOverlay.js","TaiwanView/TaiwanVaccinationArea/AreaChart.jsx","TaiwanView/TaiwanVaccinationArea/Collapsible.jsx","TaiwanView/TaiwanVaccinationArea/index.js","TaiwanView/TaiwanVaccinationArea/useData.js","TaiwanView/VaccinationRateByCountiesBar/NavBar.js","TaiwanView/VaccinationRateByCountiesBar/AxisBottom.js","TaiwanView/VaccinationRateByCountiesBar/AxisLeft.js","TaiwanView/VaccinationRateByCountiesBar/Marks.js","TaiwanView/VaccinationRateByCountiesBar/ColorLegend.jsx","TaiwanView/VaccinationRateByCountiesBar/BarChart.jsx","TaiwanView/VaccinationRateByCountiesBar/Collapsible.jsx","TaiwanView/VaccinationRateByCountiesBar/index.js","TaiwanView/VaccinationRateByCountiesBar/useData.jsx","TaiwanView/CasesByCountiesArea/ChartTitle.jsx","TaiwanView/CasesByCountiesArea/DropdownMenu.jsx","TaiwanView/CasesByCountiesArea/AxisBottom.js","TaiwanView/CasesByCountiesArea/AxisLeft.js","TaiwanView/CasesByCountiesArea/CursorLine.js","TaiwanView/CasesByCountiesArea/XMarkerLine.js","TaiwanView/CasesByCountiesArea/LineOverlay.js","TaiwanView/CasesByCountiesArea/AreaChart.jsx","TaiwanView/CasesByCountiesArea/Collapsible.jsx","TaiwanView/CasesByCountiesArea/index.js","TaiwanView/CasesByCountiesArea/useData.js","TaiwanView/index.js","Charts.js","elements/AppTitle.js","elements/NavBar.js","OverviewPie/ColorLegend.jsx","OverviewPie/DataTable.jsx","OverviewPie/PieLabel.jsx","OverviewPie/PieChart.jsx","OverviewPie/Collapsible.jsx","OverviewPie/index.jsx","OverviewPie/useData.jsx","CasesLineChart/useData.js","CasesLineChart/ChartTitle.jsx","CasesLineChart/DataTable.jsx","CasesLineChart/AxisBottom.js","CasesLineChart/AxisLeft.js","CasesLineChart/XMarkerLine.js","CasesLineChart/VoronoiOverlay.js","CasesLineChart/LineChart.jsx","CasesLineChart/Collapsible.jsx","CasesLineChart/index.js","CaseFatalityRatesByAgeBarChart/AxisBottom.js","CaseFatalityRatesByAgeBarChart/AxisLeft.js","CaseFatalityRatesByAgeBarChart/Marks.js","CaseFatalityRatesByAgeBarChart/BarChart.jsx","CaseFatalityRatesByAgeBarChart/Collapsible.jsx","CaseFatalityRatesByAgeBarChart/index.js","CaseFatalityRatesByAgeBarChart/useData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","findCookie","key","document","cookie","split","find","row","startsWith","setCookie","value","newCookie","cookieExists","some","item","trim","LoadSpinner","className","Card","children","Footer","href","ColorLegend","colorScale","tickSpacing","tickSize","tickTextOffset","onHover","hoveredValue","fadeOpacity","domain","map","domainValue","index","styles","legend","transform","onMouseEnter","onMouseLeave","opacity","fill","r","dy","x","DataTable","items","reduce","acc","cur","toLocaleString","PieChart","pieData","pieArc","colorPie","colorValue","dataType","d","data","pieChart","onClick","PieLabels","dataValue","labelOffsetY","pieLabelPosition","centroid","endAngle","startAngle","dataPercentage","sum","toFixed","pieLabelStroke","textAnchor","dominantBaseline","pieLabel","width","window","innerWidth","height","pieRadius","pieOuterMargin","legendX","legendY","arc","innerRadius","outerRadius","case","color","PieTableLegendContainer","useState","setHoveredValue","useMemo","recovered","active","deaths","pie","sort","scaleOrdinal","range","viewBox","preserveAspectRatio","legendLabel","y","SourceCredit","Collapsible","id","type","htmlFor","title","ChartTitle","TaiwanOverviewPie","setData","useEffect","json","then","useData","Object","keys","forEach","replaceAll","convertStringToNumber","confirmed","excludedYesterday","confirmedYesterday","testsYesterday","tests","excluded","legendItemSpacing","testsData","tableData","TaiwanTestsOverviewPie","peopleTested","date","Date","useTests","parseDay","timeParse","api","isMounted","csv","rawData","newCases","Taiwan","NavBar","view","setView","buttons","name","view_name","nav","button","ViewButton","e","preventDefault","heading","AxisBottom","xScale","innerHeight","tickFormat","tickCount","tickOffset","ref","useRef","xAxisG","select","current","xAxis","axisBottom","ticks","tickPadding","call","selectAll","style","attr","tick","AxisLeft","yScale","yAxisG","yAxis","axisLeft","XMarkerLine","label","markerLineX","markerLineY2","markerLine","strokeDasharray","x1","y1","x2","y2","markerLineLabelStroke","writingMode","markerLineLabel","CursorLine","cursorLine","VoronoiOverlay","margin","areaGenerator","points","voronoi","Delaunay","from","right","point","i","onPointerEnter","event","onTouchMove","renderCell","top","bottom","left","xValue","xAxisTickFormat","timeFormat","xTooltipFormat","yValue","siFormat","format","yAxisTickFormat","tickValue","AreaChart","length","activeData","setActiveData","scaleTime","extent","nice","scaleLinear","max","handleVoronoiHover","useCallback","area","y0","Tooltip","fontWeight","marks","dataPoint","tooltipStroke","tooltip","sumValuesInObject","prev","TaiwanNewCasesArea","filteredData","filter","obj","valueOf","sevenDayAvg","slice","prevSevenDayAvg","Math","round","YMarkerLine","labelOffset","markerLineY","markerLineX2","total_vaccinations","replace","taiwanPopulation","scaleValue","position","primary","TaiwanVaccinationArea","autoType","bandwidth","Marks","xValue1","xValue2","tooltipFormat","stroke","strokeWidth","formatDate","county","BarChart","totalVaccinatedRate","totalVaccinated","vaccinesCountRate","vaccinesCount","handleHover","scaleBand","a","b","descending","paddingInner","xScake","VaccinationRateByCountiesBar","population","lastTotalVaccinated","newVaccinated","vaccinesLeftRate","latestData","array","dropdownItems","DropdownMenu","chosen","setChosen","handleTypeHover","handleCursorHover","setItems","onChange","currentTarget","LineOverlay","strokeLinecap","onTouchStart","stackedData","min","t","interpolateViridis","CasesByCountiesArea","layer","layerGroupedData","group","layers","Array","splice","transformedData","dataArray","groupedData","dailyCountiesData","get","縣市別","新增確診人數","區域","push","transformData","stack","offset","stackOffsetWiggle","order","stackOrderAscending","TaiwanView","CheckError","response","ok","Error","statusText","transposeKeyValue","entries","calDailyDifference","calPercentage","numerator","denominator","Number","useDataApi","initialUrl","initialData","transformFn","url","setUrl","isLoading","setIsLoading","isError","setIsError","fetch","console","error","fetchData","CountriesDropDownMenu","province","country","containerComponent","labels","datum","_y","labelComponent","constrainToVisibleArea","padding","fixLabelOverlap","dependentAxis","grid","LoadingSpinner","RadioButton","props","changed","checked","isSelected","SmallTable","DailyLineChartInAnArea","chart_type","lineData","setLineData","CHART_TYPES","newDeaths","deathRate","area_name","found","cases","timeline","new_cases","new_deaths","death_rate","getSTItems","AreasWithOutstandingCasesTable","sortBy","setSortBy","todayCases","todayDeaths","getToday","time","getFullYear","getMonth","getDate","AppTitle","PieLabel","percentage","OverviewPie","World","LineChart","curve","curveNatural","CasesLineChart","lastSevenDaysAvg","beforeSevenDaysAvg","countryScale","ageScale","fontSize","ageGroups","countryValue","Country","columns","schemeTableau10","CaseFatalityRatesByAgeBarChart","GlobalView","App","PullToRefresh","init","mainElement","onRefresh","location","reload","iconArrow","ReactDOMServer","renderToString","icon","faSyncAlt","iconRefreshing","spin","destroyAll","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4e2a8cfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pieChart\":\"OverviewPie_pieChart___bMnr\",\"pieLabel\":\"OverviewPie_pieLabel__3LAAf\",\"pieLabelStroke\":\"OverviewPie_pieLabelStroke__2jZQ6\",\"legendLabel\":\"OverviewPie_legendLabel__3jHkC\",\"legend\":\"OverviewPie_legend__3kb26\",\"hideshow\":\"OverviewPie_hideshow__1f2ru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisLabel\":\"BarChart_axisLabel__3i3d5\",\"marks\":\"BarChart_marks__3Qb-J\",\"tick\":\"BarChart_tick__1vAYC\",\"legendLabel\":\"BarChart_legendLabel__Y4Crq\",\"legend\":\"BarChart_legend__2XTVP\"};","const findCookie = key => {\n  return document.cookie\n    .split(\"; \")\n    .find(row => row.startsWith(`${key}=`))\n    .split(\"=\")[1];\n};\n\nconst setCookie = (key, value) => {\n  let newCookie = `${key}=${value}`;\n  newCookie += \";max-age=604800;SameSite=Lax\";\n  document.cookie = newCookie;\n};\n\nconst cookieExists = key => {\n  if (\n    document.cookie.split(\";\").some(item => item.trim().startsWith(`${key}=`))\n  ) {\n    return true;\n  }\n  return false;\n};\n\nmodule.exports = {\n  findCookie,\n  setCookie,\n  cookieExists\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisLabel\":\"AreaChart_axisLabel__5XHsT\",\"marks\":\"AreaChart_marks__2G7MT\",\"tick\":\"AreaChart_tick__3MRek\",\"markerLine\":\"AreaChart_markerLine__36MSZ\",\"markerLineLabel\":\"AreaChart_markerLineLabel__36Kxd\",\"markerLineLabelStroke\":\"AreaChart_markerLineLabelStroke__2LZ7n\",\"cursorLine\":\"AreaChart_cursorLine__RJ2aZ\",\"voronoi\":\"AreaChart_voronoi___Yq8f\",\"dataPoint\":\"AreaChart_dataPoint__3YTf0\",\"tooltip\":\"AreaChart_tooltip__3k8Kw\",\"tooltipStroke\":\"AreaChart_tooltipStroke__wO-u4\",\"nav\":\"AreaChart_nav__1qzG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisLabel\":\"AreaChart_axisLabel__2fPGs\",\"primary\":\"AreaChart_primary__1hZ-8\",\"secondary\":\"AreaChart_secondary__1Twap\",\"tick\":\"AreaChart_tick__3FpEN\",\"markerLine\":\"AreaChart_markerLine__xijer\",\"markerLineLabel\":\"AreaChart_markerLineLabel__3_cqB\",\"markerLineLabelStroke\":\"AreaChart_markerLineLabelStroke__KZmM1\",\"cursorLine\":\"AreaChart_cursorLine__2v8r_\",\"voronoi\":\"AreaChart_voronoi__e9YRR\",\"dataPoint\":\"AreaChart_dataPoint__3WLiC\",\"tooltip\":\"AreaChart_tooltip__hteRd\",\"tooltipStroke\":\"AreaChart_tooltipStroke__zx4Qc\",\"legend\":\"AreaChart_legend__zjzU7\",\"legendStroke\":\"AreaChart_legendStroke__1X5we\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisLabel\":\"AreaChart_axisLabel__1IBFP\",\"areaLabel\":\"AreaChart_areaLabel__xitdM\",\"primary\":\"AreaChart_primary__S1qiG\",\"secondary\":\"AreaChart_secondary__-g2kW\",\"tick\":\"AreaChart_tick__1WyOy\",\"markerLine\":\"AreaChart_markerLine__X_jjp\",\"markerLineLabel\":\"AreaChart_markerLineLabel__3EMdD\",\"markerLineLabelStroke\":\"AreaChart_markerLineLabelStroke__1OP6q\",\"cursorLine\":\"AreaChart_cursorLine__H6QT-\",\"voronoi\":\"AreaChart_voronoi__6QLOv\",\"dataPoint\":\"AreaChart_dataPoint__JA3KJ\",\"tooltip\":\"AreaChart_tooltip__2qVCW\",\"tooltipStroke\":\"AreaChart_tooltipStroke__1ZPoE\",\"legend\":\"AreaChart_legend__1vI5n\",\"legendStroke\":\"AreaChart_legendStroke__1VAM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisLabel\":\"LineChart_axisLabel__2_tFA\",\"marks\":\"LineChart_marks__26M2D\",\"tick\":\"LineChart_tick__3yb08\",\"markerLine\":\"LineChart_markerLine__22F4j\",\"voronoi\":\"LineChart_voronoi__2Oz49\",\"dataPoint\":\"LineChart_dataPoint__g039n\",\"tooltip\":\"LineChart_tooltip__11-D6\",\"tooltipStroke\":\"LineChart_tooltipStroke__3IHSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisLabel\":\"BarChart_axisLabel__1fH3s\",\"marks\":\"BarChart_marks__4Wo_n\",\"tick\":\"BarChart_tick__26_in\",\"legendLabel\":\"BarChart_legendLabel__e5M_A\",\"legend\":\"BarChart_legend__6wMj4\",\"nav\":\"BarChart_nav__1ENAf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pieChart\":\"OverviewPie_pieChart__2EFDR\",\"pieLabel\":\"OverviewPie_pieLabel__uPT91\",\"pieLabelStroke\":\"OverviewPie_pieLabelStroke__1SyMy\",\"legendLabel\":\"OverviewPie_legendLabel__l9Ve0\",\"legend\":\"OverviewPie_legend__2UIkD\",\"hideshow\":\"OverviewPie_hideshow__3BMBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pieChart\":\"OverviewPie_pieChart__15fCk\",\"pieLabel\":\"OverviewPie_pieLabel__dryXg\",\"pieLabelStroke\":\"OverviewPie_pieLabelStroke__uz8Cz\",\"legendLabel\":\"OverviewPie_legendLabel__2ffI6\",\"legend\":\"OverviewPie_legend__Svigk\",\"hideshow\":\"OverviewPie_hideshow__8JcRd\"};","export default __webpack_public_path__ + \"static/media/NotoSansMono-CondensedBold.e667a45f.ttf\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const LoadSpinner = () => {\n  return (\n    <div className=\"lds-spinner\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport const Card = ({ children, className }) => (\n  <li className={`flex-card-listitem${className ? \" \" + className : \"\"}`}>\n    <div className=\"flex-card\">{children}</div>\n  </li>\n);\n\nCard.propTypes = {\n  children: PropTypes.node,\n};\n\nexport const Footer = () => (\n  <div className=\"footer\">\n    <p>\n      © 2020 <a href=\"https://eternallogger.com\">George Huang</a>. All rights\n      reserved.\n    </p>\n  </div>\n);\n","import React from \"react\";\nimport styles from \"./OverviewPie.module.css\";\nexport const ColorLegend = ({\n  colorScale,\n  tickSpacing = 20,\n  tickSize = 10,\n  tickTextOffset = 20,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  colorScale.domain().map((domainValue, index) => (\n    <g\n      key={colorScale(domainValue)}\n      className={styles.legend}\n      transform={`translate(0, ${index * tickSpacing})`}\n      onMouseEnter={() => onHover(domainValue)}\n      onMouseLeave={() => onHover(null)}\n      opacity={hoveredValue && domainValue !== hoveredValue ? fadeOpacity : 1}\n    >\n      <circle fill={colorScale(domainValue)} r={tickSize}></circle>\n      <text dy=\".32em\" x={tickTextOffset}>\n        {domainValue}\n      </text>\n    </g>\n  ));\n","import React from \"react\";\n\nexport const DataTable = ({ items }) => (\n  <div className=\"small-table\">\n    <table>\n      <thead>\n        <tr>\n          <th>總確診數</th>\n          {/* {items.map((item) => ( */}\n          {/*   <th key={dataType(item)}>{dataType(item)}</th> */}\n          {/* ))} */}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td className=\"numerical-data\">\n            {items.reduce((acc, cur) => acc + cur.value, 0).toLocaleString()}\n          </td>\n          {/* {items.map((item, index) => ( */}\n          {/*   <td className=\"numerical-data\" key={index}> */}\n          {/*     {dataValue(item).toLocaleString()} */}\n          {/*   </td> */}\n          {/* ))} */}\n        </tr>\n      </tbody>\n    </table>\n  </div>\n);\n","import React from \"react\";\nimport styles from \"./OverviewPie.module.css\";\nexport const PieChart = ({\n  pieData,\n  pieArc,\n  colorPie,\n  colorValue,\n  dataType,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  colorPie(pieData).map((d) => {\n    const domainValue = dataType(d.data);\n    return (\n      <g\n        className={styles.pieChart}\n        opacity={hoveredValue && domainValue !== hoveredValue ? fadeOpacity : 1}\n        onMouseEnter={() => onHover(domainValue)}\n        onClick={() => onHover(domainValue)}\n        onMouseLeave={() => onHover(null)}\n        key={dataType(d.data)}\n      >\n        <path fill={colorValue(d.data)} d={pieArc(d)} />\n      </g>\n    );\n  });\n","import React from \"react\";\nimport { sum } from \"d3\";\nimport styles from \"./OverviewPie.module.css\";\nexport const PieLabels = ({\n  pieData,\n  pieArc,\n  colorPie,\n  dataType,\n  dataValue,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n  labelOffsetY = 18,\n}) =>\n  colorPie(pieData).map((d) => {\n    const domainValue = dataType(d.data);\n    let pieLabelPosition = pieArc.centroid(d);\n    if (d.endAngle - d.startAngle < 0.25) {\n      pieLabelPosition[0] *= 2.3;\n      pieLabelPosition[1] *= 2.3;\n    }\n    const dataPercentage = (\n      (dataValue(d.data) / sum(pieData, (d) => d.value)) *\n      100\n    ).toFixed(1);\n    return (\n      <g\n        className={styles.pieChart}\n        opacity={hoveredValue && domainValue !== hoveredValue ? fadeOpacity : 1}\n        onMouseEnter={() => onHover(domainValue)}\n        onClick={() => onHover(domainValue)}\n        onMouseLeave={() => onHover(null)}\n        key={dataType(d.data)}\n      >\n        <text\n          className={styles.pieLabelStroke}\n          transform={`translate(${pieLabelPosition})`}\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          <tspan className=\"num\" x=\"0\" dy={-labelOffsetY / 2} fill=\"black\">\n            {dataPercentage}%\n          </tspan>\n          <tspan x=\"0\" dy={labelOffsetY} fill=\"#635F5D\">\n            {dataValue(d.data).toLocaleString()}\n          </tspan>\n        </text>\n        <text\n          className={styles.pieLabel}\n          transform={`translate(${pieLabelPosition})`}\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          <tspan className=\"num\" x=\"0\" dy={-labelOffsetY / 2} fill=\"black\">\n            {dataPercentage}%\n          </tspan>\n          <tspan x=\"0\" dy={labelOffsetY} fill=\"#635F5D\">\n            {dataValue(d.data).toLocaleString()}\n          </tspan>\n        </text>\n      </g>\n    );\n  });\n","import React, { useState, useMemo } from \"react\";\nimport { arc, pie, scaleOrdinal } from \"d3\";\nimport styles from \"./OverviewPie.module.css\";\nimport { ColorLegend } from \"./ColorLegend\";\nimport { DataTable } from \"./DataTable\";\nimport { PieChart } from \"./PieChart\";\nimport { PieLabels } from \"./PieLabels\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.6 : width * 0.7;\n\nconst pieRadius = (width * 0.66) / 2;\nconst pieOuterMargin = pieRadius * 0.7;\n\nconst legendX = width * 0.66;\nconst legendY = height / 2;\nconst legendCircleRadius = 8;\nconst legendItemSpacing = 26;\n\nconst fadeOpacity = 0.3;\n\nconst pieArc = arc().innerRadius(0).outerRadius(pieOuterMargin);\n\nconst dataType = (d) => d.case;\nconst dataValue = (d) => d.value;\nconst colorValue = (d) => d.color;\n\nconst ColorLegendLabel = \"案例別\";\n\nexport const PieTableLegendContainer = ({ data }) => {\n  const [hoveredValue, setHoveredValue] = useState(null);\n\n  const pieData = useMemo(\n    () => [\n      {\n        case: \"解除隔離\",\n        value: data.recovered,\n        color: \"#6BBBA1\",\n      },\n      // {\n      //   case: \"病中\",\n      //   value: data.confirmed - data.recovered - data.deaths,\n      //   color: \"#E25A42\",\n      // },\n      {\n        case: \"病中\",\n        value: data.active,\n        color: \"#E25A42\",\n      },\n      {\n        case: \"死亡\",\n        value: data.deaths,\n        color: \"#BD2D28\",\n      },\n    ],\n    [data]\n  );\n\n  const colorPie = useMemo(() => pie().sort(null).value(dataValue), []);\n\n  const colorScale = useMemo(\n    () =>\n      scaleOrdinal()\n        .domain(pieData.map(dataType))\n        .range(pieData.map(colorValue)),\n    [pieData]\n  );\n\n  return (\n    <>\n      <DataTable items={pieData} dataType={dataType} dataValue={dataValue} />\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        <g transform={`translate(${pieRadius},${height / 2})`}>\n          <PieChart\n            pieData={pieData}\n            colorPie={colorPie}\n            colorValue={colorValue}\n            pieArc={pieArc}\n            dataType={dataType}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n          <PieLabels\n            pieData={pieData}\n            colorPie={colorPie}\n            pieArc={pieArc}\n            dataType={dataType}\n            dataValue={dataValue}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n        <g transform={`translate(${legendX}, ${legendY})`}>\n          <text className={styles.legendLabel} x={-7} y={-legendItemSpacing}>\n            {ColorLegendLabel}\n          </text>\n          <ColorLegend\n            colorScale={colorScale}\n            tickSpacing={legendItemSpacing}\n            tickSize={legendCircleRadius}\n            tickTextOffset={16}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\nconst SourceCredit = () => (\n  <p className=\"footnote\">\n    資料來源：衛生福利部疾病管制署（API by{\" \"}\n    <a href=\"https://disease.sh\">disease.sh</a>. Data collected by{\" \"}\n    <a href=\"https://www.worldometers.info/coronavirus/#countries\">\n      Worldometer\n    </a>\n    .）\n  </p>\n);\nexport const Collapsible = ({ id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        這張圖表可以怎麼看？\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">\n          <p>\n            這張圖表的用意是呈現此時此刻COVID-19在台灣的疫情概況。左上角的「總確診數」代表篩檢陽性案例的總計，不過，由於並非所有人都經過篩檢，這個數目並不足以代表社會中真正染疫的人數，頂多代表目前已知的確診人數而已。\n          </p>\n          <p>\n            正如圓餅圖所示，總確診數可以細分為三類：病中、死亡、解除隔離。此處列出解除隔離的比例，用意在顯示台灣距離疫病的終點還有多遠。但要知道，這組「恢復鐘」在疫情迅速增溫的時候是有可能倒轉的。病中案例代表目前還未康復、正在與疾病奮鬥中的人們。根據《紐約時報》\n            <a href=\"https://www.nytimes.com/interactive/2020/world/asia/china-coronavirus-contain.html\">\n              一篇疫情爆發初期的報導\n            </a>\n            ，大多數染疫者最終都會康復，確診者的死亡比例可能會小於百分之三。\n          </p>\n          <SourceCredit />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"./useData\";\nimport { LoadSpinner } from \"../../elements/CommonUIs\";\nimport { PieTableLegendContainer } from \"./PieTableLegendContainer\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst title = \"COVID-19 台灣染疫現況\";\n\nconst ChartTitle = ({ title }) => <div className=\"chart-title\">{title}</div>;\n\nexport const TaiwanOverviewPie = () => {\n  const data = useData();\n  if (!data) return <LoadSpinner />;\n  // console.log(data);\n  return (\n    <>\n      <ChartTitle title={title} />\n      <PieTableLegendContainer data={data} />\n      <Collapsible id={title} />\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\n\n// 20210617 疾管署 no longer provides recovered data on its Google Site.\n// const jsonUrl = \"https://covid19dashboard.cdc.gov.tw/dash3\";\nconst jsonUrl = \"https://disease.sh/v3/covid-19/countries/Taiwan?strict=true\";\n\n// const convertStringToNumber = (d) => {\n//   Object.keys(d).forEach((key) => {\n//     if (typeof d[key] !== \"number\") {\n//       d[key] = d[key].replace(\",\", \"\");\n//       d[key] = +d[key];\n//     }\n//   });\n//   return d;\n// };\n\n// Use JSON data\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n\n  useEffect(() => {\n    json(jsonUrl).then(setData);\n    // json(jsonUrl).then((d) => {\n    //   d = convertStringToNumber(d[0]);\n    //   d.confirmed = +d[\"確診\"];\n    //   d.recovered = +d[\"解除隔離\"];\n    //   d.deaths = +d[\"死亡\"];\n    //   d.excludedYesterday = +d[\"昨日排除\"];\n    //   d.confirmedYesterday = +d[\"昨日確診\"];\n    //   d.testsYesterday = +d[\"昨日送驗\"];\n    //   d.tests = +d[\"送驗\"];\n    //   d.excluded = +d[\"排除\"];\n    //   setData(d);\n    // });\n  }, []);\n  return data;\n};\n","import { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\n\nconst jsonUrl = \"https://covid19dashboard.cdc.gov.tw/dash3\";\n\nconst convertStringToNumber = (d) => {\n  Object.keys(d).forEach((key) => {\n    if (typeof d[key] !== \"number\") {\n      d[key] = d[key].replaceAll(\",\", \"\");\n      d[key] = +d[key];\n    }\n  });\n  return d;\n};\n\n// Use JSON data\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n\n  useEffect(() => {\n    json(jsonUrl).then((d) => {\n      d = convertStringToNumber(d[0]);\n      d.confirmed = +d[\"確診\"];\n      d.recovered = +d[\"解除隔離\"];\n      d.deaths = +d[\"死亡\"];\n      d.excludedYesterday = +d[\"昨日排除\"];\n      d.confirmedYesterday = +d[\"昨日確診\"];\n      d.testsYesterday = +d[\"昨日送驗\"];\n      d.tests = +d[\"送驗\"];\n      d.excluded = +d[\"排除\"];\n      setData(d);\n    });\n  }, []);\n  return data;\n};\n","import React from \"react\";\nconst SourceCredit = () => (\n  <p className=\"footnote\">\n    資料來源：\n    <a href=\"https://sites.google.com/cdc.gov.tw/2019ncov/taiwan\">\n      衛生福利部疾病管制署\n    </a>\n  </p>\n);\nexport const Collapsible = ({ id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        這張圖表可以怎麼看？\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">\n          <p>這張圓餅圖用來顯示此時此刻COVID-19在台灣的篩檢工作現況。</p>\n          <p>\n            整塊大餅表示台灣從有疫情以來累計的檢驗件數；要注意件數不代表人數，因為一個人可能檢驗不只一次，所以這個數字會比累計檢驗人數要多。整個大餅又分成兩大塊：\n          </p>\n          <ul>\n            <li>灰色的：已檢驗，未通報。</li>\n            <li>彩色的：已通報案例。</li>\n          </ul>\n          <p>\n            並非所有的檢驗案例都須通報，由\n            <a href=\"https://www.cdc.gov.tw/Category/MPage/np0wef4IjYh9hvbiW2BnoQ#collapseOne84473\">\n              疾管署的規定\n            </a>\n            看來，驗心安的案例就不會通報上傳。然而，這個灰色區塊卻也是盲點所在。台灣由於上傳通報系統存在「塞車」的問題，代表有些已經檢驗且符合通報標準的案例並沒有即時通報。這些案例以及未來可能的「校正回歸」都包納在灰色的「已檢驗，未通報」區塊中。大餅的彩色部分則是已通報的件數，這又可以區分為三塊：\n          </p>\n          <ul>\n            <li>通報確診。</li>\n            <li>通報排除。</li>\n            <li>通報待確認。</li>\n          </ul>\n          <p>\n            獲通報的案例正常來說只有兩個可能，不是確診就是排除，因此不應該存在第三類。然而在通報之後、確認檢驗結果之前，還是存在時間差。據\n            <a href=\"https://health.udn.com/health/story/120950/5479893\">\n              《聯合報元氣網》的報導\n            </a>\n            ，此處的落差大多來自於各種缺件，也包括正在檢驗中，或是預先通報卻尚未採檢的情形。\n          </p>\n          <SourceCredit />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./OverviewPie.module.css\";\nexport const ColorLegend = ({\n  colorScale,\n  tickSpacing = 20,\n  tickSize = 10,\n  tickTextOffset = 20,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  colorScale.domain().map((domainValue, index) => (\n    <g\n      key={colorScale(domainValue)}\n      className={styles.legend}\n      transform={`translate(0, ${index * tickSpacing})`}\n      onMouseEnter={() => onHover(domainValue)}\n      onMouseLeave={() => onHover(null)}\n      opacity={hoveredValue && domainValue !== hoveredValue ? fadeOpacity : 1}\n    >\n      <circle fill={colorScale(domainValue)} r={tickSize}></circle>\n      <text dy=\".32em\" x={tickTextOffset}>\n        {domainValue}\n      </text>\n    </g>\n  ));\n","import React from \"react\";\n\nexport const DataTable = ({ items, dataType, dataValue }) => {\n  return (\n    <div className=\"small-table\">\n      <table>\n        <thead>\n          <tr>\n            {items.map((item) => (\n              <th key={dataType(item)}>{dataType(item)}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {items.map((item, index) => (\n              <td className=\"numerical-data\" key={index}>\n                {dataValue(item).toLocaleString()}\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./OverviewPie.module.css\";\nexport const PieChart = ({\n  pieData,\n  pieArc,\n  colorPie,\n  colorValue,\n  dataType,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  colorPie(pieData).map((d) => {\n    const domainValue = dataType(d.data);\n    return (\n      <g\n        className={styles.pieChart}\n        opacity={hoveredValue && domainValue !== hoveredValue ? fadeOpacity : 1}\n        onMouseEnter={() => onHover(domainValue)}\n        onClick={() => onHover(domainValue)}\n        onMouseLeave={() => onHover(null)}\n        key={dataType(d.data)}\n      >\n        <path fill={colorValue(d.data)} d={pieArc(d)} />\n      </g>\n    );\n  });\n","import React from \"react\";\nimport { sum } from \"d3\";\nimport styles from \"./OverviewPie.module.css\";\nexport const PieLabels = ({\n  pieData,\n  pieArc,\n  colorPie,\n  dataType,\n  dataValue,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n  labelOffsetY = 18,\n}) =>\n  colorPie(pieData).map((d) => {\n    const domainValue = dataType(d.data);\n    let pieLabelPosition = pieArc.centroid(d);\n    if (d.endAngle - d.startAngle < 0.25) {\n      pieLabelPosition[0] *= 2.4;\n      pieLabelPosition[1] *= 2.4;\n    }\n    const dataPercentage = (\n      (dataValue(d.data) / sum(pieData, (d) => d.value)) *\n      100\n    ).toFixed(1);\n    return (\n      <g\n        className={styles.pieChart}\n        opacity={hoveredValue && domainValue !== hoveredValue ? fadeOpacity : 1}\n        onMouseEnter={() => onHover(domainValue)}\n        onClick={() => onHover(domainValue)}\n        onMouseLeave={() => onHover(null)}\n        key={dataType(d.data)}\n      >\n        <text\n          className={styles.pieLabelStroke}\n          transform={`translate(${pieLabelPosition})`}\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          <tspan className=\"num\" x=\"0\" dy={-labelOffsetY / 2} fill=\"black\">\n            {dataPercentage}%\n          </tspan>\n          <tspan x=\"0\" dy={labelOffsetY} fill=\"#635F5D\">\n            {dataValue(d.data).toLocaleString()}\n          </tspan>\n        </text>\n        <text\n          className={styles.pieLabel}\n          transform={`translate(${pieLabelPosition})`}\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          <tspan className=\"num\" x=\"0\" dy={-labelOffsetY / 2} fill=\"black\">\n            {dataPercentage}%\n          </tspan>\n          <tspan x=\"0\" dy={labelOffsetY} fill=\"#635F5D\">\n            {dataValue(d.data).toLocaleString()}\n          </tspan>\n        </text>\n      </g>\n    );\n  });\n","import React, { useState, useMemo } from \"react\";\nimport { arc, pie, scaleOrdinal } from \"d3\";\nimport styles from \"./OverviewPie.module.css\";\nimport { ColorLegend } from \"./ColorLegend\";\nimport { DataTable } from \"./DataTable\";\nimport { PieChart } from \"./PieChart\";\nimport { PieLabels } from \"./PieLabels\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.7 : width * 0.8;\n\nconst pieRadius = (width * 0.66) / 2;\nconst pieOuterMargin = pieRadius * 0.7;\n\nconst legendCircleRadius = 8;\nconst legendItemSpacing = 26;\nconst legendX = width * 0.66;\nconst legendY = pieRadius - legendItemSpacing / 2;\n\nconst fadeOpacity = 0.3;\n\nconst pieArc = arc().innerRadius(0).outerRadius(pieOuterMargin);\n\nconst dataType = (d) => d.case;\nconst dataValue = (d) => d.value;\nconst colorValue = (d) => d.color;\n\nconst ColorLegendLabel = \"篩檢現況\";\n\nexport const PieTableLegendContainer = ({ data, testsData }) => {\n  const [hoveredValue, setHoveredValue] = useState(null);\n\n  const tableData = [\n    {\n      case: \"累計檢驗件數\",\n      value: testsData.tests,\n    },\n    {\n      case: \"累計通報件數\",\n      value: data.tests,\n    },\n    {\n      case: \"昨日通報件數\",\n      value: data.testsYesterday,\n    },\n  ];\n\n  const pieData = useMemo(\n    () => [\n      {\n        case: \"檢驗未通報\",\n        value: testsData.tests - data.tests,\n        color: \"#E5E2E0\",\n      },\n      {\n        case: \"通報確診\",\n        value: data.confirmed,\n        color: \"#005D6E\",\n      },\n      {\n        case: \"通報排除\",\n        value: data.excluded,\n        color: \"#42A5B3\",\n      },\n      {\n        case: \"通報待確認\",\n        value: data.tests - data.excluded - data.confirmed,\n        color: \"#BD2D28\",\n      },\n    ],\n    [data, testsData]\n  );\n\n  const colorPie = useMemo(() => pie().sort(null).value(dataValue), []);\n\n  const colorScale = useMemo(\n    () =>\n      scaleOrdinal()\n        .domain(pieData.map(dataType))\n        .range(pieData.map(colorValue)),\n    [pieData]\n  );\n\n  return (\n    <>\n      <DataTable items={tableData} dataType={dataType} dataValue={dataValue} />\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        <g transform={`translate(${pieRadius},${height / 2})`}>\n          <PieChart\n            pieData={pieData}\n            colorPie={colorPie}\n            colorValue={colorValue}\n            pieArc={pieArc}\n            dataType={dataType}\n            dataValue={dataValue}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n          <PieLabels\n            pieData={pieData}\n            colorPie={colorPie}\n            colorValue={colorValue}\n            pieArc={pieArc}\n            dataType={dataType}\n            dataValue={dataValue}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n        <g transform={`translate(${legendX}, ${legendY})`}>\n          <text className={styles.legendLabel} x={-7} y={-legendItemSpacing}>\n            {ColorLegendLabel}\n          </text>\n          <ColorLegend\n            colorScale={colorScale}\n            tickSpacing={legendItemSpacing}\n            tickSize={legendCircleRadius}\n            tickTextOffset={16}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"./useData\";\nimport { useTests } from \"./useTests\";\nimport { LoadSpinner } from \"../../elements/CommonUIs\";\nimport { Collapsible } from \"./Collapsible\";\nimport { PieTableLegendContainer } from \"./PieTableLegendContainer.jsx\";\n\nconst title = \"COVID-19 台灣篩檢現況\";\nconst ChartTitle = ({ title }) => <div className=\"chart-title\">{title}</div>;\n\nexport const TaiwanTestsOverviewPie = () => {\n  const data = useData();\n  const testsData = useTests();\n  if (!data || !testsData) return <LoadSpinner />;\n  // console.log(data);\n  // console.log(testsData);\n  return (\n    <>\n      <ChartTitle title={title} />\n      <PieTableLegendContainer data={data} testsData={testsData} />\n      <Collapsible id={title} />\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\n\nconst jsonUrl = \"https://covid19dashboard.cdc.gov.tw/dash7\";\n\n// Use JSON data\nexport const useTests = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n\n  useEffect(() => {\n    json(jsonUrl).then((d) => {\n      d = d[0];\n      d.peopleTested = +d[\"檢驗人數\"].replaceAll(\",\", \"\");\n      d.tests = +d[\"檢驗件數\"].replaceAll(\",\", \"\");\n      d.date = new Date(d[\"資料更新時間\"]);\n      setData(d);\n    });\n  }, []);\n  return data;\n};\n","import { useState, useEffect } from \"react\";\nimport { csv, timeParse } from \"d3\";\n\nconst parseDay = timeParse(\"%Y-%m-%d\");\n\nconst transform = (rawData) => {\n  return rawData.map((d) => ({\n    date: parseDay(d.date),\n    newCases: +d.Taiwan,\n  }));\n};\n\n// Data: Covid daily new_cases\nexport const useData = (api) => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n  useEffect(() => {\n    let isMounted = true;\n    csv(api).then((rawData) => {\n      if (isMounted) setData(transform(rawData));\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [api]);\n  return data;\n};\n","import React from \"react\";\nimport styles from \"./AreaChart.module.css\";\n// import PropTypes from \"prop-types\";\n// import { setCookie } from \"../utils/useCookies\";\n\nexport const NavBar = ({ view, setView }) => {\n  // A series of buttons to switch between views of charts.\n  const buttons = [\n    {\n      name: \"確診案例\",\n      view_name: \"confirmed\",\n      className: view === \"confirmed\" ? \"active view-button\" : \"view-button\",\n    },\n    {\n      name: \"死亡人數\",\n      view_name: \"deaths\",\n      className: view === \"deaths\" ? \"active view-button\" : \"view-button\",\n    },\n  ];\n\n  return (\n    <div className={styles.nav}>\n      {buttons.map((button) => (\n        <ViewButton setView={setView} {...button} key={button.view_name} />\n      ))}\n    </div>\n  );\n};\n\nconst ViewButton = ({ name, view_name, className, setView }) => {\n  // A series of buttons to switch between views of charts.\n  const handleClick = (e) => {\n    e.preventDefault();\n    // setCookie(\"view\", view_name);\n    setView(view_name);\n  };\n  // Changes the button label according to current view.\n  return (\n    <button onClick={handleClick} type=\"button\" className={className}>\n      {name}\n    </button>\n  );\n};\n","import React from \"react\";\n\nexport const ChartTitle = ({ title }) => (\n  <div className=\"chart-title\">{title}</div>\n);\n","import React from \"react\";\n\nexport const DataTable = ({ items }) => {\n  return (\n    <div className=\"small-table\">\n      <table>\n        <thead>\n          <tr>\n            {items.map((item, index) => (\n              <th key={index}>{item.heading}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {items.map((item, index) => (\n              <td className=\"numerical-data\" key={index}>\n                {item.value}\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom } from \"d3\";\nimport styles from \"./AreaChart.module.css\";\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickCount = 6,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  useEffect(() => {\n    const xAxisG = select(ref.current);\n    const xAxis = axisBottom(xScale)\n      .ticks(tickCount, tickFormat)\n      .tickSize(-innerHeight)\n      .tickPadding(tickOffset);\n    xAxisG\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-55)\");\n  }, [xScale, innerHeight, tickFormat, tickOffset, tickCount]);\n  return (\n    <g\n      ref={ref}\n      className={styles.tick}\n      transform={`translate(0, ${innerHeight})`}\n    />\n  );\n};\n\n// export const AxisBottom = ({\n//   xScale,\n//   innerHeight,\n//   tickFormat,\n//   tickOffset = 3\n// }) =>\n//   // Label and reference lines for x scale\n//   xScale.ticks().map(tickValue => (\n//     // Each tick goes to the position indicating its value\n//     <g\n//       className={styles.tick}\n//       key={tickValue}\n//       transform={`translate(${xScale(tickValue)}, 0)`}\n//     >\n//       {/* the values of x1, x2, y1 are 0, which is default */}\n//       <line y2={innerHeight} />\n//       <text\n//         y={innerHeight + tickOffset}\n//         dy=\"0.71em\"\n//         style={{ textAnchor: \"middle\" }}\n//       >\n//         {tickFormat(tickValue)}\n//       </text>\n//     </g>\n//   ));\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisLeft } from \"d3\";\nimport styles from \"./AreaChart.module.css\";\n\nexport const AxisLeft = ({\n  yScale,\n  innerWidth,\n  tickFormat,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  useEffect(() => {\n    const yAxisG = select(ref.current);\n    const yAxis = axisLeft(yScale)\n      .tickSize(innerWidth)\n      .tickPadding(tickOffset)\n      .tickFormat(tickFormat);\n    yAxisG.call(yAxis);\n  }, [yScale, innerWidth, tickFormat, tickOffset]);\n  return (\n    <g\n      ref={ref}\n      className={styles.tick}\n      transform={`translate(${innerWidth}, 0)`}\n    />\n  );\n};\n","import React from \"react\";\nimport styles from \"./AreaChart.module.css\";\nexport const XMarkerLine = ({ value, xScale, height, label }) => {\n  const markerLineX = xScale(value);\n  const markerLineY1 = 0;\n  const markerLineY2 = height;\n  return (\n    <>\n      <line\n        className={styles.markerLine}\n        strokeDasharray=\"10,10\"\n        x1={markerLineX}\n        y1={markerLineY1}\n        x2={markerLineX}\n        y2={markerLineY2}\n      />\n      <text\n        className={styles.markerLineLabelStroke}\n        textAnchor={\"start\"}\n        x={markerLineX - 15}\n        y={5}\n        writingMode=\"vertical-rl\"\n      >\n        {label}\n      </text>\n      <text\n        className={styles.markerLineLabel}\n        textAnchor={\"start\"}\n        x={markerLineX - 15}\n        y={5}\n        writingMode=\"vertical-rl\"\n      >\n        {label}\n      </text>\n    </>\n  );\n};\n","import React from \"react\";\nimport styles from \"./AreaChart.module.css\";\nexport const CursorLine = ({ value, xScale, height }) => {\n  const markerLineX = xScale(value);\n  const markerLineY1 = 0;\n  const markerLineY2 = height;\n  return (\n    <line\n      className={styles.cursorLine}\n      x1={markerLineX}\n      y1={markerLineY1}\n      x2={markerLineX}\n      y2={markerLineY2}\n    />\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { Delaunay } from \"d3-delaunay\";\nimport styles from \"./AreaChart.module.css\";\nexport const VoronoiOverlay = ({\n  margin,\n  data,\n  areaGenerator,\n  onHover,\n  innerWidth,\n  innerHeight,\n}) => {\n  // console.log(data);\n  return useMemo(() => {\n    const points = data.map((d) => [\n      areaGenerator.x()(d),\n      areaGenerator.y()(d),\n    ]);\n    const delaunay = Delaunay.from(points);\n    const voronoi = delaunay.voronoi([\n      0,\n      0,\n      innerWidth + margin.right,\n      innerHeight,\n    ]);\n    return (\n      <g className={styles.voronoi}>\n        {points.map((point, i) => (\n          <path\n            key={i}\n            onPointerEnter={(event) => {\n              event.preventDefault();\n              onHover(data[i]);\n            }}\n            onTouchMove={() => onHover(data[i])}\n            d={voronoi.renderCell(i)}\n          />\n        ))}\n      </g>\n    );\n  }, [data, areaGenerator, innerHeight, innerWidth, onHover, margin.right]);\n};\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport {\n  scaleLinear,\n  scaleTime,\n  area,\n  timeFormat,\n  extent,\n  max,\n  format,\n} from \"d3\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { XMarkerLine } from \"./XMarkerLine\";\nimport { CursorLine } from \"./CursorLine.js\";\nimport { VoronoiOverlay } from \"./VoronoiOverlay\";\nimport styles from \"./AreaChart.module.css\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.6 : width * 1;\nconst margin = { top: 30, right: 10, bottom: 70, left: 40 };\n\nconst xValue = (d) => d.date;\nconst xAxisTickFormat = timeFormat(\"%-m/%-d, %Y\");\nconst xTooltipFormat = timeFormat(\"%-m/%-d\");\n\nconst yValue = (d) => d.newCases;\n// const yAxisLabel = \"New cases\";\n// const yAxisLabelOffset = 60;\nconst siFormat = format(\"~s\");\nconst yAxisTickFormat = (tickValue) => siFormat(tickValue);\n\nexport const AreaChart = ({ data }) => {\n  // Change state when different point is hovered\n  const [activeData, setActiveData] = useState(data[data.length - 1]);\n\n  // The chart's real height and width\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  // X axis is population, thus use linear scale\n  const xScale = useMemo(\n    () =>\n      scaleTime()\n        // Domain is an array of actual dates\n        // d3.extent(iterable[, accessor]) returns the [max, min] of iterable\n        .domain(extent(data, xValue))\n        // Range is where the data is shown in pixels, starts from 0 to chart's width\n        .range([0, innerWidth])\n        .nice(),\n    [data, innerWidth]\n  );\n\n  // Y is countries is categorical, band scale is for ordinal or categorical dimension\n  const yScale = useMemo(\n    () =>\n      scaleLinear()\n        .domain([0, max(data, yValue)])\n        .range([innerHeight, 0])\n        .nice(),\n    [data, innerHeight]\n  );\n\n  const handleVoronoiHover = useCallback(setActiveData, [setActiveData]);\n\n  const areaGenerator = useMemo(\n    () =>\n      area()\n        .x((d) => xScale(xValue(d)))\n        .y1((d) => yScale(yValue(d)))\n        .y0(yScale(0)),\n    [xScale, yScale]\n  );\n\n  const Tooltip = ({ activeData, className }) => (\n    <text className={className} textAnchor={\"end\"} x={0} y={-35}>\n      <tspan x=\"-10\" dy=\"0\" fontWeight=\"bold\">\n        {activeData.newCases.toLocaleString()}例\n      </tspan>\n      <tspan x=\"-10\" dy=\"1.5em\">\n        {xTooltipFormat(activeData.date)}\n      </tspan>\n    </text>\n  );\n  return (\n    <>\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        {/* Adds margin to left and top  */}\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom\n            innerHeight={innerHeight}\n            xScale={xScale}\n            tickFormat={xAxisTickFormat}\n            tickOffset={7}\n            tickCount={width > 480 ? 6 : 2}\n          />\n          <AxisLeft\n            innerWidth={innerWidth}\n            yScale={yScale}\n            tickOffset={7}\n            tickFormat={yAxisTickFormat}\n          />\n          {/* <text */}\n          {/*   className={styles.axisLabel} */}\n          {/*   textAnchor=\"middle\" */}\n          {/*   transform={`translate(${-yAxisLabelOffset}, ${ */}\n          {/*     innerHeight / 2 */}\n          {/*   }) rotate(-90)`} */}\n          {/* > */}\n          {/*   {yAxisLabel} */}\n          {/* </text> */}\n          <g className={styles.marks}>\n            <path d={areaGenerator(data)} />\n          </g>\n          <XMarkerLine\n            value={new Date(\"2021-05-15T00:00\")}\n            xScale={xScale}\n            height={innerHeight}\n            label={\"雙北實施三級警戒\"}\n          />\n          <XMarkerLine\n            value={new Date(\"2021-06-15T00:00\")}\n            xScale={xScale}\n            height={innerHeight}\n            label={\"七五歲以上疫苗開打\"}\n          />\n          {activeData ? (\n            <>\n              <CursorLine\n                value={activeData.date}\n                xScale={xScale}\n                height={innerHeight}\n              />\n              <g\n                transform={`translate(${areaGenerator.x()(\n                  activeData\n                )}, ${areaGenerator.y1()(activeData)})`}\n              >\n                <circle className={styles.dataPoint} r={5} />\n                <Tooltip\n                  activeData={activeData}\n                  className={styles.tooltipStroke}\n                />\n                <Tooltip activeData={activeData} className={styles.tooltip} />\n              </g>\n            </>\n          ) : null}\n          <VoronoiOverlay\n            margin={margin}\n            onHover={handleVoronoiHover}\n            data={data}\n            areaGenerator={areaGenerator}\n            innerWidth={innerWidth}\n            innerHeight={innerHeight}\n          />\n        </g>\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\nconst SourceCredit = () => (\n  <p className=\"footnote\">\n    資料來源：Center for Systems Science and Engineering (CSSE) at Johns Hopkins\n    University (\n    <a href=\"https://github.com/owid/covid-19-data/tree/master/public/data/jhu\">\n      Our Wolrd in Data\n    </a>\n    )\n  </p>\n);\nexport const Collapsible = ({ id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        這張圖表可以怎麼看？\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">\n          <p>\n            這張圖表用來顯示病毒每天傳播的速度。每一個資料點代表一天內新增的確診案例數。\n          </p>\n          <p>\n            在傳染病增溫期間，一名染疫者可能會將病毒傳染給一名以上原本健康的人，如此一來，後些日子的新增案例就會比前些日子要多。舉例來說，假設今天驗出了十名新的確診者，而昨天只有五名，那我們可以粗略地看作是昨天的五名病患各別將病毒傳染了二個人。於是「二」就是圖表上方列的「增長因數」。唯有當增長因數穩定低於一，我們才有機會看到疫情的終點，否則便代表疫情還在增溫階段。\n          </p>\n          <p>\n            就各國的經驗看來，由於大多數社會都是以週為單位在運作，所以光看每日的新增病例數不一定準。為了避免過度解讀，這張圖表列出的增長因數以週平均數來計算。\n          </p>\n          <SourceCredit />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useData } from \"./useData\";\nimport { LoadSpinner } from \"../../elements/CommonUIs\";\nimport { NavBar } from \"./NavBar\";\nimport { ChartTitle } from \"./ChartTitle\";\nimport { DataTable } from \"./DataTable\";\nimport { AreaChart } from \"./AreaChart\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst sumValuesInObject = (data, key) =>\n  data.reduce(\n    (prev, cur) => prev + cur[key],\n    0 // initialValue\n  );\n\nconst title = \"COVID-19 台灣每日新增案例數\";\n\nconst NEW_CONFIRMED_API =\n  \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/jhu/new_cases.csv\";\n\nconst NEW_DEATHS_API =\n  \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/jhu/new_deaths.csv\";\n\nexport const TaiwanNewCasesArea = () => {\n  const [view, setView] = useState(\"confirmed\");\n\n  const csvUrl = view === \"confirmed\" ? NEW_CONFIRMED_API : NEW_DEATHS_API;\n  const data = useData(csvUrl);\n  if (!data) return <LoadSpinner />;\n  // if (data) console.log(data);\n\n  const filteredData = data.filter(\n    (obj) => obj.date.valueOf() >= new Date(\"2021-04-30\").valueOf()\n  );\n\n  const sevenDayAvg = sumValuesInObject(data.slice(-7), \"newCases\") / 7;\n  const prevSevenDayAvg =\n    sumValuesInObject(data.slice(-14, -7), \"newCases\") / 7;\n\n  const tableData = [\n    {\n      heading: \"上週平均\",\n      value: Math.round(prevSevenDayAvg).toLocaleString(),\n    },\n    {\n      heading: \"本週平均\",\n      value: Math.round(sevenDayAvg).toLocaleString(),\n    },\n    {\n      heading: \"增長因數\",\n      value: (sevenDayAvg / prevSevenDayAvg).toFixed(2),\n    },\n  ];\n\n  return (\n    <>\n      <ChartTitle title={title} />\n      <NavBar view={view} setView={setView} />\n      <DataTable items={tableData} />\n      <AreaChart data={filteredData} />\n      <Collapsible id={title} />\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const ChartTitle = ({ title }) => (\n  <div className=\"chart-title\">{title}</div>\n);\n","import React from \"react\";\n\nexport const DataTable = ({ items }) => {\n  return (\n    <div className=\"small-table\">\n      <table>\n        <thead>\n          <tr>\n            {items.map((item, index) => (\n              <th key={index}>{item.heading}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {items.map((item, index) => (\n              <td className=\"numerical-data\" key={index}>\n                {item.value}\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom } from \"d3\";\nimport styles from \"./AreaChart.module.css\";\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickCount = 6,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  useEffect(() => {\n    const xAxisG = select(ref.current);\n    const xAxis = axisBottom(xScale)\n      .ticks(tickCount, tickFormat)\n      .tickSize(-innerHeight)\n      .tickPadding(tickOffset);\n    xAxisG\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-55)\");\n  }, [xScale, innerHeight, tickFormat, tickOffset, tickCount]);\n  return (\n    <g\n      ref={ref}\n      className={styles.tick}\n      transform={`translate(0, ${innerHeight})`}\n    />\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisLeft } from \"d3\";\nimport styles from \"./AreaChart.module.css\";\n\nexport const AxisLeft = ({\n  yScale,\n  innerWidth,\n  tickFormat,\n  tickCount = 6,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  useEffect(() => {\n    const yAxisG = select(ref.current);\n    const yAxis = axisLeft(yScale)\n      .ticks(tickCount)\n      .tickSize(innerWidth)\n      .tickPadding(tickOffset)\n      .tickFormat(tickFormat);\n    yAxisG.call(yAxis);\n  }, [yScale, innerWidth, tickFormat, tickOffset, tickCount]);\n  return (\n    <g\n      ref={ref}\n      className={styles.tick}\n      transform={`translate(${innerWidth}, 0)`}\n    />\n  );\n};\n","import React from \"react\";\nimport styles from \"./AreaChart.module.css\";\nexport const CursorLine = ({ value, xScale, innerHeight }) => {\n  const markerLineX = xScale(value);\n  const markerLineY1 = 0;\n  const markerLineY2 = innerHeight;\n  return (\n    <line\n      className={styles.cursorLine}\n      x1={markerLineX}\n      y1={markerLineY1}\n      x2={markerLineX}\n      y2={markerLineY2}\n    />\n  );\n};\n","import React from \"react\";\nimport styles from \"./AreaChart.module.css\";\nexport const YMarkerLine = ({ value, yScale, innerWidth, labelOffset = 8 }) => {\n  const markerLineY = yScale(value);\n  const markerLineX1 = 0;\n  const markerLineX2 = innerWidth;\n  return (\n    <>\n      <line\n        className={styles.markerLine}\n        strokeDasharray=\"10,10\"\n        x1={markerLineX1}\n        y1={markerLineY}\n        x2={markerLineX2}\n        y2={markerLineY}\n      />\n      <text\n        className={styles.markerLineLabelStroke}\n        textAnchor={\"start\"}\n        dominantBaseline={\"hanging\"}\n        x={labelOffset}\n        y={yScale(value) + labelOffset}\n        fontWeight=\"bold\"\n      >\n        全人口的75%\n      </text>\n      <text\n        className={styles.markerLineLabel}\n        textAnchor={\"start\"}\n        dominantBaseline={\"hanging\"}\n        x={labelOffset}\n        y={yScale(value) + labelOffset}\n        fontWeight=\"bold\"\n      >\n        全人口的75%\n      </text>\n    </>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { Delaunay } from \"d3-delaunay\";\nimport styles from \"./AreaChart.module.css\";\nexport const VoronoiOverlay = ({\n  margin,\n  data,\n  areaGenerator,\n  onHover,\n  innerWidth,\n  innerHeight,\n}) => {\n  // console.log(data);\n  return useMemo(() => {\n    const points = data.map((d) => [\n      areaGenerator.x()(d),\n      areaGenerator.y()(d),\n    ]);\n    const delaunay = Delaunay.from(points);\n    const voronoi = delaunay.voronoi([\n      0,\n      0,\n      innerWidth + margin.right,\n      innerHeight,\n    ]);\n    return (\n      <g className={styles.voronoi}>\n        {points.map((point, i) => (\n          <path\n            key={i}\n            onPointerEnter={() => onHover(data[i])}\n            d={voronoi.renderCell(i)}\n          />\n        ))}\n      </g>\n    );\n  }, [data, areaGenerator, innerHeight, innerWidth, onHover, margin.right]);\n};\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport { scaleLinear, scaleTime, area, timeFormat, extent, format } from \"d3\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { CursorLine } from \"./CursorLine\";\nimport { YMarkerLine } from \"./YMarkerLine\";\nimport { VoronoiOverlay } from \"./VoronoiOverlay\";\n// import { ColorLegend } from \"./ColorLegend\";\nimport styles from \"./AreaChart.module.css\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.6 : width * 1;\nconst margin = { top: 20, right: 50, bottom: 80, left: 50 };\n\nconst xValue = (d) => d.date;\nconst xAxisTickFormat = timeFormat(\"%-m/%-d, %Y\");\nconst xTooltipFormat = timeFormat(\"%-m/%-d, %Y\");\n\nconst yValue = (d) => d.total_vaccinations;\n// const yValue = (d) => d.people_vaccinated;\n// const yValue2 = (d) => d.people_fully_vaccinated;\n// const yAxisLabel = \"接種人次\";\n// const yAxisLabelOffset = 75;\nconst siFormat = format(\"~s\");\nconst yAxisTickFormat = (tickValue) => siFormat(tickValue).replace(\"M\", \"百萬\");\n\n// const ColorLegendLabel = \"接種情形\";\n// const legendCircleRadius = 8;\n// const legendItemSpacing = 26;\n\nexport const AreaChart = ({ data }) => {\n  // Change state when different point is hovered\n  const [activeData, setActiveData] = useState(data[data.length - 1]);\n  const taiwanPopulation = 23514196;\n\n  // The chart's real height and width\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  // const legendX = innerWidth - 50;\n  // const legendY = margin.top + legendItemSpacing / 2;\n\n  // X axis is time\n  const xScale = useMemo(\n    () =>\n      scaleTime()\n        // Domain is an array of actual dates\n        // d3.extent(iterable[, accessor]) returns the [max, min] of iterable\n        .domain(extent(data, xValue))\n        // Range is where the data is shown in pixels, starts from 0 to chart's width\n        .range([0, innerWidth])\n        .nice(),\n    [data, innerWidth]\n  );\n\n  // Y is countries is categorical, band scale is for ordinal or categorical dimension\n  const yScale = useMemo(\n    () =>\n      scaleLinear()\n        .domain([0, taiwanPopulation])\n        .range([innerHeight, 0])\n        .nice(),\n    [innerHeight]\n  );\n\n  // const colorScale = useMemo(\n  //   () =>\n  //     scaleOrdinal()\n  //       .domain([\"已接種一次\", \"已充分接種\"])\n  //       .range([\"#7098a5\", \"#b1c1be\"]),\n  //   []\n  // );\n\n  const handleVoronoiHover = useCallback(setActiveData, [setActiveData]);\n\n  const areaGenerator = useMemo(\n    () =>\n      area()\n        .x((d) => xScale(xValue(d)))\n        .y1((d) => yScale(yValue(d)))\n        .y0(yScale(0)),\n    [xScale, yScale]\n  );\n\n  // const areaGenerator2 = useMemo(\n  //   () =>\n  //     area()\n  //       .x((d) => xScale(xValue(d)))\n  //       .y1((d) => yScale(yValue2(d)))\n  //       .y0(yScale(0)),\n  //   [xScale, yScale]\n  // );\n\n  const Tooltip = ({ activeData, scaleValue, className, position }) => (\n    <text\n      className={className}\n      textAnchor={\"middle\"}\n      dominantBaseline={\"middle\"}\n      x={0}\n      y={position === \"down\" ? 40 : -15}\n    >\n      <tspan x=\"0\" dy=\"0\" fontWeight=\"bold\">\n        ({format(\".1%\")(scaleValue(activeData) / taiwanPopulation)})\n      </tspan>\n      <tspan x=\"0\" dy=\"-1.3em\" fontWeight=\"bold\">\n        {scaleValue(activeData).toLocaleString()}人\n      </tspan>\n      {position === \"up\" ? (\n        <tspan x=\"0\" dy=\"-1.3em\">\n          {xTooltipFormat(activeData.date)}\n        </tspan>\n      ) : null}\n    </text>\n  );\n  return (\n    <>\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        {/* Adds margin to left and top  */}\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom\n            innerHeight={innerHeight}\n            xScale={xScale}\n            tickFormat={xAxisTickFormat}\n            tickOffset={7}\n            tickCount={width > 480 ? 6 : 2}\n          />\n          <AxisLeft\n            innerWidth={innerWidth}\n            yScale={yScale}\n            tickOffset={7}\n            tickFormat={yAxisTickFormat}\n          />\n          {/* <text */}\n          {/*   className={styles.axisLabel} */}\n          {/*   textAnchor=\"middle\" */}\n          {/*   transform={`translate(${-yAxisLabelOffset}, ${innerHeight / 2})`} */}\n          {/*   writingMode=\"vertical-lr\" */}\n          {/* > */}\n          {/*   {yAxisLabel} */}\n          {/* </text> */}\n          <g className={styles.primary}>\n            <path d={areaGenerator(data)} />\n          </g>\n          {/* <g className={styles.secondary}> */}\n          {/*   <path d={areaGenerator2(data)} /> */}\n          {/* </g> */}\n          {activeData ? (\n            <>\n              <CursorLine\n                value={activeData.date}\n                xScale={xScale}\n                innerHeight={innerHeight}\n              />\n              <g\n                transform={`translate(${areaGenerator.x()(\n                  activeData\n                )}, ${areaGenerator.y1()(activeData)})`}\n              >\n                <circle className={styles.dataPoint} r={5} />\n                <Tooltip\n                  activeData={activeData}\n                  scaleValue={yValue}\n                  className={styles.tooltipStroke}\n                  position=\"up\"\n                />\n                <Tooltip\n                  activeData={activeData}\n                  scaleValue={yValue}\n                  className={styles.tooltip}\n                  position=\"up\"\n                />\n              </g>\n              {/* <g */}\n              {/*   transform={`translate(${areaGenerator.x()( */}\n              {/*     activeData */}\n              {/*   )}, ${areaGenerator2.y1()(activeData)})`} */}\n              {/* > */}\n              {/*   <circle className={styles.dataPoint} r={5} /> */}\n              {/*   <Tooltip */}\n              {/*     activeData={activeData} */}\n              {/*     scaleValue={yValue2} */}\n              {/*     className={styles.tooltipStroke} */}\n              {/*     position=\"down\" */}\n              {/*   /> */}\n              {/*   <Tooltip */}\n              {/*     activeData={activeData} */}\n              {/*     scaleValue={yValue2} */}\n              {/*     className={styles.tooltip} */}\n              {/*     position=\"down\" */}\n              {/*   /> */}\n              {/* </g> */}\n            </>\n          ) : null}\n          <YMarkerLine\n            value={taiwanPopulation * 0.75}\n            yScale={yScale}\n            innerWidth={innerWidth}\n          />\n          <VoronoiOverlay\n            margin={margin}\n            onHover={handleVoronoiHover}\n            data={data}\n            areaGenerator={areaGenerator}\n            innerWidth={innerWidth}\n            innerHeight={innerHeight}\n          />\n        </g>\n        {/* <g transform={`translate(${legendX}, ${legendY})`}> */}\n        {/*   <text className={styles.legendLabel} x={-7} y={-legendItemSpacing}> */}\n        {/*     {ColorLegendLabel} */}\n        {/*   </text> */}\n        {/*   <ColorLegend */}\n        {/*     colorScale={colorScale} */}\n        {/*     tickSpacing={legendItemSpacing} */}\n        {/*     tickSize={legendCircleRadius} */}\n        {/*     tickTextOffset={16} */}\n        {/*   /> */}\n        {/* </g> */}\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\nconst SourceCredit = () => (\n  <p className=\"footnote\">\n    資料來源：衛生福利部疾病管制署（\n    <a href=\"https://github.com/owid/covid-19-data/blob/master/public/data/vaccinations/country_data/Taiwan.csv\">\n      Our Wolrd in Data\n    </a>\n    ）\n  </p>\n);\nexport const Collapsible = ({ id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        這張圖表可以怎麼看？\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">\n          <p>\n            這張圖表的用意在於判斷：以施打疫苗為防疫手段而言，台灣距離平息COVID-19疫情還有多遠。由於目前市面上的疫苗大多需要打兩劑才算完成接種\n            <s>，因此這裡也將接種人次分為「已接種」與「充分接種」兩種</s>\n            。（2021年6月18日更新：台灣疾管署公佈接種數據時並不區分劑數差異，這張圖也只好改為單純的接種人次統計。）\n          </p>\n          <p>\n            根據\n            <a href=\"https://www.who.int/zh/news-room/q-a-detail/herd-immunity-lockdowns-and-covid-19?gclid=Cj0KCQjw16KFBhCgARIsALB0g8K0rV9obZlpcbd2lFom_qKgbCe72ZnV_mqn8Z2AiNt5W3QRZFbMGCoaAshfEALw_wcB\">\n              世界衛生組織的建議\n            </a>\n            ，對抗大規模傳染的流行病，居家隔離、封鎖等措施本身便會對個人與社會造成負面影響，是為爭取時間不得已而為之。要真正對抗COVID-19，世衛支持透過疫苗來達到「群體免疫」的效果。\n          </p>\n          <p>\n            要實現「群體免疫」，就得讓社群中大多數人都擁有抗體，人數一多，病毒自然就少了傳播媒介，從而中斷傳播鏈。人要取得抗體有兩種手段：一是讓大多數的人都感染，感染過後自然會產生抗體，但這種方法必然會導致更多病例與死亡。另一種方法，就是施打疫苗。疫苗可以在不讓人生病的情況下，訓練免疫系統產生抗體，比起真的生病是安全得多的做法。\n          </p>\n          <p>\n            那麼，要多少人打過疫苗才能達到群體免疫呢？要考慮的條件主要有二。首先是每種疾病的狀況不同，例如麻疹需要95%的人口接種，才能保護剩下的5%。就COVID-19來說，實際需要多高的接種率目前沒有人能夠肯定。不過，根據\n            <a href=\"https://wwwnc.cdc.gov/eid/article/27/5/20-4365_article\">\n              美國疾管中心在卡達做的研究\n            </a>\n            ，社群中若有65%至70%的人感染，該社群就很接近群體免疫。\n          </p>\n          <p>\n            知道了這點之後，第二個要考慮的是\n            <a href=\"https://www.thelancet.com/journals/lanmic/article/PIIS2666-5247(21)00069-0/fulltext\">\n              疫苗的效能\n            </a>\n            。每一款疫苗的效能不盡相同，若是使用效能約65%至70%左右的AstraZeneca-Oxford或嬌生疫苗，就需要全民施打來達到群體免疫；若使用效能達95%左右的Pfizer-BioNTech或Moderna-NIH疫苗，則只需75%的人口施打即可。\n          </p>\n          <SourceCredit />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"./useData\";\nimport { LoadSpinner } from \"../../elements/CommonUIs\";\nimport { ChartTitle } from \"./ChartTitle\";\nimport { DataTable } from \"./DataTable\";\nimport { AreaChart } from \"./AreaChart\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst title = \"台灣 COVID-19 疫苗接種人次\";\n\nexport const TaiwanVaccinationArea = () => {\n  const data = useData();\n  if (!data) return <LoadSpinner />;\n  // if (!data || !data[data.length - 1].people_vaccinated) return <LoadSpinner />;\n  // if (data) console.log(data[data.length - 1]);\n\n  const tableData = [\n    {\n      heading: \"接種人次總計\",\n      value: data[data.length - 1].total_vaccinations.toLocaleString(),\n    },\n    // {\n    //   heading: \"已接種人數\",\n    //   value: data[data.length - 1].people_vaccinated.toLocaleString(),\n    // },\n    // {\n    //   heading: \"充分接種人數\",\n    //   value: data[data.length - 1].people_fully_vaccinated.toLocaleString(),\n    // },\n  ];\n\n  return (\n    <>\n      <ChartTitle title={title} />\n      <DataTable items={tableData} />\n      <AreaChart data={data} />\n      <Collapsible id={title} />\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { csv, autoType } from \"d3\";\n\nconst csvUrl =\n  \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/country_data/Taiwan.csv\";\n\n// Data: Covid vaccinations in Taiwan\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n  useEffect(() => {\n    let isMounted = true;\n    csv(csvUrl, autoType).then((d) => {\n      if (isMounted) setData(d);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\n// import PropTypes from \"prop-types\";\n// import { setCookie } from \"../utils/useCookies\";\n\nexport const NavBar = ({ view, setView }) => {\n  // A series of buttons to switch between views of charts.\n  const buttons = [\n    {\n      name: \"以人口比例計\",\n      view_name: \"rates\",\n      className: view === \"rates\" ? \"active view-button\" : \"view-button\",\n    },\n    {\n      name: \"以實際劑數計\",\n      view_name: \"doses\",\n      className: view === \"doses\" ? \"active view-button\" : \"view-button\",\n    },\n  ];\n\n  return (\n    <div className={styles.nav}>\n      {buttons.map((button) => (\n        <ViewButton setView={setView} {...button} key={button.view_name} />\n      ))}\n    </div>\n  );\n};\n\nconst ViewButton = ({ name, view_name, className, setView }) => {\n  // A series of buttons to switch between views of charts.\n  const handleClick = (e) => {\n    e.preventDefault();\n    // setCookie(\"view\", view_name);\n    setView(view_name);\n  };\n  // Changes the button label according to current view.\n  return (\n    <button onClick={handleClick} type=\"button\" className={className}>\n      {name}\n    </button>\n  );\n};\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickOffset = 3,\n  tickCount = 6,\n}) =>\n  // Label and reference lines for x scale\n  xScale.ticks(tickCount).map((tickValue) => (\n    // Each tick goes to the position indicating its value\n    <g\n      className={styles.tick}\n      key={tickValue}\n      transform={`translate(${xScale(tickValue)}, 0)`}\n    >\n      {/* the values of x1, x2, y1 are 0, which is default */}\n      <line y2={innerHeight} />\n      <text\n        y={innerHeight + tickOffset}\n        dy=\"0.71em\"\n        style={{ textAnchor: \"middle\" }}\n      >\n        {tickFormat(tickValue)}\n      </text>\n    </g>\n  ));\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\nexport const AxisLeft = ({ yScale, tickOffset = 3 }) =>\n  yScale.domain().map((tickValue) => (\n    <g\n      key={tickValue}\n      className={styles.tick}\n      transform={`translate(0,${yScale(tickValue) + yScale.bandwidth() / 2})`}\n    >\n      <text\n        dy=\".18em\"\n        x={-tickOffset}\n        style={{\n          fontWeight: \"bold\",\n          textAnchor: \"end\",\n          dominantBaseline: \"middle\",\n        }}\n      >\n        {tickValue}\n      </text>\n    </g>\n  ));\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\nexport const Marks = ({\n  data,\n  xScale,\n  xValue1,\n  xValue2,\n  yScale,\n  yValue,\n  tooltipFormat,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  data.map((d) => (\n    <g\n      className={styles.marks}\n      key={yValue(d)}\n      onMouseEnter={() => onHover(yValue(d))}\n      onMouseLeave={() => onHover(null)}\n      opacity={hoveredValue && hoveredValue !== yValue(d) ? fadeOpacity : 1}\n    >\n      <rect\n        x={0}\n        y={yScale(yValue(d))}\n        width={xScale(xValue2(d))}\n        height={yScale.bandwidth()}\n        stroke=\"none\"\n        strokeWidth={2}\n        fill=\"lightgray\"\n      />\n      <rect\n        x={0}\n        y={yScale(yValue(d))}\n        width={xScale(xValue1(d))}\n        height={yScale.bandwidth()}\n        fill=\"#7098a5\"\n      />\n      {hoveredValue && hoveredValue === yValue(d) ? (\n        <>\n          <text\n            x={xScale(xValue2(d)) + 10}\n            y={yScale(yValue(d)) + yScale.bandwidth() / 2}\n            style={{\n              textAnchor: \"start\",\n              dominantBaseline: \"middle\",\n              fill: \"none\",\n              stroke: \"white\",\n              strokeWidth: 2.4,\n            }}\n          >\n            <tspan x={xScale(xValue2(d)) + 10} dy={0}>\n              {yValue(d)}\n            </tspan>\n            <tspan x={xScale(xValue2(d)) + 10} dy=\"1.5em\">\n              已配送：{tooltipFormat(xValue2(d))}\n            </tspan>\n            <tspan x={xScale(xValue2(d)) + 10} dy=\"1.5em\">\n              已施打：{tooltipFormat(xValue1(d))}\n            </tspan>\n          </text>\n          <text\n            x={xScale(xValue2(d)) + 10}\n            y={yScale(yValue(d)) + yScale.bandwidth() / 2}\n            style={{\n              textAnchor: \"start\",\n              dominantBaseline: \"middle\",\n              fill: \"black\",\n            }}\n          >\n            <tspan x={xScale(xValue2(d)) + 10} dy={0}>\n              {yValue(d)}\n            </tspan>\n            <tspan x={xScale(xValue2(d)) + 10} dy=\"1.5em\">\n              已配送：{tooltipFormat(xValue2(d))}\n            </tspan>\n            <tspan x={xScale(xValue2(d)) + 10} dy=\"1.5em\">\n              已施打：{tooltipFormat(xValue1(d))}\n            </tspan>\n          </text>\n        </>\n      ) : null}\n    </g>\n  ));\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\nexport const ColorLegend = ({\n  tickSpacing = 20,\n  tickSize = 10,\n  tickTextOffset = 20,\n}) => (\n  <>\n    <g className={styles.legend} transform={`translate(0, 0)`}>\n      <rect\n        fill={\"lightgray\"}\n        transform={`translate(-${tickSize / 2}, -${tickSize / 2})`}\n        width={tickSize}\n        height={tickSize}\n      />\n      <text dy=\".32em\" x={tickTextOffset}>\n        {\"已配送\"}\n      </text>\n    </g>\n    <g className={styles.legend} transform={`translate(0, ${tickSpacing})`}>\n      <rect\n        fill={\"#7098a5\"}\n        transform={`translate(-${tickSize / 2}, -${tickSize / 2})`}\n        width={tickSize}\n        height={tickSize}\n      />\n      <text dy=\".32em\" x={tickTextOffset}>\n        {\"已施打\"}\n      </text>\n    </g>\n  </>\n);\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport { scaleBand, scaleLinear, max, descending, timeFormat } from \"d3\";\nimport { NavBar } from \"./NavBar\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { Marks } from \"./Marks\";\nimport { ColorLegend } from \"./ColorLegend\";\n// import styles from \"./BarChart.module.css\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.8 : width * 1.6;\nconst margin = { top: 0, right: 120, bottom: 45, left: 70 };\n\nconst formatDate = timeFormat(\"%Y/%-m/%-d\");\nconst yValue = (d) => d.county;\n\n// The chart's real height and width\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\n\n// Legend settings\nconst legendRectSize = 15;\nconst legendItemSpacing = 26;\nconst legendX = width - margin.left;\nconst legendY = innerHeight - legendItemSpacing;\n// const ColorLegendLabel = \"疫苗現況\";\n\nconst fadeOpacity = 0.3;\n\nexport const BarChart = ({ data }) => {\n  const [hoveredValue, setHoveredValue] = useState(null);\n  const [view, setView] = useState(\"rates\");\n  // console.log(data);\n\n  const xValue1 = useMemo(\n    () =>\n      view === \"rates\"\n        ? (d) => d.totalVaccinatedRate\n        : (d) => d.totalVaccinated,\n    [view]\n  );\n\n  const xValue2 = useMemo(\n    () =>\n      view === \"rates\" ? (d) => d.vaccinesCountRate : (d) => d.vaccinesCount,\n    [view]\n  );\n\n  const xAxisTickFormat = useMemo(\n    () =>\n      view === \"rates\"\n        ? (tickValue) => tickValue.toFixed(2) + \"%\"\n        : (tickValue) => tickValue.toLocaleString(),\n    [view]\n  );\n\n  const handleHover = useCallback(setHoveredValue, [setHoveredValue]);\n\n  // X axis is percentage of vaccines, thus use linear scale\n  const xScale = useMemo(\n    () =>\n      scaleLinear()\n        // Domain is an array of actual data, starts from 0 to the max of all countries\n        // d3.max(iterable[, accessor])\n        .domain([0, max(data, xValue2)])\n        // Range is where the data is shown in pixels, starts from 0 to chart's width\n        .range([0, innerWidth])\n        .nice(),\n    [data, xValue2]\n  );\n\n  const yScale = useMemo(\n    () =>\n      scaleBand()\n        .domain(\n          data.sort((a, b) => descending(xValue2(a), xValue2(b))).map(yValue)\n        )\n        .range([0, innerHeight])\n        .paddingInner(0.15),\n    [data, xValue2]\n  );\n\n  return (\n    <>\n      <NavBar view={view} setView={setView} />\n      <pre>資料更新時間：{formatDate(data[0].date)}</pre>\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        {/* Adds margin to left and top  */}\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom\n            innerHeight={innerHeight}\n            xScale={xScale}\n            tickFormat={xAxisTickFormat}\n            tickOffset={8}\n            tickCount={width > 480 ? 6 : 2}\n          />\n          <AxisLeft yScale={yScale} tickOffset={8} />\n          <Marks\n            data={data}\n            xScale={xScale}\n            xValue1={xValue1}\n            xValue2={xValue2}\n            yScale={yScale}\n            yValue={yValue}\n            tooltipFormat={xAxisTickFormat}\n            onHover={handleHover}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n        <g transform={`translate(${legendX}, ${legendY})`}>\n          {/* <text className={styles.legendLabel} x={-7} y={-legendItemSpacing}> */}\n          {/*   {ColorLegendLabel} */}\n          {/* </text> */}\n          <ColorLegend\n            xScake={xScale}\n            xValue1={xValue1}\n            xValue2={xValue2}\n            tickSpacing={legendItemSpacing}\n            tickSize={legendRectSize}\n            tickTextOffset={16}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\n\nconst SourceCredit = () => (\n  <>\n    <p className=\"footnote\">\n      資料來源：\n      <a href=\"https://www.cdc.gov.tw/Category/Page/9jFXNbCe-sFK9EImRRi2Og\">\n        衛生福利部疾病管制署\n      </a>\n    </p>\n  </>\n);\n\nexport const Collapsible = ({ id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        這張圖表可以怎麼看？\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">\n          <p>\n            這張圖表主要用來顯示台灣各縣市的COVID-19疫苗的配給與接種現況。圖表最上方的兩個按鈕可以用來切換「以人口比例」或「以實際劑數」兩種顯示模式。有些縣市人口少，實際劑數配送得少，但以人口比例看來就相對要多，反之亦然。也因為如此，這個圖表預設以人口比例顯示，也就是「每一百人中，有多少人取得了疫苗」。\n          </p>\n          <p>\n            直方圖區分為兩種顏色：淺灰色代表已經配送至各地方政府的疫苗，綠色則代表已經施打的疫苗。如此分類的用意在於顯示各縣市的疫苗施打效率，但疾管署所統計的資料時常會有施打數大於配送數的「超打」情形，多少干擾了此圖表的本意，請留意。\n          </p>\n          <p>\n            由於疾管署並沒有提供可以自動串接的資料給大眾使用，這張圖表所呈現的資訊必須要我手動去抓取，因此很有可能呈現過時的資訊。若是如此，也請見諒。\n          </p>\n          <SourceCredit />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"./useData\";\nimport { BarChart } from \"./BarChart\";\nimport { LoadSpinner } from \"../../elements/CommonUIs\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst ChartTitle = ({ title }) => <div className=\"chart-title\">{title}</div>;\n\nexport const VaccinationRateByCountiesBar = () => {\n  const data = useData();\n  if (!data) return <LoadSpinner />;\n\n  // Get only the latest data.\n  const sortedData = data.sort((a, b) => b[\"日期\"] - a[\"日期\"]);\n  const latestData = sortedData.filter(\n    (obj, index, array) => obj[\"日期\"].valueOf() === array[0][\"日期\"].valueOf()\n  );\n  // console.log(latestData);\n\n  return (\n    <>\n      <ChartTitle title=\"台灣各縣市施打COVID-19疫苗統計\" />\n      <BarChart data={latestData} />\n      <Collapsible id=\"caseFatalityRetes\" />\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { csv } from \"d3\";\n\nconst csvUrl =\n  \"https://gist.githubusercontent.com/mgeorgetw/413b23d87907b0f9bcda46e6e103cfb6/raw/csse_covid_19_daily_reports_vaccine_city_c.csv\";\n\n// Does not allow CORS\n// const jsonUrl =\n//   \"https://covid-19.nchc.org.tw/api/covid19?CK=covid-19@nchc.org.tw&querydata=2001\";\n\n// const convertStringToNumber = (d) => {\n//   Object.keys(d).forEach((key) => {\n//     if (typeof d[key] !== \"number\") {\n//       d[key] = d[key].replace(/,/g, \"\");\n//       d[key] = +d[key];\n//     }\n//   });\n//   return d;\n// };\n\n// Data: Covid vaccinations in Taiwan\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n  useEffect(() => {\n    let isMounted = true;\n    const row = (d) => {\n      d.id = +d[\"ID\"];\n      d.date = new Date(d[\"日期\"]);\n      d.county = d[\"縣市別\"];\n      d.population = +d[\"總人口數\"].replace(/,/g, \"\");\n      d.lastTotalVaccinated = +d[\"前次累計接種人數更新\"].replace(/,/g, \"\");\n      d.newVaccinated = +d[\"新增接種人數\"].replace(/,/g, \"\");\n      d.totalVaccinated = +d[\"累計接種人數\"].replace(/,/g, \"\");\n      d.totalVaccinatedRate = +d[\"累計接種率 (%)\"].replace(/,|%/g, \"\");\n      d.vaccinesCount = +d[\"累計配送劑數\"].replace(/,/g, \"\");\n      d.vaccinesLeftRate = +d[\"剩餘庫存量 (%)\"].replace(/,|%/g, \"\");\n      d.vaccinesCountRate = (d.vaccinesCount / d.population) * 100;\n      return d;\n    };\n    csv(csvUrl, row).then((d) => {\n      if (isMounted) setData(d);\n    });\n    // json(jsonUrl).then((rawData) => {\n    //   const data = rawData.map((d) => {\n    //     d.date = d.a01;\n    //     d.county = d.a02;\n    //     d.population = +d.a03;\n    //     d.lastTotalVaccinated = +d.a04;\n    //     d.newVaccinated = +d.a05;\n    //     d.totalVaccinated = +d.a06;\n    //     d.totalVaccinatedRate = +d.a07;\n    //     d.vaccinesCount = +d.a08;\n    //     d.vaccinesLeftRate = +d.a09;\n    //     d.vaccinesCountRate = (d.vaccinesCount / d.population) * 100;\n    //     return d;\n    //   });\n    //   console.log(\"json\", data);\n    // });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import React from \"react\";\n\nexport const ChartTitle = ({ title }) => (\n  <div className=\"chart-title\">{title}</div>\n);\n","import React, { useState, useEffect } from \"react\";\n\nconst dropdownItems = [\n  \"全台灣\",\n  \"南投縣\",\n  \"台中市\",\n  \"台北市\",\n  \"台南市\",\n  \"台東縣\",\n  \"嘉義市\",\n  \"嘉義縣\",\n  \"基隆市\",\n  \"境外移入\",\n  \"宜蘭縣\",\n  \"屏東縣\",\n  \"彰化縣\",\n  \"新北市\",\n  \"新竹市\",\n  \"新竹縣\",\n  \"桃園市\",\n  \"澎湖縣\",\n  \"花蓮縣\",\n  \"苗栗縣\",\n  \"連江縣\",\n  \"雲林縣\",\n  \"高雄市\",\n];\n\nexport const DropdownMenu = ({\n  chosen,\n  setChosen,\n  handleTypeHover,\n  handleCursorHover,\n}) => {\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    setItems(\n      dropdownItems.map((d) => ({\n        label: d,\n        value: d,\n      }))\n    );\n  }, []);\n  return (\n    <div className=\"dropdown-container\">\n      區域：\n      <select\n        value={chosen}\n        onChange={(e) => {\n          setChosen(e.currentTarget.value);\n          handleTypeHover(null);\n          handleCursorHover(null);\n        }}\n      >\n        {items.map(({ label, value }) => (\n          <option className=\"region-name\" key={label} value={value}>\n            {label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom } from \"d3\";\nimport styles from \"./AreaChart.module.css\";\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickCount = 6,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  useEffect(() => {\n    const xAxisG = select(ref.current);\n    const xAxis = axisBottom(xScale)\n      .ticks(tickCount, tickFormat)\n      .tickSize(-innerHeight)\n      .tickPadding(tickOffset);\n    xAxisG\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-55)\");\n  }, [xScale, innerHeight, tickFormat, tickOffset, tickCount]);\n  return (\n    <g\n      ref={ref}\n      className={styles.tick}\n      transform={`translate(0, ${innerHeight})`}\n    />\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisLeft } from \"d3\";\nimport styles from \"./AreaChart.module.css\";\n\n// TODO: no negative values\nexport const AxisLeft = ({\n  yScale,\n  innerWidth,\n  tickFormat,\n  tickCount = 6,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  useEffect(() => {\n    const yAxisG = select(ref.current);\n    const yAxis = axisLeft(yScale)\n      .ticks(tickCount)\n      .tickSize(innerWidth)\n      .tickPadding(tickOffset)\n      .tickFormat(tickFormat);\n    yAxisG.call(yAxis);\n  }, [yScale, innerWidth, tickFormat, tickOffset, tickCount]);\n  return (\n    <g\n      ref={ref}\n      className={styles.tick}\n      transform={`translate(${innerWidth}, 0)`}\n    />\n  );\n};\n","import React from \"react\";\nimport styles from \"./AreaChart.module.css\";\nexport const CursorLine = ({ value, xScale, innerHeight }) => {\n  const markerLineX = xScale(value);\n  const markerLineY1 = 0;\n  const markerLineY2 = innerHeight;\n  return (\n    <line\n      className={styles.cursorLine}\n      x1={markerLineX}\n      y1={markerLineY1}\n      x2={markerLineX}\n      y2={markerLineY2}\n    />\n  );\n};\n","import React from \"react\";\nimport styles from \"./AreaChart.module.css\";\nexport const XMarkerLine = ({ value, xScale, height }) => {\n  const markerLineX = xScale(value);\n  const markerLineY1 = 0;\n  const markerLineY2 = height;\n  return (\n    <>\n      <line\n        className={styles.markerLine}\n        strokeDasharray=\"10,10\"\n        x1={markerLineX}\n        y1={markerLineY1}\n        x2={markerLineX}\n        y2={markerLineY2}\n      />\n      <text\n        className={styles.markerLineLabelStroke}\n        textAnchor={\"end\"}\n        x={xScale(new Date(\"2021-05-15T08:00\")) - 15}\n        y={height - 5}\n        writingMode=\"vertical-rl\"\n      >\n        雙北實施三級警戒\n      </text>\n      <text\n        className={styles.markerLineLabel}\n        textAnchor={\"end\"}\n        x={xScale(new Date(\"2021-05-15T08:00\")) - 15}\n        y={height - 5}\n        writingMode=\"vertical-rl\"\n      >\n        雙北實施三級警戒\n      </text>\n    </>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styles from \"./AreaChart.module.css\";\nexport const LineOverlay = ({ data, areaGenerator, onHover }) => {\n  return useMemo(() => {\n    const points = data.map((d) => [\n      areaGenerator.x()(d),\n      areaGenerator.y0()(d),\n      areaGenerator.y1()(d),\n    ]);\n    return (\n      <g className={styles.voronoi}>\n        {points.map((point, i) => (\n          <path\n            key={i}\n            d={`M${point[0]},${point[1]}L${point[0]},${point[2]}Z`}\n            strokeLinecap={\"round\"}\n            opacity={0.7}\n            onPointerEnter={(event) => {\n              event.preventDefault();\n              onHover(data[i]);\n            }}\n            onMouseEnter={() => onHover(data[i])}\n            onTouchMove={(event) => {\n              event.preventDefault();\n              onHover(data[i]);\n            }}\n            onTouchStart={(event) => {\n              event.preventDefault();\n              onHover(data[i]);\n            }}\n          />\n        ))}\n      </g>\n    );\n  }, [data, areaGenerator, onHover]);\n};\n","import React, {\n  useState,\n  useMemo,\n  useCallback,\n  // useRef,\n  // useEffect,\n} from \"react\";\nimport {\n  scaleLinear,\n  scaleTime,\n  scaleOrdinal,\n  area,\n  timeFormat,\n  extent,\n  min,\n  max,\n  interpolateViridis,\n  // select,\n} from \"d3\";\nimport { DropdownMenu } from \"./DropdownMenu\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { CursorLine } from \"./CursorLine\";\nimport { XMarkerLine } from \"./XMarkerLine\";\n// import { YMarkerLine } from \"./YMarkerLine\";\nimport { LineOverlay } from \"./LineOverlay\";\n// import { ColorLegend } from \"./ColorLegend\";\n// import { areaLabel } from \"d3-area-label\";\nimport styles from \"./AreaChart.module.css\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.6 : width * 1;\nconst margin = { top: 20, right: 5, bottom: 80, left: 50 };\n\nconst xValue = (d) => d.date;\nconst xAxisTickFormat = timeFormat(\"%-m/%-d, %Y\");\nconst xTooltipFormat = timeFormat(\"%-m/%-d, %Y\");\nconst formatDate = timeFormat(\"%Y/%-m/%-d\");\n\n// const yValue = (d) => d[\"新增確診人數\"];\n// const yAxisLabel = \"接種人次\";\n// const yAxisLabelOffset = 75;\nconst yAxisTickFormat = (tickValue) => (tickValue < 0 ? -tickValue : tickValue);\n\n// const ColorLegendLabel = \"接種情形\";\n// const legendCircleRadius = 8;\n// const legendItemSpacing = 26;\n\nexport const AreaChart = ({ data, stackedData, view, setView }) => {\n  // console.log(data);\n  // Change state when different point is hovered\n  const [activeData, setActiveData] = useState(null);\n  const [hoveredValue, setHoveredValue] = useState(null);\n\n  // const ref = useRef();\n\n  // The chart's real height and width\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  // const legendX = innerWidth + margin.left + 15;\n  // const legendY = margin.top + legendItemSpacing / 2;\n\n  // X axis is time\n  const xScale = useMemo(\n    () =>\n      scaleTime()\n        // Domain is an array of actual dates\n        // d3.extent(iterable[, accessor]) returns the [max, min] of iterable\n        .domain(extent(data, (d) => d[\"日期\"]))\n        // Range is where the data is shown in pixels, starts from 0 to chart's width\n        .range([0, innerWidth]),\n    [data, innerWidth]\n  );\n\n  // Y is countries is categorical, band scale is for ordinal or categorical dimension\n  const yScale = useMemo(\n    () =>\n      scaleLinear()\n        .domain([\n          min(stackedData, (d) => min(d, (d) => d[0])),\n          max(stackedData, (d) => max(d, (d) => d[1])),\n        ])\n        .range([innerHeight, 0])\n        .nice(),\n    [stackedData, innerHeight]\n  );\n\n  const colorScale = useMemo(\n    () =>\n      scaleOrdinal().range(\n        stackedData.map((area, i) => {\n          const t = i / stackedData.length;\n          return interpolateViridis(t);\n        })\n      ),\n    [stackedData]\n  );\n\n  const handleCursorHover = useCallback(setActiveData, [setActiveData]);\n  const handleTypeHover = useCallback(setHoveredValue, [setHoveredValue]);\n\n  const areaGenerator = useMemo(\n    () =>\n      area()\n        .x((d) => xScale(xValue(d.data)))\n        .y0((d) => yScale(d[0]))\n        .y1((d) => yScale(d[1])),\n    [xScale, yScale]\n  );\n\n  const Tooltip = ({ activeData, hoveredValue, className }) => (\n    <text\n      className={className}\n      textAnchor={\"start\"}\n      dominantBaseline={\"middle\"}\n      x={0}\n      y={20}\n    >\n      <tspan x=\"10\" dy=\"0\" fontWeight=\"bold\">\n        {`${hoveredValue}：${\n          activeData && activeData.data[hoveredValue].toLocaleString()\n        }人`}\n      </tspan>\n      <tspan x=\"10\" dy=\"1.3em\">\n        {xTooltipFormat(activeData && activeData.data.date)}\n      </tspan>\n    </text>\n  );\n\n  // useEffect(() => {\n  //   const labelG = select(ref.current);\n  //   const labels = labelG.selectAll(\"text\").data(stackedData);\n  //   labels\n  //     .enter()\n  //     .append(\"text\")\n  //     .attr(\"class\", styles.areaLabel)\n  //     .merge(labels)\n  //     .text((d) => d.key)\n  //     .attr(\"transform\", areaLabel(areaGenerator));\n  // }, [areaGenerator, stackedData]);\n  return (\n    <>\n      <DropdownMenu\n        chosen={view}\n        setChosen={setView}\n        handleTypeHover={handleTypeHover}\n        handleCursorHover={handleCursorHover}\n      />\n      <pre>資料更新時間：{formatDate(data[0][\"日期\"])}</pre>\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        {/* Adds margin to left and top  */}\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom\n            innerHeight={innerHeight}\n            xScale={xScale}\n            tickFormat={xAxisTickFormat}\n            tickOffset={7}\n            tickCount={width > 480 ? 6 : 2}\n          />\n          <AxisLeft\n            innerWidth={innerWidth}\n            yScale={yScale}\n            tickOffset={7}\n            tickFormat={yAxisTickFormat}\n          />\n          {/* <text */}\n          {/*   className={styles.axisLabel} */}\n          {/*   textAnchor=\"middle\" */}\n          {/*   transform={`translate(${-yAxisLabelOffset}, ${innerHeight / 2})`} */}\n          {/*   writingMode=\"vertical-lr\" */}\n          {/* > */}\n          {/*   {yAxisLabel} */}\n          {/* </text> */}\n          <g className={styles.primary}>\n            {stackedData.map((d) => (\n              <g\n                key={d.key}\n                onPointerEnter={(event) => {\n                  event.preventDefault();\n                  handleTypeHover(d.key);\n                }}\n                onMouseLeave={() => handleTypeHover(null)}\n              >\n                <path\n                  d={areaGenerator(d)}\n                  fill={colorScale(d.key)}\n                  stroke={colorScale(d.key)}\n                  opacity={hoveredValue ? 0.4 : 1}\n                >\n                  <title>{d.key}</title>\n                </path>\n                {hoveredValue === d.key ? (\n                  <>\n                    <path\n                      d={areaGenerator(d)}\n                      fill={colorScale(d.key)}\n                      stroke={colorScale(d.key)}\n                    >\n                      <title>{d.key}</title>\n                    </path>\n                    {activeData ? (\n                      <>\n                        <CursorLine\n                          value={activeData.data.date}\n                          xScale={xScale}\n                          innerHeight={innerHeight}\n                        />\n                        <Tooltip\n                          activeData={activeData}\n                          hoveredValue={hoveredValue}\n                          className={styles.tooltipStroke}\n                        />\n                        <Tooltip\n                          activeData={activeData}\n                          hoveredValue={hoveredValue}\n                          className={styles.tooltip}\n                        />\n                      </>\n                    ) : null}\n                    <LineOverlay\n                      onHover={handleCursorHover}\n                      data={d}\n                      areaGenerator={areaGenerator}\n                    />\n                  </>\n                ) : null}\n              </g>\n            ))}\n          </g>\n          <XMarkerLine\n            value={new Date(\"2021-05-15T08:00\")}\n            xScale={xScale}\n            height={innerHeight}\n          />\n        </g>\n        {/* <g transform={`translate(${legendX}, ${legendY})`}> */}\n        {/*   <text className={styles.legendLabel} x={-7} y={-legendItemSpacing}> */}\n        {/*     {ColorLegendLabel} */}\n        {/*   </text> */}\n        {/*   <ColorLegend */}\n        {/*     colorScale={colorScale} */}\n        {/*     tickSpacing={legendItemSpacing} */}\n        {/*     tickSize={legendCircleRadius} */}\n        {/*     tickTextOffset={16} */}\n        {/*   /> */}\n        {/* </g> */}\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\nconst SourceCredit = () => (\n  <p className=\"footnote\">\n    資料來源：衛生福利部疾病管制署（\n    <a href=\"https://covid-19.nchc.org.tw/dt.php?dt_name=1&downloadall=yes\">\n      資料由「國家高速網路與計算中心」彙整\n    </a>\n    ）\n  </p>\n);\nexport const Collapsible = ({ id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        這張圖表可以怎麼看？\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">\n          <p>\n            這系列圖表的用意在於顯示台灣各地區疫情處於增溫或降溫的階段，同時也能作為疫情傳播情形的參考。每一個色塊代表一個縣市或鄉鎮，滑鼠移到色塊上會顯示粉色的直線，每一條直線代表一筆資料，代表一天內新增的確診案例數。\n          </p>\n          <p>\n            資料的預設範圍是「全台灣」，代表各直轄市與二級縣市的比較。點選下拉式選單則可以看到上述行政區又細分一層後的資料。\n          </p>\n          <SourceCredit />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { group, stack, stackOffsetWiggle, stackOrderAscending } from \"d3\";\nimport { useData } from \"./useData\";\nimport { LoadSpinner } from \"../../elements/CommonUIs\";\nimport { ChartTitle } from \"./ChartTitle\";\n// import { DataTable } from \"./DataTable\";\nimport { AreaChart } from \"./AreaChart\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst title = \"COVID-19 台灣各地區每日新增確診案例數比較\";\n\nconst transformData = (data, view) => {\n  let dataArray = [];\n  const groupedData = group(data, (d) => d[\"日期\"]);\n  for (let date of groupedData.keys()) {\n    let obj = { date: date };\n    const dailyCountiesData = groupedData.get(date);\n    if (view === \"全台灣\") {\n      dailyCountiesData.map(\n        ({ 縣市別, 新增確診人數 }) => (obj[縣市別] = 新增確診人數)\n      );\n    } else {\n      dailyCountiesData.map(\n        ({ 區域, 新增確診人數 }) => (obj[區域] = 新增確診人數)\n      );\n    }\n    dataArray.push(obj);\n  }\n  return dataArray;\n};\n\nexport const CasesByCountiesArea = () => {\n  const [view, setView] = useState(\"全台灣\");\n  const rawData = useData();\n  if (!rawData) return <LoadSpinner />;\n  // if (rawData) console.log(rawData);\n\n  const filteredData =\n    view === \"全台灣\"\n      ? rawData.filter((d) => d[\"區域\"] === \"全區\")\n      : rawData.filter((d) => d[\"縣市別\"] === view);\n\n  const layer = view === \"全台灣\" ? (d) => d[\"縣市別\"] : (d) => d[\"區域\"];\n  const layerGroupedData = group(filteredData, layer);\n  const layers =\n    view === \"全台灣\"\n      ? Array.from(layerGroupedData.keys())\n      : Array.from(layerGroupedData.keys()).splice(1);\n\n  const transformedData = transformData(filteredData, view);\n\n  const stackedData = stack()\n    .offset(stackOffsetWiggle)\n    .order(stackOrderAscending)\n    .keys(layers)(transformedData);\n  // console.log(stackedData);\n\n  // const tableData = [\n  //   {\n  //     heading: \"接種人數總計\",\n  //     value: data[data.length - 1].total_vaccinations.toLocaleString(),\n  //   },\n  //   {\n  //     heading: \"已接種人數\",\n  //     value: data[data.length - 1].people_vaccinated.toLocaleString(),\n  //   },\n  //   {\n  //     heading: \"充分接種人數\",\n  //     value: data[data.length - 1].people_fully_vaccinated.toLocaleString(),\n  //   },\n  // ];\n\n  return (\n    <>\n      <ChartTitle title={title} />\n      {/* <DataTable items={tableData} /> */}\n      <AreaChart\n        data={filteredData}\n        stackedData={stackedData}\n        view={view}\n        setView={setView}\n      />\n      <Collapsible id={title} />\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { csv, autoType } from \"d3\";\n\nconst csvUrl =\n  \"https://gist.githubusercontent.com/mgeorgetw/690d02dfc6bdbb99e58f6d1c622836c9/raw/covidtable_taiwan_cdc5.csv\";\n\n// Data: Covid vaccinations in Taiwan\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n  useEffect(() => {\n    let isMounted = true;\n    csv(csvUrl, autoType).then((d) => {\n      if (isMounted) setData(d);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import React from \"react\";\nimport { Card } from \"../elements/CommonUIs\";\nimport { TaiwanOverviewPie } from \"./TaiwanOverviewPie/index\";\nimport { TaiwanTestsOverviewPie } from \"./TaiwanTestsOverviewPie/index\";\nimport { TaiwanNewCasesArea } from \"./TaiwanNewCasesArea/index\";\nimport { TaiwanVaccinationArea } from \"./TaiwanVaccinationArea/index\";\nimport { VaccinationRateByCountiesBar } from \"./VaccinationRateByCountiesBar/index\";\nimport { CasesByCountiesArea } from \"./CasesByCountiesArea/index\";\n// import { ChoroplethMap } from \"./ChoroplethMap/index\";\n\nexport const TaiwanView = () => (\n  <ul className=\"flex-card-list\">\n    {/* <Card> */}\n    {/*   <ChoroplethMap /> */}\n    {/* </Card> */}\n    <Card>\n      <TaiwanOverviewPie />\n    </Card>\n    <Card>\n      <TaiwanTestsOverviewPie />\n    </Card>\n    <Card>\n      <TaiwanNewCasesArea />\n    </Card>\n    <Card>\n      <CasesByCountiesArea />\n    </Card>\n    <Card>\n      <TaiwanVaccinationArea />\n    </Card>\n    <Card>\n      <VaccinationRateByCountiesBar />\n    </Card>\n  </ul>\n);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport * as V from \"victory\";\n\n// Helper function\nconst CheckError = (response) => {\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw Error(response.statusText);\n  }\n};\n\n// Transposes {'Key': 'Value'} to {x: key, y:value}\nconst transposeKeyValue = (data) =>\n  Object.entries(data).map(([key, value]) => ({\n    // Shortens date string\n    // x: key.replace(/\\/\\d{2}$/g, \"\"),\n    x: key,\n    y: value,\n  }));\n\n// Calculates daily new cases & deaths\nconst calDailyDifference = (data) =>\n  data.map((cur, index, array) => ({\n    ...cur,\n    y: index > 0 ? cur.y - array[index - 1].y : 0,\n  }));\n\nconst calPercentage = (numerator, denominator) =>\n  Number(((numerator / denominator) * 100).toFixed(2));\n\n//const sumValuesInObject = (data, key) =>\n//data.reduce(\n//(prev, cur) => (parseInt(prev) || 0) + (parseInt(cur[key]) || 0),\n//0\n//);\n\n// API Users\n// Generic hook to fetch data v1\nconst useDataApi = (initialUrl, initialData, transformFn) => {\n  const [data, setData] = useState(initialData);\n  const [url, setUrl] = useState(initialUrl);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    let isMounted = true;\n    const fetchData = async () => {\n      try {\n        const data = await fetch(url).then(CheckError);\n        if (isMounted) setData((transformFn && transformFn(data)) || data);\n      } catch (error) {\n        if (isMounted) setIsError(true);\n        console.error(error);\n      }\n      if (isMounted) setIsLoading(false);\n    };\n    fetchData();\n    return () => {\n      isMounted = false;\n    };\n  }, [transformFn, url]);\n  return [{ data, isLoading, isError }, setUrl];\n};\n\n//const dataFetchReducer = (state, action) => {\n//switch (action.type) {\n//case \"FETCH_INIT\":\n//return {\n//...state,\n//isLoading: true,\n//isError: false\n//};\n//case \"FETCH_SUCCESS\":\n//return {\n//...state,\n//isLoading: false,\n//isError: false,\n//data: action.payload\n//};\n//case \"FETCH_FAILURE\":\n//return {\n//...state,\n//isLoading: false,\n//isError: true\n//};\n//default:\n//throw new Error();\n//}\n//};\n\n//const useDataApiReducer = (initialUrl, initialData, transformFn) => {\n//console.log(\"API reducer called!\");\n//const [url, setUrl] = useState(initialUrl);\n//const [state, dispatch] = useReducer(dataFetchReducer, {\n//isLoading: true,\n//isError: false,\n//data: initialData\n//});\n//useEffect(() => {\n//const fetchData = async () => {\n//dispatch({ type: \"FETCH_INIT\" });\n//console.log(\"reducer init!\");\n//try {\n//const data = await fetch(url).then(CheckError);\n//dispatch({\n//type: \"FETCH_SUCCESS\",\n//payload: (transformFn && transformFn(data)) || data\n//});\n//console.log(\"reducer fetched!\");\n//} catch (error) {\n//dispatch({ type: \"FETCH_FAILURE\" });\n//}\n//};\n//fetchData();\n//}, [transformFn, url]);\n//console.log(\"reducer state:\", state);\n//return [state, setUrl];\n//};\n\n// SMALL COMPONENTS / HELPER FUNCTIONS\nconst CountriesDropDownMenu = ({ data, chosen, setChosen }) => {\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    setItems(\n      data.map((d) => ({\n        label: d.province ? d.province + \", \" + d.country : d.country,\n        value: d.province ? d.province : d.country,\n      }))\n    );\n  }, [data]);\n  return (\n    <div className=\"dropdown-container\">\n      Select:{\" \"}\n      <select value={chosen} onChange={(e) => setChosen(e.currentTarget.value)}>\n        {items.map(({ label, value }) => (\n          <option className=\"region-name\" key={label} value={value}>\n            {label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nconst BarChart = ({ data, x, y }) => {\n  const axis_style = {\n    grid: {\n      stroke: \"#f3f5f6\",\n      strokeWidth: 2,\n      strokeDasharray: \"15,15\",\n    },\n  };\n  return (\n    <div className=\"bar-chart\">\n      <V.VictoryChart\n        containerComponent={\n          <V.VictoryVoronoiContainer\n            labels={({ datum }) =>\n              datum.x ? `${datum.x}: ${datum._y}` : `${datum[x]}: ${datum._y}`\n            }\n            labelComponent={<V.VictoryTooltip constrainToVisibleArea />}\n          />\n        }\n        padding={{ top: 20, bottom: 40, left: 60, right: 20 }}\n      >\n        <V.VictoryAxis fixLabelOverlap />\n        <V.VictoryAxis dependentAxis fixLabelOverlap style={axis_style} />\n        <V.VictoryBar data={data} x={x} y={y} />\n      </V.VictoryChart>\n    </div>\n  );\n};\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"lds-spinner\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nconst RadioButton = (props) => {\n  return (\n    <div className=\"radio-btn\">\n      <input\n        id={props.id}\n        type=\"radio\"\n        onChange={props.changed}\n        checked={props.isSelected}\n      />\n      <label htmlFor={props.id}>{props.label}</label>\n    </div>\n  );\n};\n\nconst SmallTable = ({ items }) => {\n  return (\n    <div className=\"small-table\">\n      <table>\n        <thead>\n          <tr>\n            {items.map((item) => (\n              <th key={item.heading}>{item.heading}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {items.map((item, index) => (\n              <td className=\"numerical-data\" key={index}>\n                {item.datum.toLocaleString()}\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n// Charts\nconst DailyLineChartInAnArea = ({ chart_type }) => {\n  const [{ data, isLoading, isError }] = useDataApi(\n    \"https://disease.sh/v3/covid-19/historical?lastdays=90\",\n    null\n  );\n  const [chosen, setChosen] = useState(\"Taiwan\");\n  const [lineData, setLineData] = useState({});\n  // if (data) console.log(data[0]);\n  const CHART_TYPES = {\n    newCases: \"Daily New Cases in \",\n    newDeaths: \"Daily Deaths in \",\n    deathRate: \"Fatality Rate in \",\n  };\n  const ChartTitle = ({ chart_type, area_name }) => {\n    return (\n      <div className=\"chart-title\">\n        {CHART_TYPES[chart_type]}\n        {area_name}\n      </div>\n    );\n  };\n  const getSTItems = (chart_type, data) =>\n    ({\n      newCases: [\n        {\n          heading: \"Total cases\",\n          datum: data.cases ? data.cases.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"New cases\",\n          datum: data.newCases ? data.newCases.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"Growth Factor\",\n          datum: data.newCases\n            ? (\n                data.newCases.slice(-1)[0].y / data.newCases.slice(-2)[0].y\n              ).toFixed(2)\n            : \"loading\",\n        },\n      ],\n      newDeaths: [\n        {\n          heading: \"Total deaths\",\n          datum: data.deaths ? data.deaths.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"New deaths\",\n          datum: data.newDeaths ? data.newDeaths.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"Fatality Rate\",\n          datum: data.deathRate\n            ? data.deathRate.slice(-1)[0].y + \"%\"\n            : \"loading\",\n        },\n      ],\n      deathRate: [\n        {\n          heading: \"Confirmed\",\n          datum: data.cases ? data.cases.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"Deaths\",\n          datum: data.deaths ? data.deaths.slice(-1)[0].y : \"loading\",\n        },\n        {\n          heading: \"Fatality Rate\",\n          datum: data.deathRate\n            ? data.deathRate.slice(-1)[0].y + \"%\"\n            : \"loading\",\n        },\n      ],\n    }[chart_type]);\n  useEffect(() => {\n    if (data) {\n      let found = data.find(\n        (obj) =>\n          obj.province === chosen || (!obj.province && obj.country === chosen)\n      );\n      let cases = transposeKeyValue(found.timeline.cases);\n      let deaths = transposeKeyValue(found.timeline.deaths);\n      let new_cases = calDailyDifference(cases);\n      let new_deaths = calDailyDifference(deaths);\n      let death_rate = cases.map((cur, index) => ({\n        x: cur.x,\n        y: calPercentage(deaths[index].y, cur.y) || 0,\n      }));\n      setLineData({\n        country: found.country,\n        province: found.province,\n        cases: cases,\n        deaths: deaths,\n        newCases: new_cases,\n        newDeaths: new_deaths,\n        deathRate: death_rate,\n      });\n    }\n  }, [data, chosen]);\n  return (\n    <>\n      <div className=\"chart-container\">\n        <ChartTitle\n          chart_type={chart_type}\n          area_name={\n            lineData.province\n              ? lineData.province + \", \" + lineData.country\n              : lineData.country\n          }\n        />\n        {isError && <div>Something went wrong</div>}\n        {isLoading ? (\n          <LoadingSpinner />\n        ) : (\n          <>\n            <CountriesDropDownMenu\n              data={data}\n              chosen={chosen}\n              setChosen={setChosen}\n            />\n            <SmallTable items={getSTItems(chart_type, lineData)} />\n            <BarChart data={lineData[chart_type]} />\n            <p className=\"footnote\">\n              Source: John Hopkins University CSSE (\n              <a href=\"https://github.com/NovelCOVID/API\">NovelCOVID/API</a>)\n            </p>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\n//const ConfirmedCasesChinaVsWorldLineChart = () => {\n//const replaceDate = dataItem => ({\n//...dataItem,\n//reportDate: dataItem.reportDate.replace(/-/g, \"/\").replace(/^\\d{4}\\//g, \"\")\n//});\n//const transformFn = useCallback(data => data.map(replaceDate), []);\n//const [{ data, isLoading, isError }] = useDataApi(\n//\"https://covid.mathdro.id/api/daily\",\n//[],\n//transformFn\n//);\n//return (\n//<>\n//{isError && <div>Something went wrong</div>}\n//<div className=\"chart-title\">Confirmed Cases</div>\n//{isLoading ? (\n//<LoadingSpinner />\n//) : (\n//<>\n//<SmallTable\n//items={[\n//{ heading: \"China\", datum: data.slice(-1)[0].mainlandChina },\n//{\n//heading: \"Other\",\n//datum: data.slice(-1)[0].otherLocations\n//}\n//]}\n///>\n//<div className=\"line-chart\">\n//<V.VictoryChart\n//containerComponent={\n//<V.VictoryVoronoiContainer\n//labels={({ datum }) => `${datum[\"reportDate\"]}: ${datum._y}`}\n//labelComponent={<V.VictoryTooltip constrainToVisibleArea />}\n///>\n//}\n//padding={{ top: 20, bottom: 40, left: 60, right: 20 }}\n//>\n//<V.VictoryAxis fixLabelOverlap />\n//<V.VictoryAxis\n//dependentAxis\n//fixLabelOverlap\n//style={{\n//grid: {\n//stroke: \"#f3f5f6\",\n//strokeWidth: 2,\n//strokeDasharray: \"15,15\"\n//}\n//}}\n///>\n//<V.VictoryGroup colorScale={[\"#fb6361\", \"black\"]}>\n//<V.VictoryLine data={data} x=\"reportDate\" y=\"mainlandChina\" />\n//<V.VictoryLine data={data} x=\"reportDate\" y=\"otherLocations\" />\n//</V.VictoryGroup>\n//<V.VictoryLegend\n//colorScale={[\"#fb6361\", \"black\"]}\n//x={60}\n//y={20}\n//data={[{ name: \"China\" }, { name: \"Other Countries\" }]}\n///>\n//</V.VictoryChart>\n//</div>\n//<p className=\"footnote\">\n//Source: Johns Hopkins University Center for Systems Science and\n//Engineering (\n//<a href=\"https://github.com/mathdroid/covid-19-api\">\n//mathdroid/covid-19-api\n//</a>\n//)\n//</p>\n//</>\n//)}\n//</>\n//);\n//};\n\nconst ConfirmedCasesInSelectedCountriesLineChart = () => {\n  const [data, setData] = useState([\n    {\n      province: \"\",\n      country: \"\",\n      Lat: 0,\n      Long: 0,\n      confirmed: [],\n    },\n  ]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    let isMounted = true;\n\n    async function getData() {\n      try {\n        if (isMounted) setIsLoading(true);\n        const response = await fetch(`/confirmed_timeseries`);\n        const data = await response.json();\n        // Areas selected arbitrarily\n        // TODO: An UI for user to choose which areas to be shown\n        const areas_to_find = [\n          \"US\",\n          \"Brazil\",\n          \"France\",\n          \"Colombia\",\n          \"Russia\",\n          \"South Africa\",\n          \"India\",\n          \"Peru\",\n        ];\n        let areas_data = [];\n        for (let area of areas_to_find) {\n          let found = data.data.find(\n            (obj) =>\n              obj.province === area || (!obj.province && obj.country === area)\n          );\n          areas_data.push(found);\n        }\n        if (isMounted) setData(areas_data);\n        if (isMounted) setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getData();\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return (\n    <>\n      <div className=\"chart-title\">Confirmed Cases in Selected Countries</div>\n      <div className=\"line-chart\">\n        {isLoading ? (\n          <LoadingSpinner />\n        ) : (\n          <V.VictoryChart\n            containerComponent={\n              <V.VictoryVoronoiContainer\n                labels={({ datum }) => datum._y}\n                labelComponent={<V.VictoryTooltip constrainToVisibleArea />}\n              />\n            }\n            padding={{ top: 20, bottom: 40, left: 80, right: 20 }}\n            scale={{ x: \"time\", y: \"linear\" }}\n            minDomain={{ x: 30 }}\n          >\n            <V.VictoryAxis fixLabelOverlap />\n            <V.VictoryAxis\n              dependentAxis\n              fixLabelOverlap\n              style={{\n                grid: {\n                  stroke: \"#f3f5f6\",\n                  strokeWidth: 2,\n                  strokeDasharray: \"15,15\",\n                },\n              }}\n            />\n            <V.VictoryGroup colorScale={\"qualitative\"}>\n              {data.map((d) => (\n                <V.VictoryLine\n                  key={d.province ? d.province : d.country}\n                  data={d.confirmed}\n                />\n              ))}\n            </V.VictoryGroup>\n            <V.VictoryLegend\n              colorScale={\"qualitative\"}\n              orientation=\"horizontal\"\n              itemsPerRow={3}\n              x={80}\n              y={20}\n              data={data.map((d) => ({\n                name: d.province ? d.province : d.country,\n              }))}\n            />\n          </V.VictoryChart>\n        )}\n      </div>\n      <p className=\"footnote\">\n        Source: Johns Hopkins University Center for Systems Science and\n        Engineering (\n        <a href=\"https://github.com/CSSEGISandData/COVID-19\">\n          CSSEGISandData/COVID-19\n        </a>\n        )\n      </p>\n    </>\n  );\n};\n\nconst AreasWithOutstandingCasesTable = () => {\n  const [{ data, isLoading, isError }] = useDataApi(\n    \"https://disease.sh/v2/countries\",\n    []\n  );\n  const [sortBy, setSortBy] = useState(\"cases\");\n  return (\n    <>\n      <div className=\"chart-title\">Areas with Outstanding Cases</div>\n      {isError && <div>Something went wrong</div>}\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          <div className=\"radio-btn-container\">\n            <RadioButton\n              id=\"1\"\n              changed={() => setSortBy(\"cases\")}\n              isSelected={sortBy === \"cases\" ? true : false}\n              label=\"Total cases\"\n            />\n            <RadioButton\n              id=\"2\"\n              changed={() => setSortBy(\"deaths\")}\n              isSelected={sortBy === \"deaths\" ? true : false}\n              label=\"Total deaths\"\n            />\n            <RadioButton\n              id=\"3\"\n              changed={() => setSortBy(\"todayCases\")}\n              isSelected={sortBy === \"todayCases\" ? true : false}\n              label=\"New cases\"\n            />\n            <RadioButton\n              id=\"4\"\n              changed={() => setSortBy(\"todayDeaths\")}\n              isSelected={sortBy === \"todayDeaths\" ? true : false}\n              label=\"New deaths\"\n            />\n          </div>\n          <div className=\"area-data-sets\">\n            {data\n              .sort((a, b) => b[sortBy] - a[sortBy])\n              .slice(0, 12)\n              .map((d) => (\n                <div className=\"data-set\" key={d.country}>\n                  <div className=\"country-name vertical-inverted-title\">\n                    {d.country}\n                  </div>\n                  <div className=\"set-title\">Confirmed</div>\n                  <div className=\"confirmed-count numerical-data\">\n                    {d.cases.toLocaleString()}\n                  </div>\n                  <div className=\"smaller-numbers numerical-data\">\n                    (+{d.todayCases.toLocaleString()})\n                  </div>\n                  <div className=\"set-title\">Deaths</div>\n                  <div className=\"dead-count numerical-data\">\n                    {d.deaths.toLocaleString()}\n                  </div>\n                  <div className=\"smaller-numbers numerical-data\">\n                    (+{d.todayDeaths.toLocaleString()})\n                  </div>\n                  <div className=\"set-title\">Death Rate</div>\n                  <div className=\"current-dead-rate numerical-data\">\n                    {calPercentage(d.deaths, d.cases)}%\n                  </div>\n                </div>\n              ))}\n          </div>\n          <p className=\"footnote\">\n            Source: Johns Hopkins University Center for Systems Science and\n            Engineering (\n            <a href=\"https://github.com/NovelCOVID/API\">NovelCOVID / API</a>)\n          </p>\n        </>\n      )}\n    </>\n  );\n};\n\nconst FatalityRatioByAgeGroupInHubei = () => {\n  const data = [\n    { x: \"0-9\", y: 0.000094 },\n    { x: \"10-19\", y: 0.022 },\n    { x: \"20-29\", y: 0.091 },\n    { x: \"30-39\", y: 0.18 },\n    { x: \"40-49\", y: 0.4 },\n    { x: \"50-59\", y: 1.3 },\n    { x: \"60-69\", y: 4.6 },\n    { x: \"70-79\", y: 9.8 },\n    { x: \"80+\", y: 18 },\n  ];\n  return (\n    <>\n      <div className=\"chart-title\">\n        Fatality Ratio by Age Group in Hubei, China\n      </div>\n      <div className=\"bar-chart\">\n        <V.VictoryChart\n          domainPadding={{ x: 10 }}\n          padding={{ top: 15, bottom: 40, left: 50, right: 50 }}\n        >\n          <V.VictoryAxis\n            dependentAxis\n            style={{\n              grid: {\n                stroke: \"#f3f5f6\",\n                strokeWidth: 2,\n                strokeDasharray: \"15,15\",\n              },\n            }}\n          />\n          <V.VictoryBar\n            horizontal\n            barRatio={0.8}\n            data={data}\n            labels={({ datum }) => datum.y + \"%\"}\n          />\n          <V.VictoryAxis />\n        </V.VictoryChart>\n        <p className=\"footnote\">\n          Source: WHO;{\" \"}\n          <a href=\"https://www.medrxiv.org/content/10.1101/2020.03.04.20031104v1.full.pdf\">\n            \"ADJUSTED AGE-SPECIFIC CASE FATALITY RATIO DURING THE COVID-19\n            EPIDEMIC IN HUBEI, CHINA, JANUARY AND FEBRUARY 2020\" by Riou et al.\"\n          </a>\n        </p>\n      </div>\n    </>\n  );\n};\n\n//const FatalityRateInAnAreaLineChart = ({ area }) => {\n//const [data, setData] = useState({ areaName: \"\", statisticsData: [] });\n//const [isLoading, setIsLoading] = useState(true);\n//useEffect(() => {\n//async function getData() {\n//try {\n//setIsLoading(true);\n//const response = await fetch(`area_timeseries?area=${area}`);\n//const data = await response.json();\n//setData(data);\n//setIsLoading(false);\n//} catch (error) {\n//console.error(error);\n//}\n//}\n//getData();\n//}, [area]);\n//return (\n//<>\n//<div className=\"chart-title\">Fatality Rate in {data.areaName}</div>\n//{isLoading ? (\n//<LoadingSpinner />\n//) : (\n//<>\n//<SmallTable\n//items={[\n//{\n//heading: \"Confirmed\",\n//datum: data.statisticsData.slice(-1)[0].confirmedCount\n//},\n//{\n//heading: \"Deaths\",\n//datum: data.statisticsData.slice(-1)[0].deadCount\n//},\n//{\n//heading: \"Fatality Rate\",\n//datum: data.statisticsData.slice(-1)[0].deathRate + \"%\"\n//}\n//]}\n///>\n//<BarChart data={data.statisticsData} x=\"dateId\" y=\"deathRate\" />\n//<p className=\"footnote\">\n//Source: 丁香園（\n//<a href=\"https://github.com/BlankerL/DXY-COVID-19-Crawler\">\n//DXY-COVID-19-Crawler\n//</a>\n//）\n//</p>\n//</>\n//)}\n//</>\n//);\n//};\n\nconst DailyNewCasesWorldwideLineChart = () => {\n  const VictoryZoomVoronoiContainer = V.createContainer(\"zoom\", \"voronoi\");\n  const transformFn = useCallback((data) => {\n    if (data) {\n      let cases = transposeKeyValue(data.cases);\n      let deaths = transposeKeyValue(data.deaths);\n      let new_cases = calDailyDifference(cases);\n      let new_deaths = calDailyDifference(deaths);\n      return { cases, deaths, new_cases, new_deaths };\n    }\n  }, []);\n  const [{ data, isLoading, isError }] = useDataApi(\n    \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\",\n    [],\n    transformFn\n  );\n  const axis_style = {\n    grid: {\n      stroke: \"#f3f5f6\",\n      strokeWidth: 2,\n      strokeDasharray: \"15,15\",\n    },\n  };\n  return (\n    <>\n      <div className=\"chart-title\">Daily New Cases Worldwide</div>\n      {isError && <div>Something went wrong</div>}\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          <SmallTable\n            items={[\n              {\n                heading: \"2 days ago\",\n                datum: data ? data.new_cases.slice(-2)[0].y : \"loading\",\n              },\n              {\n                heading: \"Yesterday\",\n                datum: data ? data.new_cases.slice(-1)[0].y : \"loading\",\n              },\n              {\n                heading: \"Growth Factor\",\n                datum: data\n                  ? (\n                      data.new_cases.slice(-1)[0].y /\n                      data.new_cases.slice(-2)[0].y\n                    ).toFixed(2)\n                  : \"loading\",\n              },\n            ]}\n          />\n          <div className=\"line-chart\">\n            <V.VictoryChart\n              containerComponent={\n                //<V.VictoryVoronoiContainer\n                //labels={({ datum }) => `${datum.x}: ${datum._y}`}\n                //labelComponent={<V.VictoryTooltip constrainToVisibleArea />}\n                ///>\n                //<V.VictoryZoomContainer\n                //allowZoom={false}\n                //zoomDomain={{ x: [10, 200] }}\n                ///>\n                <VictoryZoomVoronoiContainer\n                  labels={({ datum }) => `${datum.x}: ${datum._y}`}\n                  labelComponent={<V.VictoryTooltip constrainToVisibleArea />}\n                  zoomDomain={{\n                    x: [data.new_cases.length - 120, data.new_cases.length],\n                  }}\n                  zoomDimension=\"x\"\n                />\n              }\n              height={400}\n              padding={{ top: 30, bottom: 40, left: 70, right: 0 }}\n            >\n              <V.VictoryAxis dependentAxis fixLabelOverlap style={axis_style} />\n              <V.VictoryArea data={data.new_cases} />\n              <V.VictoryAxis fixLabelOverlap />\n            </V.VictoryChart>\n          </div>\n          <p className=\"footnote\">\n            Source: Johns Hopkins University Center for Systems Science and\n            Engineering (<a href=\"https://disease.sh/\">Novel COVID API</a>)\n          </p>\n        </>\n      )}\n    </>\n  );\n};\n\nconst WorldwideRecoveryProgressPieChart = () => {\n  const [{ data, isLoading, isError }] = useDataApi(\n    \"https://disease.sh/v2/all\",\n    []\n  );\n  const pieData = [\n    { x: \"Recovered\", y: data.recovered },\n    { x: \"Sick\", y: data.active },\n    { x: \"Deaths\", y: data.deaths },\n  ];\n  return (\n    <>\n      <div className=\"chart-title\">Worldwide Recovery Progress</div>\n      {isError && <div>Something went wrong</div>}\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          <SmallTable items={[{ heading: \"All cases\", datum: data.cases }]} />\n          <div className=\"pie-chart\">\n            <svg className=\"pie\" width={272} height={320}>\n              <V.VictoryLabel\n                textAnchor=\"middle\"\n                x={136}\n                y={160}\n                style={{ fontSize: 28, fill: \"#85b135\" }}\n                text={calPercentage(data.recovered, data.cases) + \"%\"}\n              />\n              <V.VictoryPie\n                colorScale={[\"#85b135\", \"#fb6361\", \"#073f5c\"]}\n                padding={{ left: 68, right: 68 }}\n                innerRadius={52}\n                width={272}\n                height={320}\n                standalone={false}\n                data={pieData}\n                labels={({ datum }) =>\n                  `${datum.x}:\\n${datum.y.toLocaleString()}\\n` +\n                  \"(\" +\n                  calPercentage(datum.y, data.cases) +\n                  \"%)\"\n                }\n              />\n            </svg>\n            <p className=\"footnote\">\n              Source: Johns Hopkins University Center for Systems Science and\n              Engineering (<a href=\"https://disease.sh/\">Novel COVID API</a>)\n            </p>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport {\n  AreasWithOutstandingCasesTable,\n  DailyLineChartInAnArea,\n  //ConfirmedCasesChinaVsWorldLineChart,\n  ConfirmedCasesInSelectedCountriesLineChart,\n  FatalityRatioByAgeGroupInHubei,\n  DailyNewCasesWorldwideLineChart,\n  WorldwideRecoveryProgressPieChart,\n};\n","import React from \"react\";\n\n// SMALL COMPONENTS / HELPER FUNCTIONS\nfunction getToday() {\n  var time = new Date();\n  var year = time.getFullYear();\n  var month = time.getMonth() + 1;\n  var date = time.getDate();\n  var formattedDate = year + \"/\" + month + \"/\" + date;\n  return formattedDate;\n}\n\nexport const AppTitle = () => {\n  return (\n    <div className=\"app-title\">\n      <h1>\n        Covid<span className=\"title-numerals\">-19</span> Dashboard\n      </h1>\n      <h2 className=\"title-date\">{getToday()}</h2>\n    </div>\n  );\n};\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { setCookie } from \"../utils/useCookies\";\n\nexport const NavBar = ({ view, setView }) => {\n  // A series of buttons to switch between views of charts.\n  const buttons = [\n    {\n      name: \"Global\",\n      view_name: \"global\",\n      className: view === \"global\" ? \"active view-button\" : \"view-button\",\n    },\n    {\n      name: \"台灣版\",\n      view_name: \"taiwan\",\n      className: view === \"taiwan\" ? \"active view-button\" : \"view-button\",\n    },\n  ];\n\n  return (\n    <div className=\"nav\">\n      {buttons.map((button) => (\n        <ViewButton setView={setView} {...button} key={button.view_name} />\n      ))}\n    </div>\n  );\n};\n\nconst ViewButton = ({ name, view_name, className, setView }) => {\n  // A series of buttons to switch between views of charts.\n  const handleClick = (e) => {\n    e.preventDefault();\n    setCookie(\"view\", view_name);\n    setView(view_name);\n  };\n  // Changes the button label according to current view.\n  return (\n    <button onClick={handleClick} type=\"button\" className={className}>\n      {name}\n    </button>\n  );\n};\n","import React from \"react\";\nimport styles from \"./OverviewPie.module.css\";\nexport const ColorLegend = ({\n  colorScale,\n  tickSpacing = 20,\n  tickSize = 10,\n  tickTextOffset = 20,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  colorScale.domain().map((domainValue, index) => (\n    <g\n      key={colorScale(domainValue)}\n      className={styles.legend}\n      transform={`translate(0, ${index * tickSpacing})`}\n      onMouseEnter={() => onHover(domainValue)}\n      onMouseLeave={() => onHover(null)}\n      opacity={hoveredValue && domainValue !== hoveredValue ? fadeOpacity : 1}\n    >\n      <circle fill={colorScale(domainValue)} r={tickSize}></circle>\n      <text dy=\".32em\" x={tickTextOffset}>\n        {domainValue}\n      </text>\n    </g>\n  ));\n","import React from \"react\";\n\nexport const DataTable = ({ items, dataType, dataValue }) => {\n  return (\n    <div className=\"small-table\">\n      <table>\n        <thead>\n          <tr>\n            <th>Total</th>\n            {/* {items.map((item) => ( */}\n            {/*   <th key={dataType(item)}>{dataType(item)}</th> */}\n            {/* ))} */}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className=\"numerical-data\">\n              {items.reduce((acc, cur) => acc + cur.value, 0).toLocaleString()}\n            </td>\n            {/* {items.map((item, index) => ( */}\n            {/*   <td className=\"numerical-data\" key={index}> */}\n            {/*     {dataValue(item).toLocaleString()} */}\n            {/*   </td> */}\n            {/* ))} */}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from \"react\";\n// import { select, transition, easeLinear } from \"d3\";\nexport const PieLabel = ({\n  pieLabelPosition,\n  dataValue,\n  d,\n  percentage,\n  className,\n  labelOffsetY = 18,\n}) => {\n  // const ref = useRef(null);\n  // useEffect(() => {\n  //   const textG = select(ref.current)\n  //     .append(\"text\")\n  //     .attr(\"x\", 0)\n  //     .attr(\"y\", 0)\n  //     .style(\"fill\", \"red\");\n  //   textG.enter().text(\"huh\");\n  // }, []);\n  return (\n    <>\n      <text\n        className={className}\n        transform={`translate(${pieLabelPosition})`}\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        <tspan className=\"num\" x=\"0\" dy={-labelOffsetY} fill=\"black\">\n          {percentage}%\n        </tspan>\n        <tspan x=\"0\" dy={labelOffsetY} fill=\"#635F5D\">\n          {dataValue(d.data).toLocaleString()}\n        </tspan>\n      </text>\n      {/* <svg ref={ref.current} id=\"test\"></svg> */}\n    </>\n  );\n};\n","import React from \"react\";\nimport { sum } from \"d3\";\nimport styles from \"./OverviewPie.module.css\";\nimport { PieLabel } from \"./PieLabel.jsx\";\nexport const PieChart = ({\n  pieData,\n  pieArc,\n  colorPie,\n  colorValue,\n  dataType,\n  dataValue,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  colorPie(pieData).map((d) => {\n    const domainValue = dataType(d.data);\n    let pieLabelPosition = pieArc.centroid(d);\n    if (d.endAngle - d.startAngle < 0.25) {\n      pieLabelPosition[0] *= 2.2;\n      pieLabelPosition[1] *= 2.2;\n    }\n    const dataPercentage = (\n      (dataValue(d.data) / sum(pieData, (d) => d.value)) *\n      100\n    ).toFixed(1);\n    return (\n      <g\n        className={styles.pieChart}\n        opacity={hoveredValue && domainValue !== hoveredValue ? fadeOpacity : 1}\n        onMouseEnter={() => onHover(domainValue)}\n        onClick={() => onHover(domainValue)}\n        onMouseLeave={() => onHover(null)}\n        key={dataType(d.data)}\n      >\n        <path fill={colorValue(d.data)} d={pieArc(d)} />\n        <PieLabel\n          pieLabelPosition={pieLabelPosition}\n          dataValue={dataValue}\n          d={d}\n          percentage={dataPercentage}\n          className={styles.pieLabelStroke}\n        />\n        <PieLabel\n          pieLabelPosition={pieLabelPosition}\n          dataValue={dataValue}\n          d={d}\n          percentage={dataPercentage}\n          className={styles.pieLabel}\n        />\n      </g>\n    );\n  });\n","import React from \"react\";\nexport const Collapsible = ({ children, id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        What does this chart tell us?\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">{children}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { arc, pie, scaleOrdinal } from \"d3\";\nimport styles from \"./OverviewPie.module.css\";\nimport { useData } from \"./useData\";\nimport { LoadSpinner } from \"../elements/CommonUIs\";\nimport { ColorLegend } from \"./ColorLegend\";\nimport { DataTable } from \"./DataTable\";\nimport { PieChart } from \"./PieChart\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.6 : width * 0.7;\nconst pieRadius = (width * 0.66) / 2;\nconst pieOuterMargin = pieRadius * 0.7;\n\nconst legendCircleRadius = 8;\nconst legendItemSpacing = 26;\nconst fadeOpacity = 0.3;\n\nconst legendX = width * 0.66;\nconst legendY = height / 2;\n\nconst pieArc = arc().innerRadius(0).outerRadius(pieOuterMargin);\n\nconst dataType = (d) => d.case;\nconst dataValue = (d) => d.value;\nconst colorValue = (d) => d.color;\n\nconst title = \"Worldwide Cases Overview\";\nconst ColorLegendLabel = \"Cases\";\n\nexport const OverviewPie = () => {\n  const [hoveredValue, setHoveredValue] = useState(null);\n\n  const data = useData();\n  if (!data) return <LoadSpinner />;\n  const pieData = [\n    {\n      case: \"Deaths\",\n      value: data.deaths,\n      color: \"#BD2D28\",\n    },\n    {\n      case: \"Recovered\",\n      value: data.recovered,\n      color: \"#6BBBA1\",\n    },\n    {\n      case: \"Active\",\n      value: data.active,\n      color: \"#E25A42\",\n    },\n  ];\n  const colorPie = pie().sort(null).value(dataValue);\n\n  const colorScale = scaleOrdinal()\n    .domain(pieData.map(dataType))\n    .range(pieData.map(colorValue));\n\n  const ChartTitle = ({ title }) => <div className=\"chart-title\">{title}</div>;\n\n  const SourceCredit = () => (\n    <p className=\"footnote\">\n      Data source: Worldometers (\n      <a href=\"https://github.com/disease-sh/api\">disease.sh</a>)\n    </p>\n  );\n\n  return (\n    <>\n      <ChartTitle title={title} />\n      <DataTable items={pieData} dataType={dataType} dataValue={dataValue} />\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        <g transform={`translate(${pieRadius},${height / 2})`}>\n          <PieChart\n            pieData={pieData}\n            colorPie={colorPie}\n            colorValue={colorValue}\n            pieArc={pieArc}\n            dataType={dataType}\n            dataValue={dataValue}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n        <g transform={`translate(${legendX}, ${legendY})`}>\n          <text className={styles.legendLabel} x={-7} y={-legendItemSpacing}>\n            {ColorLegendLabel}\n          </text>\n          <ColorLegend\n            colorScale={colorScale}\n            tickSpacing={legendItemSpacing}\n            tickSize={legendCircleRadius}\n            tickTextOffset={16}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n      </svg>\n      <Collapsible id={title}>\n        <p>\n          This chart gives a rough overview of COVID-19 pandemic currently\n          spreading around the world. The total number at the top left corner\n          shows a number of confirmed cases ever tested positive. Since not\n          everyone has been tested, this can only represent the cases we know so\n          far.\n        </p>\n        <p>\n          All tested positive cases are further divided into three categories as\n          shown in the pie chart: active, recovered, and deaths. The recovered\n          percentage is intended to give us an idea of how far we are from\n          global recovery. The \"clock\", however, can turn back when the virus is\n          spreading rapidly. Active cases represents the people still suffering\n          from the disease. Most active cases will recover, but some will not.\n          According to{\" \"}\n          <a href=\"https://www.nytimes.com/interactive/2020/world/asia/china-coronavirus-contain.html\">\n            an early report{\" \"}\n          </a>\n          by <i>the New York Times</i>, the fatality rate for those infected is\n          likely to be lower than 3%.\n        </p>\n        <SourceCredit />\n      </Collapsible>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\n\nconst jsonUrl = \"https://disease.sh/v3/covid-19/all\";\n\n// Use JSON data\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // console.log(data);\n\n  useEffect(() => {\n    let isMounted = true;\n    json(jsonUrl).then((d) => {\n      if (isMounted) setData(d);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import { useState, useEffect } from \"react\";\nimport { csv, timeParse } from \"d3\";\n\nconst csvUrl =\n  \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/jhu/new_cases.csv\";\n\nconst parseDay = timeParse(\"%Y-%m-%d\");\n\nconst transform = (rawData) => {\n  return rawData.map((d) => ({\n    date: parseDay(d.date),\n    newCases: +d.World,\n  }));\n};\n\n// Data: Covid daily new_cases\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n  useEffect(() => {\n    let isMounted = true;\n    csv(csvUrl).then((rawData) => {\n      if (isMounted) setData(transform(rawData));\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import React from \"react\";\n\nexport const ChartTitle = ({ title }) => (\n  <div className=\"chart-title\">{title}</div>\n);\n","import React from \"react\";\n\nexport const DataTable = ({ items }) => {\n  return (\n    <div className=\"small-table\">\n      <table>\n        <thead>\n          <tr>\n            {items.map((item, index) => (\n              <th key={index}>{item.heading}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {items.map((item, index) => (\n              <td className=\"numerical-data\" key={index}>\n                {item.value}\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom } from \"d3\";\nimport styles from \"./LineChart.module.css\";\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickCount = 6,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  useEffect(() => {\n    const xAxisG = select(ref.current);\n    const xAxis = axisBottom(xScale)\n      .ticks(tickCount, tickFormat)\n      .tickSize(-innerHeight)\n      .tickPadding(tickOffset);\n    xAxisG.call(xAxis);\n  }, [xScale, innerHeight, tickFormat, tickOffset, tickCount]);\n  return (\n    <g\n      ref={ref}\n      className={styles.tick}\n      transform={`translate(0, ${innerHeight})`}\n    />\n  );\n};\n\n// export const AxisBottom = ({\n//   xScale,\n//   innerHeight,\n//   tickFormat,\n//   tickOffset = 3\n// }) =>\n//   // Label and reference lines for x scale\n//   xScale.ticks().map(tickValue => (\n//     // Each tick goes to the position indicating its value\n//     <g\n//       className={styles.tick}\n//       key={tickValue}\n//       transform={`translate(${xScale(tickValue)}, 0)`}\n//     >\n//       {/* the values of x1, x2, y1 are 0, which is default */}\n//       <line y2={innerHeight} />\n//       <text\n//         y={innerHeight + tickOffset}\n//         dy=\"0.71em\"\n//         style={{ textAnchor: \"middle\" }}\n//       >\n//         {tickFormat(tickValue)}\n//       </text>\n//     </g>\n//   ));\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisLeft } from \"d3\";\nimport styles from \"./LineChart.module.css\";\n\nexport const AxisLeft = ({\n  yScale,\n  innerWidth,\n  tickFormat,\n  tickOffset = 3,\n}) => {\n  const ref = useRef();\n  useEffect(() => {\n    const yAxisG = select(ref.current);\n    const yAxis = axisLeft(yScale)\n      .tickSize(innerWidth)\n      .tickPadding(tickOffset)\n      .tickFormat(tickFormat);\n    yAxisG.call(yAxis);\n  }, [yScale, innerWidth, tickFormat, tickOffset]);\n  return (\n    <g\n      ref={ref}\n      className={styles.tick}\n      transform={`translate(${innerWidth}, 0)`}\n    />\n  );\n};\n","import React from \"react\";\nimport styles from \"./LineChart.module.css\";\nexport const XMarkerLine = ({ value, xScale, innerHeight }) => {\n  const markerLineX = xScale(value);\n  const markerLineY1 = 0;\n  const markerLineY2 = innerHeight;\n  return (\n    <line\n      className={styles.markerLine}\n      x1={markerLineX}\n      y1={markerLineY1}\n      x2={markerLineX}\n      y2={markerLineY2}\n    />\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { Delaunay } from \"d3-delaunay\";\nimport styles from \"./LineChart.module.css\";\nexport const VoronoiOverlay = ({\n  margin,\n  data,\n  areaGenerator,\n  onHover,\n  innerWidth,\n  innerHeight,\n}) => {\n  // console.log(data);\n  return useMemo(() => {\n    const points = data.map((d) => [\n      areaGenerator.x()(d),\n      areaGenerator.y()(d),\n    ]);\n    const delaunay = Delaunay.from(points);\n    const voronoi = delaunay.voronoi([\n      0,\n      0,\n      innerWidth + margin.right,\n      innerHeight,\n    ]);\n    return (\n      <g className={styles.voronoi}>\n        {points.map((point, i) => (\n          <path\n            key={i}\n            onPointerEnter={() => onHover(data[i])}\n            d={voronoi.renderCell(i)}\n          />\n        ))}\n      </g>\n    );\n  }, [data, areaGenerator, innerHeight, innerWidth, onHover, margin.right]);\n};\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport {\n  scaleLinear,\n  scaleTime,\n  area,\n  timeFormat,\n  extent,\n  max,\n  format,\n  curveNatural,\n} from \"d3\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { XMarkerLine } from \"./XMarkerLine\";\nimport { VoronoiOverlay } from \"./VoronoiOverlay\";\nimport styles from \"./LineChart.module.css\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.6 : width * 0.8;\nconst margin = { top: 20, right: 0, bottom: 40, left: 65 };\n\nconst xValue = (d) => d.date;\nconst xAxisTickFormat = timeFormat(\"%b, %Y\");\nconst xTooltipFormat = timeFormat(\"%-m/%-d, %y\");\n\nconst yValue = (d) => d.newCases;\n// const yAxisLabel = \"New cases\";\n// const yAxisLabelOffset = 60;\nconst siFormat = format(\".2s\");\nconst yAxisTickFormat = (tickValue) => siFormat(tickValue);\n\nexport const LineChart = ({ data }) => {\n  // Change state when different point is hovered\n  const [activeData, setActiveData] = useState(data[data.length - 1]);\n\n  // The chart's real height and width\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  // X axis is population, thus use linear scale\n  const xScale = useMemo(\n    () =>\n      scaleTime()\n        // Domain is an array of actual dates\n        // d3.extent(iterable[, accessor]) returns the [max, min] of iterable\n        .domain(extent(data, xValue))\n        // Range is where the data is shown in pixels, starts from 0 to chart's width\n        .range([0, innerWidth])\n        .nice(),\n    [data, innerWidth]\n  );\n\n  // Y is countries is categorical, band scale is for ordinal or categorical dimension\n  const yScale = useMemo(\n    () =>\n      scaleLinear()\n        .domain([0, max(data, yValue)])\n        .range([innerHeight, 0])\n        .nice(),\n    [data, innerHeight]\n  );\n\n  const handleVoronoiHover = useCallback(setActiveData, [setActiveData]);\n\n  const areaGenerator = useMemo(\n    () =>\n      area()\n        .x((d) => xScale(xValue(d)))\n        .y1((d) => yScale(yValue(d)))\n        .y0(yScale(0))\n        .curve(curveNatural),\n    [xScale, yScale]\n  );\n\n  const Tooltip = ({ activeData, className }) => (\n    <text className={className} textAnchor={\"end\"} x={0} y={-5}>\n      <tspan x=\"-10\" dy=\"0\" fontWeight=\"bold\">\n        {activeData.newCases.toLocaleString()}\n      </tspan>\n      <tspan x=\"-10\" dy=\"1.5em\">\n        {xTooltipFormat(activeData.date)}\n      </tspan>\n    </text>\n  );\n  return (\n    <>\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        {/* Adds margin to left and top  */}\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom\n            innerHeight={innerHeight}\n            xScale={xScale}\n            tickFormat={xAxisTickFormat}\n            tickOffset={7}\n            tickCount={width > 480 ? 6 : 2}\n          />\n          <AxisLeft\n            innerWidth={innerWidth}\n            yScale={yScale}\n            tickOffset={7}\n            tickFormat={yAxisTickFormat}\n          />\n          {/* <text */}\n          {/*   className={styles.axisLabel} */}\n          {/*   textAnchor=\"middle\" */}\n          {/*   transform={`translate(${-yAxisLabelOffset}, ${ */}\n          {/*     innerHeight / 2 */}\n          {/*   }) rotate(-90)`} */}\n          {/* > */}\n          {/*   {yAxisLabel} */}\n          {/* </text> */}\n          <g className={styles.marks}>\n            <path d={areaGenerator(data)} />\n          </g>\n          {activeData ? (\n            <>\n              <g className={styles.marks}>\n                <path d={areaGenerator(data)} />\n              </g>\n              <XMarkerLine\n                value={activeData.date}\n                xScale={xScale}\n                innerHeight={innerHeight}\n              />\n              <g\n                transform={`translate(${areaGenerator.x()(\n                  activeData\n                )}, ${areaGenerator.y1()(activeData)})`}\n              >\n                <circle className={styles.dataPoint} r={5} />\n                <Tooltip\n                  activeData={activeData}\n                  className={styles.tooltipStroke}\n                />\n                <Tooltip activeData={activeData} className={styles.tooltip} />\n              </g>\n            </>\n          ) : null}\n          <VoronoiOverlay\n            margin={margin}\n            onHover={handleVoronoiHover}\n            data={data}\n            areaGenerator={areaGenerator}\n            innerWidth={innerWidth}\n            innerHeight={innerHeight}\n          />\n        </g>\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\nexport const Collapsible = ({ children, id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        What does this chart tell us?\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">{children}</div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"./useData\";\nimport { LoadSpinner } from \"../elements/CommonUIs\";\nimport { ChartTitle } from \"./ChartTitle\";\nimport { DataTable } from \"./DataTable\";\nimport { LineChart } from \"./LineChart\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst sumValuesInObject = (data, key) =>\n  data.reduce(\n    (prev, cur) => prev + cur[key],\n    0 // initialValue\n  );\n\nconst title = \"Daily New Cases Worldwide\";\n\nconst SourceCredit = () => (\n  <p className=\"footnote\">\n    Data source: Center for Systems Science and Engineering (CSSE) at Johns\n    Hopkins University (\n    <a href=\"https://github.com/owid/covid-19-data/tree/master/public/data/jhu\">\n      Our Wolrd in Data\n    </a>\n    )\n  </p>\n);\n\nexport const CasesLineChart = () => {\n  const data = useData();\n  if (!data) return <LoadSpinner />;\n  // if (data) console.log(data);\n  const lastSevenDaysAvg = sumValuesInObject(data.slice(-7), \"newCases\") / 7;\n\n  const beforeSevenDaysAvg =\n    sumValuesInObject(data.slice(-14, -7), \"newCases\") / 7;\n\n  const tableData = [\n    {\n      heading: \"Average previous week\",\n      value: Math.round(beforeSevenDaysAvg).toLocaleString(),\n    },\n    {\n      heading: \"Average this week\",\n      value: Math.round(lastSevenDaysAvg).toLocaleString(),\n    },\n    {\n      heading: \"Growth factor\",\n      value: (lastSevenDaysAvg / beforeSevenDaysAvg).toFixed(2),\n    },\n  ];\n\n  return (\n    <>\n      <ChartTitle title={title} />\n      <DataTable items={tableData} />\n      <LineChart data={data} />\n      <Collapsible id={title}>\n        <p>\n          This chart is intended to show how fast the viruses are spreading over\n          time. Each data point represents the number of people tested positive\n          on that day, therefore \"new cases\".\n        </p>\n        <p>\n          During a contagious disease's growing period, an infected person is\n          likely to spread the virus to more than one healthy person, so the\n          latter days will see more new cases than the previous days. For\n          example, if we have 10 new cases today but only 5 new cases yesterday,\n          it can mean each of those 5 people passed the disease to 2 more people\n          during the day. So, the \"2\" is the \"growth factor\" listed here above\n          the chart. Only when the growth factor constantly goes below 1, have\n          we the chance to see an end to the pandemic.\n        </p>\n        <p>\n          Since most societies work in a weekly basis, we can see the data\n          regularly fluctuates inside of a week. To avoid misintepretation, this\n          chart calculates the growth factor with weekly averages.\n        </p>\n        <SourceCredit />\n      </Collapsible>\n    </>\n  );\n};\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickOffset = 3,\n  tickCount = 6,\n}) =>\n  // Label and reference lines for x scale\n  xScale.ticks(tickCount).map((tickValue) => (\n    // Each tick goes to the position indicating its value\n    <g\n      className={styles.tick}\n      key={tickValue}\n      transform={`translate(${xScale(tickValue)}, 0)`}\n    >\n      {/* the values of x1, x2, y1 are 0, which is default */}\n      <line y2={innerHeight} />\n      <text\n        y={innerHeight + tickOffset}\n        dy=\"0.71em\"\n        style={{ textAnchor: \"middle\" }}\n      >\n        {tickFormat(tickValue)}\n      </text>\n    </g>\n  ));\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\nexport const AxisLeft = ({\n  countryScale,\n  ageScale,\n  width,\n  margin,\n  tickOffset = 3,\n}) =>\n  ageScale.domain().map((tickValue) => (\n    <g\n      key={tickValue}\n      className={styles.tick}\n      transform={`translate(0,${\n        ageScale(tickValue) + ageScale.bandwidth() / 2\n      })`}\n    >\n      <rect\n        x={-margin.left}\n        y={-ageScale.bandwidth() / 2 - 4}\n        width={width}\n        height={ageScale.bandwidth() + 8}\n      />\n      <text\n        dy=\".32em\"\n        x={-margin.left + tickOffset}\n        style={{ fontSize: \"1.1em\", fontWeight: \"bold\", textAnchor: \"start\" }}\n      >\n        {tickValue}\n      </text>\n      {countryScale.domain().map((tickValue) => (\n        <text\n          key={tickValue}\n          dy=\".72em\"\n          x={-tickOffset}\n          y={countryScale(tickValue) - ageScale.bandwidth() / 2}\n          style={{ textAnchor: \"end\", dominantBaseline: \"middle\" }}\n        >\n          {tickValue}\n        </text>\n      ))}\n    </g>\n  ));\n","import React from \"react\";\nimport styles from \"./BarChart.module.css\";\nexport const Marks = ({\n  data,\n  ageGroups,\n  ageScale,\n  xScale,\n  countryScale,\n  countryValue,\n  colorScale,\n  tooltipFormat,\n  onHover,\n  hoveredValue,\n  fadeOpacity = 0.2,\n}) =>\n  data.map((d) =>\n    ageGroups.map((key) => (\n      <g\n        key={countryValue(d) + key}\n        className={styles.marks}\n        onMouseEnter={() => onHover(countryValue(d))}\n        onMouseLeave={() => onHover(null)}\n        opacity={\n          hoveredValue && hoveredValue !== countryValue(d) ? fadeOpacity : 1\n        }\n      >\n        <rect\n          x={0}\n          y={ageScale(key) + countryScale(countryValue(d))}\n          width={xScale(d[key])}\n          height={countryScale.bandwidth()}\n          fill={colorScale(countryValue(d))}\n        >\n          <title>{`${key}: ${tooltipFormat(d[key])}`}</title>\n        </rect>\n        <text\n          x={xScale(d[key]) + 3}\n          y={ageScale(key) + countryScale(countryValue(d))}\n          dy=\".68em\"\n          style={{ textAnchor: \"start\", dominantBaseline: \"middle\" }}\n        >\n          {tooltipFormat(d[key])}\n        </text>\n      </g>\n    ))\n  );\n","import React, { useState, useMemo } from \"react\";\nimport { scaleBand, scaleLinear, scaleOrdinal, max, schemeTableau10 } from \"d3\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { Marks } from \"./Marks\";\n// import { ColorLegend } from \"./ColorLegend\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.9 : width * 2;\nconst margin = { top: 20, right: 40, bottom: 30, left: 170 };\n\nconst countryValue = (d) => d.Country;\nconst xAxisTickFormat = (tickValue) => tickValue + \"%\";\n\n// The chart's real height and width\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\n\n// Legend settings\n// const legendX = width * 0.7;\n// const legendY = innerHeight / 2;\n// const ColorLegendLabel = \"Countries\";\n\n// const circleRadius = 8;\n// const legendItemSpacing = 26;\nconst fadeOpacity = 0.3;\n\nexport const BarChart = ({ data }) => {\n  const [hoveredValue, setHoveredValue] = useState(null);\n  const ageGroups = data.columns.slice(1);\n\n  // X axis is percentage of deaths, thus use linear scale\n  const xScale = useMemo(\n    () =>\n      scaleLinear()\n        // Domain is an array of actual data, starts from 0 to the max of all countries\n        // d3.max(iterable[, accessor])\n        .domain([0, max(data, (d) => max(ageGroups, (key) => d[key]))])\n        // Range is where the data is shown in pixels, starts from 0 to chart's width\n        .range([0, innerWidth])\n        .nice(),\n    [ageGroups, data]\n  );\n\n  const ageScale = useMemo(\n    () =>\n      scaleBand().domain(ageGroups).range([0, innerHeight]).paddingInner(0.15),\n    [ageGroups]\n  );\n\n  // Y is countries is categorical, band scale is for ordinal or categorical dimension\n  const countryScale = useMemo(\n    () =>\n      scaleBand()\n        .domain(data.map(countryValue))\n        .range([ageScale.bandwidth(), 0])\n        .paddingInner(0.1),\n    [ageScale, data]\n  );\n\n  const colorScale = useMemo(\n    () => scaleOrdinal().domain(data.map(countryValue)).range(schemeTableau10),\n    [data]\n  );\n\n  return (\n    <>\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        {/* Adds margin to left and top  */}\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom\n            innerHeight={innerHeight}\n            xScale={xScale}\n            tickFormat={xAxisTickFormat}\n            tickOffset={8}\n          />\n          <AxisLeft\n            countryScale={countryScale}\n            ageScale={ageScale}\n            margin={margin}\n            width={width}\n          />\n          <Marks\n            data={data}\n            ageScale={ageScale}\n            ageGroups={ageGroups}\n            xScale={xScale}\n            countryScale={countryScale}\n            countryValue={countryValue}\n            colorScale={colorScale}\n            tooltipFormat={xAxisTickFormat}\n            onHover={setHoveredValue}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n        </g>\n        {/* <g transform={`translate(${legendX}, ${legendY})`}> */}\n        {/*   <text className={styles.legendLabel} x={-7} y={-legendItemSpacing}> */}\n        {/*     {ColorLegendLabel} */}\n        {/*   </text> */}\n        {/*   <ColorLegend */}\n        {/*     colorScale={colorScale} */}\n        {/*     tickSpacing={legendItemSpacing} */}\n        {/*     tickSize={circleRadius} */}\n        {/*     tickTextOffset={16} */}\n        {/*     onHover={setHoveredValue} */}\n        {/*     hoveredValue={hoveredValue} */}\n        {/*     fadeOpacity={fadeOpacity} */}\n        {/*   /> */}\n        {/* </g> */}\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\n\nconst SourceCredit = () => (\n  <>\n    <p className=\"footnote\">\n      Data sources: Chinese Center for Disease Control and Prevention (CDC);\n      Spanish Ministry of Health; Korea Centers for Disease Control and\n      Prevention (KCDC); Onder G, Rezza G, Brusaferro S. Case-Fatality Rate and\n      Characteristics of Patients Dying in Relation to COVID-19 in Italy. JAMA.\n      (This is a remake of{\" \"}\n      <a href=\"https://ourworldindata.org/mortality-risk-covid#case-fatality-rate-of-covid-19-by-age\">\n        the same chart\n      </a>{\" \"}\n      by Hannah Ritchie and Max Roser published in OurWorldinData.org)\n    </p>\n    <p className=\"footnote\">\n      Licensed under CC-BY by the authors Hannah Ritchie and Max Roser.\n    </p>\n  </>\n);\n\nexport const Collapsible = ({ id }) => {\n  return (\n    <div className=\"wrap-collapsible\">\n      <input id={id} className=\"toggle\" type=\"checkbox\" />\n      <label htmlFor={id} className=\"lbl-toggle\">\n        What does this chart tell us?\n      </label>\n      <div className=\"collapsible-content\">\n        <div className=\"content-inner\">\n          <p>\n            This chart gives us a rough idea of which age groups are most at\n            risk to COVID-19. If we know which groups are most likely to die\n            from the disease, precautions and resouces like vaccines can be\n            directed to the ones who need them most. According to this chart,\n            the elderly are most likely to die from COVID-19.\n          </p>\n          <p>\n            The data presented in the chart are calculated from the number of\n            deaths divided by the number of confirmed cases in each age group.\n            Since COVID-19 is still an ongoing pandemic, these numbers can\n            change over time and conditions. There are two main limitations to\n            keep in mind when interpreting this chart:\n          </p>\n          <ol>\n            <li>\n              Since not everyone is tested within the population, we do not know\n              the real number of infected cases.\n            </li>\n            <li>\n              Some infected individuals are still alive at the time of\n              recording, but will eventually die from the disease.\n            </li>\n          </ol>\n          <SourceCredit />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"./useData\";\nimport { BarChart } from \"./BarChart\";\nimport { LoadSpinner } from \"../elements/CommonUIs\";\nimport { Collapsible } from \"./Collapsible\";\n\nconst ChartTitle = ({ title }) => <div className=\"chart-title\">{title}</div>;\n\nexport const CaseFatalityRatesByAgeBarChart = () => {\n  const data = useData();\n  if (!data) return <LoadSpinner />;\n\n  return (\n    <>\n      <ChartTitle title=\"Case fatality rates by age\" />\n      <BarChart data={data} />\n      <Collapsible id=\"caseFatalityRetes\" />\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { csv, autoType } from \"d3\";\n\nconst csvUrl =\n  \"https://gist.githubusercontent.com/mgeorgetw/965bfe365ab8e70e2ee34c9a5d4d594a/raw/COVID19CaseFatalityRatesByAge.csv\";\n\n// Data: Case Fatality Rates By Age\n// https://ourworldindata.org/mortality-risk-covid#case-fatality-rate-of-covid-19-by-age\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n\n  useEffect(() => {\n    let isMounted = true;\n    csv(csvUrl, autoType).then((data) => {\n      if (isMounted) setData(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport \"./App.css\";\nimport { cookieExists, setCookie, findCookie } from \"./utils/useCookies\";\n\nimport { TaiwanView } from \"./TaiwanView/index\";\nimport * as Charts from \"./Charts.js\";\nimport { Card, Footer } from \"./elements/CommonUIs\";\nimport { AppTitle } from \"./elements/AppTitle\";\nimport { NavBar } from \"./elements/NavBar\";\nimport { OverviewPie } from \"./OverviewPie/index\";\nimport { CasesLineChart } from \"./CasesLineChart/index\";\nimport { CaseFatalityRatesByAgeBarChart } from \"./CaseFatalityRatesByAgeBarChart/index\";\n\n// Pull to refresh\nimport PullToRefresh from \"pulltorefreshjs\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst area = \"Taiwan\";\n\nconst GlobalView = () => (\n  <ul className=\"flex-card-list\">\n    <Card>\n      <OverviewPie />\n    </Card>\n    <Card>\n      <CasesLineChart />\n    </Card>\n    {/* <Card> */}\n    {/*   <Charts.WorldwideRecoveryProgressPieChart /> */}\n    {/* </Card> */}\n    {/* <Card> */}\n    {/*   <Charts.DailyNewCasesWorldwideLineChart /> */}\n    {/* </Card> */}\n    <Card>\n      <Charts.AreasWithOutstandingCasesTable />\n    </Card>\n    <Card>\n      <Charts.DailyLineChartInAnArea area={area} chart_type=\"newCases\" />\n    </Card>\n    <Card>\n      <Charts.DailyLineChartInAnArea area={area} chart_type=\"newDeaths\" />\n    </Card>\n    {/* <Card> */}\n    {/*   <Charts.ConfirmedCasesInSelectedCountriesLineChart /> */}\n    {/* </Card> */}\n    <Card>\n      <CaseFatalityRatesByAgeBarChart />\n    </Card>\n  </ul>\n);\n\nconst App = () => {\n  const [view, setView] = useState(\"global\");\n  useEffect(() => {\n    // Checks if there's a cookie for view, if not, set it to Indices View\n    if (cookieExists(\"view\")) {\n      // Set view according to cookie, if exists\n      setView(findCookie(\"view\"));\n    } else {\n      setCookie(\"view\", \"global\");\n    }\n\n    PullToRefresh.init({\n      mainElement: \"body\",\n      onRefresh() {\n        window.location.reload();\n      },\n      iconArrow: ReactDOMServer.renderToString(\n        <FontAwesomeIcon icon={faSyncAlt} />\n      ),\n      iconRefreshing: ReactDOMServer.renderToString(\n        <FontAwesomeIcon icon={faSyncAlt} spin={true} />\n      ),\n    });\n    return () => {\n      PullToRefresh.destroyAll();\n    };\n  }, []);\n  return (\n    <div className=\"App\">\n      <AppTitle />\n      <NavBar view={view} setView={setView} />\n      {view === \"global\" ? <GlobalView /> : <TaiwanView />}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./fonts/NotoSansMono-CondensedBold.ttf\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}